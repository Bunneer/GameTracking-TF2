 B CDispCornerNeighbors_DataDescInit::g_DataMapHolder
 B CDispNeighbor_DataDescInit::g_DataMapHolder
 B CDispSubNeighbor_DataDescInit::g_DataMapHolder
 B CDispTri_DataDescInit::g_DataMapHolder
 B CDispVert_DataDescInit::g_DataMapHolder
 B CFaceMacroTextureInfo_DataDescInit::g_DataMapHolder
 B CUtlSymbol::s_pSymbolTable
 B CompressedLightCube_DataDescInit::g_DataMapHolder
 B ConCommandBase::s_pAccessor
 B ConCommandBase::s_pConCommandBases
 B DetailObjectDictLump_t_DataDescInit::g_DataMapHolder
 B DetailObjectLump_t_DataDescInit::g_DataMapHolder
 B DetailPropLightstylesLump_t_DataDescInit::g_DataMapHolder
 B DetailSpriteDictLump_t_DataDescInit::g_DataMapHolder
 B HardwareVerts::FileHeader_t_DataDescInit::g_DataMapHolder
 B HardwareVerts::MeshHeader_t_DataDescInit::g_DataMapHolder
 B InterfaceReg::s_pInterfaceRegs
 B SinCosTable
 B StaticPropDictLump_t_DataDescInit::g_DataMapHolder
 B StaticPropLeafLump_t_DataDescInit::g_DataMapHolder
 B StaticPropLumpV4_t_DataDescInit::g_DataMapHolder
 B StaticPropLumpV5_t_DataDescInit::g_DataMapHolder
 B StaticPropLump_t_DataDescInit::g_DataMapHolder
 B ZIP_EndOfCentralDirRecord_DataDescInit::g_DataMapHolder
 B ZIP_FileHeader_DataDescInit::g_DataMapHolder
 B ZIP_LocalFileHeader_DataDescInit::g_DataMapHolder
 B ZIP_PreloadDirectoryEntry_DataDescInit::g_DataMapHolder
 B ZIP_PreloadHeader_DataDescInit::g_DataMapHolder
 B cvar
 B darea_t_DataDescInit::g_DataMapHolder
 B dareaportal_t_DataDescInit::g_DataMapHolder
 B dareaportals
 B dareas
 B dbrush_t_DataDescInit::g_DataMapHolder
 B dbrushes
 B dbrushside_t_DataDescInit::g_DataMapHolder
 B dbrushsides
 B dcubemapsample_t_DataDescInit::g_DataMapHolder
 B ddispinfo_t_DataDescInit::g_DataMapHolder
 B dedge_t_DataDescInit::g_DataMapHolder
 B dedges
 B dentdata
 B dface_t_DataDescInit::g_DataMapHolder
 B dfaceid_t_DataDescInit::g_DataMapHolder
 B dfaceids
 B dfaces
 B dfaces_hdr
 B dflagslump_t_DataDescInit::g_DataMapHolder
 B dgamelump_t_DataDescInit::g_DataMapHolder
 B dgamelumpheader_t_DataDescInit::g_DataMapHolder
 B dheader_t_DataDescInit::g_DataMapHolder
 B dleaf_t_DataDescInit::g_DataMapHolder
 B dleaf_version_0_t_DataDescInit::g_DataMapHolder
 B dleafambientindex_t_DataDescInit::g_DataMapHolder
 B dleafambientlighting_t_DataDescInit::g_DataMapHolder
 B dleafbrushes
 B dleaffaces
 B dleafs
 B dleafwaterdata
 B dleafwaterdata_t_DataDescInit::g_DataMapHolder
 B dlightdataHDR
 B dlightdataLDR
 B dmodel_t_DataDescInit::g_DataMapHolder
 B dmodels
 B dnode_t_DataDescInit::g_DataMapHolder
 B dnodes
 B doccluderdata_t_DataDescInit::g_DataMapHolder
 B doccluderpolydata_t_DataDescInit::g_DataMapHolder
 B dorigfaces
 B doverlay_t_DataDescInit::g_DataMapHolder
 B doverlayfade_t_DataDescInit::g_DataMapHolder
 B dphysdisp_t_DataDescInit::g_DataMapHolder
 B dphysmodel_t_DataDescInit::g_DataMapHolder
 B dplane_t_DataDescInit::g_DataMapHolder
 B dplanes
 B dprimitive_t_DataDescInit::g_DataMapHolder
 B dprimvert_t_DataDescInit::g_DataMapHolder
 B dsurfedges
 B dtexdata
 B dtexdata_t_DataDescInit::g_DataMapHolder
 B dvertex_t_DataDescInit::g_DataMapHolder
 B dvertexes
 B dvisdata
 B dwateroverlay_t_DataDescInit::g_DataMapHolder
 B dworldlight_t_DataDescInit::g_DataMapHolder
 B dworldlightsHDR
 B dworldlightsLDR
 B g_CleanupFunctions
 B g_ClipPortalVerts
 B g_ClusterLeaves
 B g_CubemapSamples
 B g_DispLightmapSamplePositions
 B g_DispTris
 B g_DispVerts
 B g_ExtraSpewHooks
 B g_FaceMacroTextureInfos
 B g_GameLumps
 B g_KeyValuesErrorStack
 B g_LeafAmbientIndexHDR
 B g_LeafAmbientIndexLDR
 B g_LeafAmbientLightingHDR
 B g_LeafAmbientLightingLDR
 B g_LeafMinDistToWater
 B g_LevelFlags
 B g_Lumps
 B g_MapRevision
 B g_OccluderData
 B g_OccluderPolyData
 B g_OccluderVertexIndices
 B g_OverlayFades
 B g_Overlays
 B g_PhysCollideSize
 B g_PhysDispSize
 B g_StaticPropInstances
 B g_StaticPropNames
 B g_Swap
 B g_TexDataStringData
 B g_TexDataStringTable
 B g_WaterOverlays
 B g_bHDR
 B g_definevariable
 B g_dispinfo
 B g_hBSPFile
 B g_nClipPortalVerts
 B g_nCubemapSamples
 B g_nOverlayCount
 B g_nWaterOverlayCount
 B g_numprimindices
 B g_numprimitives
 B g_numprimverts
 B g_numvertnormalindices
 B g_numvertnormals
 B g_pBSPHeader
 B g_pCVar
 B g_pCompressFunc
 B g_pFileSystem
 B g_pFullFileSystem
 B g_pLeafAmbientIndex
 B g_pLeafAmbientLighting
 B g_pPhysCollide
 B g_pPhysDisp
 B g_pVHVFixupFunc
 B g_pVTFConvertFunc
 B g_primindices
 B g_primitives
 B g_primverts
 B g_sSingleCharTokens
 B g_vertnormalindices
 B g_vertnormals
 B lineartolightmap
 B lineartovertex
 B lump_t_DataDescInit::g_DataMapHolder
 B lzma_persistent_buffer
 B numareaportals
 B numareas
 B numbrushes
 B numbrushsides
 B numedges
 B numfaceids
 B numfaces
 B numfaces_hdr
 B numleafbrushes
 B numleaffaces
 B numleafs
 B numleafwaterdata
 B nummodels
 B numnodes
 B numorigfaces
 B numplanes
 B numsurfedges
 B numtexdata
 B numvertexes
 B numworldlightsHDR
 B numworldlightsLDR
 B s_NoEscConversion
 B s_StringCharConversion
 B s_bMathlibInitialized
 B swapcollideheader_t_DataDescInit::g_DataMapHolder
 B swapcompactsurfaceheader_t_DataDescInit::g_DataMapHolder
 B swapmoppsurfaceheader_t_DataDescInit::g_DataMapHolder
 B texinfo
 B texinfo_t_DataDescInit::g_DataMapHolder
 B visdatasize
 CThreadEvent::CThreadEvent(bool)
 CThreadEvent::Set()
 CThreadRWLock::LockForWrite()
 CThreadRWLock::UnlockWrite()
 CThreadRWLock::WaitForRead()
 CThreadSyncObject::~CThreadSyncObject()
 D CDispCornerNeighbors::m_DataMap
 D CDispNeighbor::m_DataMap
 D CDispSubNeighbor::m_DataMap
 D CDispTri::m_DataMap
 D CDispVert::m_DataMap
 D CFaceMacroTextureInfo::m_DataMap
 D CWin32File::CreateTempFile(CUtlString&, CUtlString&)::counter
 D CompressedLightCube::m_DataMap
 D DetailObjectDictLump_t::m_DataMap
 D DetailObjectLump_t::m_DataMap
 D DetailPropLightstylesLump_t::m_DataMap
 D DetailSpriteDictLump_t::m_DataMap
 D HardwareVerts::FileHeader_t::m_DataMap
 D HardwareVerts::MeshHeader_t::m_DataMap
 D StaticPropDictLump_t::m_DataMap
 D StaticPropLeafLump_t::m_DataMap
 D StaticPropLumpV4_t::m_DataMap
 D StaticPropLumpV5_t::m_DataMap
 D StaticPropLump_t::m_DataMap
 D ZIP_EndOfCentralDirRecord::m_DataMap
 D ZIP_FileHeader::m_DataMap
 D ZIP_LocalFileHeader::m_DataMap
 D ZIP_PreloadDirectoryEntry::m_DataMap
 D ZIP_PreloadHeader::m_DataMap
 D darea_t::m_DataMap
 D dareaportal_t::m_DataMap
 D dbrush_t::m_DataMap
 D dbrushside_t::m_DataMap
 D dcubemapsample_t::m_DataMap
 D ddispinfo_t::m_DataMap
 D dedge_t::m_DataMap
 D dface_t::m_DataMap
 D dfaceid_t::m_DataMap
 D dflagslump_t::m_DataMap
 D dgamelump_t::m_DataMap
 D dgamelumpheader_t::m_DataMap
 D dheader_t::m_DataMap
 D dleaf_t::m_DataMap
 D dleaf_version_0_t::m_DataMap
 D dleafambientindex_t::m_DataMap
 D dleafambientlighting_t::m_DataMap
 D dleafwaterdata_t::m_DataMap
 D dmodel_t::m_DataMap
 D dnode_t::m_DataMap
 D doccluderdata_t::m_DataMap
 D doccluderpolydata_t::m_DataMap
 D doverlay_t::m_DataMap
 D doverlayfade_t::m_DataMap
 D dphysdisp_t::m_DataMap
 D dphysmodel_t::m_DataMap
 D dplane_t::m_DataMap
 D dprimitive_t::m_DataMap
 D dprimvert_t::m_DataMap
 D dtexdata_t::m_DataMap
 D dvertex_t::m_DataMap
 D dwateroverlay_t::m_DataMap
 D dworldlight_t::m_DataMap
 D dworldlights
 D lump_t::m_DataMap
 D pNumworldlights
 D pdlightdata
 D pfFastCos
 D pfFastSinCos
 D pfInvRSquared
 D pfRSqrt
 D pfRSqrtFast
 D pfSqrt
 D pfVectorNormalize
 D pfVectorNormalizeFast
 D swapcollideheader_t::m_DataMap
 D swapcompactsurfaceheader_t::m_DataMap
 D swapmoppsurfaceheader_t::m_DataMap
 D texinfo_s::m_DataMap
 D typeinfo for CBSPPack
 D typeinfo for CBufferStream
 D typeinfo for CEmptyConVar
 D typeinfo for CFileStream
 D typeinfo for CUtlCStringConversion
 D typeinfo for CUtlCharConversion
 D typeinfo for CUtlNoEscConversion
 D typeinfo for CZip
 D typeinfo for ConCommandBase
 D typeinfo for ConVar
 D typeinfo for IBSPPack
 D typeinfo for IConVar
 D typeinfo for IWriteStream
 D typeinfo for IZip
 D vtable for CBSPPack
 D vtable for CBufferStream
 D vtable for CEmptyConVar
 D vtable for CFileStream
 D vtable for CUtlCStringConversion
 D vtable for CUtlCharConversion
 D vtable for CUtlNoEscConversion
 D vtable for CZip
 D vtable for ConVar
 DevMsg(char const*, ...)
 Error
 GetCPUInformation
 Msg
 R typeinfo name for CBSPPack
 R typeinfo name for CBufferStream
 R typeinfo name for CEmptyConVar
 R typeinfo name for CFileStream
 R typeinfo name for CUtlCStringConversion
 R typeinfo name for CUtlCharConversion
 R typeinfo name for CUtlNoEscConversion
 R typeinfo name for CZip
 R typeinfo name for ConCommandBase
 R typeinfo name for ConVar
 R typeinfo name for IBSPPack
 R typeinfo name for IConVar
 R typeinfo name for IWriteStream
 R typeinfo name for IZip
 T AddBufferToPak(IZip*, char const*, void*, int, bool, IZip::eCompressionType)
 T AddFileToPak(IZip*, char const*, char const*, IZip::eCompressionType)
 T AlignBuffer(CUtlBuffer&, int)
 T BuildGammaTable(float, float, float, int)
 T BuildStaticPropNameTable()
 T CBSPPack::AddBufferToPack(char const*, void*, int, bool)
 T CBSPPack::AddFileToPack(char const*, char const*)
 T CBSPPack::ClearPackFile()
 T CBSPPack::GetBSPDependants(IFileSystem*, char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T CBSPPack::GetPakFileLump(IFileSystem*, char const*, void**, int*)
 T CBSPPack::LoadBSPFile(IFileSystem*, char*)
 T CBSPPack::RepackBSP(CUtlBuffer&, CUtlBuffer&, IBSPPack::eRepackBSPFlags)
 T CBSPPack::SetHDRMode(bool)
 T CBSPPack::SetPakFileLump(IFileSystem*, char const*, char const*, void*, int)
 T CBSPPack::SwapBSPFile(IFileSystem*, char const*, char const*, bool, bool (*)(char const*, CUtlBuffer&, CUtlBuffer&, bool (*)(CUtlBuffer&, CUtlBuffer&)), bool (*)(char const*, char const*, CUtlBuffer&, CUtlBuffer&), bool (*)(CUtlBuffer&, CUtlBuffer&))
 T CBSPPack::WriteBSPFile(char*)
 T CBufferStream::Put(void const*, int)
 T CBufferStream::Tell()
 T CByteswap::SwapFieldToTargetEndian(void*, void*, typedescription_t*)
 T CByteswap::SwapFieldsToTargetEndian(void*, void*, datamap_t*)
 T CCleanupUtlSymbolTable::~CCleanupUtlSymbolTable()
 T CDatadescGeneratedNameHolder::~CDatadescGeneratedNameHolder()
 T CEmptyConVar::GetName() const
 T CEmptyConVar::IsFlagSet(int) const
 T CEmptyConVar::SetValue(char const*)
 T CEmptyConVar::SetValue(float)
 T CEmptyConVar::SetValue(int)
 T CEmptyConVar::~CEmptyConVar()
 T CFileStream::Put(void const*, int)
 T CFileStream::Tell()
 T CGameLump::CreateGameLump(int, int, int, int)
 T CGameLump::ParseGameLump(dheader_t*)
 T CGameLump::SwapGameLump(int, int, unsigned char*, unsigned char*, int)
 T CGameLump::~CGameLump()
 T CInStreamRam_StaticRead(void*, void*, unsigned long*)
 T CLZMA::GetActualSize(unsigned char*)
 T CLZMA::IsCompressed(unsigned char*)
 T CLZMA::Uncompress(unsigned char*, unsigned char*)
 T CLZMAStream::CLZMAStream()
 T CLZMAStream::CreateDecoderState(unsigned char const*)
 T CLZMAStream::InitZIPHeader(unsigned int, unsigned int)
 T CLZMAStream::Read(unsigned char*, unsigned int, unsigned char*, unsigned int, unsigned int&, unsigned int&)
 T CLZMAStream::TryParseHeader(unsigned char*, unsigned int, unsigned int&)
 T CLZMAStream::~CLZMAStream()
 T COutStreamRam_StaticWrite(void*, void const*, unsigned long)
 T CRC32_Final(unsigned int*)
 T CRC32_Init(unsigned int*)
 T CRC32_ProcessBuffer(unsigned int*, void const*, int)
 T CUtlBuffer::ActivateByteSwapping(bool)
 T CUtlBuffer::AddNullTermination()
 T CUtlBuffer::CUtlBuffer(int, int, int)
 T CUtlBuffer::CUtlBuffer(void const*, int, int)
 T CUtlBuffer::CheckArbitraryPeekGet(int, int&)
 T CUtlBuffer::CheckGet(int)
 T CUtlBuffer::CheckPut(int)
 T CUtlBuffer::EatWhiteSpace()
 T CUtlBuffer::EnsureCapacity(int)
 T CUtlBuffer::Get(void*, int)
 T CUtlBuffer::GetOverflow(int)
 T CUtlBuffer::GetStringInternal(char*, unsigned long)
 T CUtlBuffer::PeekStringLength()
 T CUtlBuffer::PeekWhiteSpace(int)
 T CUtlBuffer::Printf(char const*, ...)
 T CUtlBuffer::Put(void const*, int)
 T CUtlBuffer::PutOverflow(int)
 T CUtlBuffer::PutString(char const*)
 T CUtlBuffer::Scanf(char const*, ...)
 T CUtlBuffer::SeekGet(CUtlBuffer::SeekType_t, int)
 T CUtlBuffer::SeekPut(CUtlBuffer::SeekType_t, int)
 T CUtlBuffer::SetBufferType(bool, bool)
 T CUtlBuffer::SetExternalBuffer(void*, int, int, int)
 T CUtlBuffer::VaScanf(char const*, char*)
 T CUtlCStringConversion::CUtlCStringConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
 T CUtlCStringConversion::FindConversion(char const*, int*)
 T CUtlCharConversion::FindConversion(char const*, int*)
 T CUtlLinkedList<CZip*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CZip*, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<CZip*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CZip*, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<CZip*, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<CZip*, unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<GameLump_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<GameLump_t, unsigned short>, unsigned short> >::AllocInternal(bool)
 T CUtlLinkedList<GameLump_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<GameLump_t, unsigned short>, unsigned short> >::LinkBefore(unsigned short, unsigned short)
 T CUtlLinkedList<GameLump_t, unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<GameLump_t, unsigned short>, unsigned short> >::RemoveAll()
 T CUtlLinkedList<void (*)(), unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<void (*)(), unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlLinkedList<void (*)(char const*), unsigned short, false, unsigned short, CUtlMemory<UtlLinkedListElem_t<void (*)(char const*), unsigned short>, unsigned short> >::~CUtlLinkedList()
 T CUtlMemory<UtlLinkedListElem_t<CZip*, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlLinkedListElem_t<GameLump_t, unsigned short>, unsigned short>::Grow(int)
 T CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short>::Grow(int)
 T CUtlNoEscConversion::FindConversion(char const*, int*)
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Insert(CUtlSymbolTable::CStringPoolIndex const&)
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::NewNode()
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Purge()
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RotateRight(unsigned short)
 T CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::~CUtlRBTree()
 T CUtlRBTree<CZipFile::CZipEntry, int, bool (*)(CZipFile::CZipEntry const&, CZipFile::CZipEntry const&), CUtlMemory<UtlRBTreeNode_t<CZipFile::CZipEntry, int>, int> >::Insert(CZipFile::CZipEntry const&)
 T CUtlRBTree<CZipFile::CZipEntry, int, bool (*)(CZipFile::CZipEntry const&, CZipFile::CZipEntry const&), CUtlMemory<UtlRBTreeNode_t<CZipFile::CZipEntry, int>, int> >::InsertRebalance(int)
 T CUtlRBTree<CZipFile::CZipEntry, int, bool (*)(CZipFile::CZipEntry const&, CZipFile::CZipEntry const&), CUtlMemory<UtlRBTreeNode_t<CZipFile::CZipEntry, int>, int> >::NewNode()
 T CUtlRBTree<CZipFile::CZipEntry, int, bool (*)(CZipFile::CZipEntry const&, CZipFile::CZipEntry const&), CUtlMemory<UtlRBTreeNode_t<CZipFile::CZipEntry, int>, int> >::RemoveAll()
 T CUtlRBTree<CZipFile::CZipEntry, int, bool (*)(CZipFile::CZipEntry const&, CZipFile::CZipEntry const&), CUtlMemory<UtlRBTreeNode_t<CZipFile::CZipEntry, int>, int> >::RemoveRebalance(int)
 T CUtlRBTree<CZipFile::CZipEntry, int, bool (*)(CZipFile::CZipEntry const&, CZipFile::CZipEntry const&), CUtlMemory<UtlRBTreeNode_t<CZipFile::CZipEntry, int>, int> >::Unlink(int)
 T CUtlRBTree<CZipFile::CZipEntry, int, bool (*)(CZipFile::CZipEntry const&, CZipFile::CZipEntry const&), CUtlMemory<UtlRBTreeNode_t<CZipFile::CZipEntry, int>, int> >::~CUtlRBTree()
 T CUtlString::Get() const
 T CUtlString::Purge()
 T CUtlString::Set(char const*)
 T CUtlString::operator=(char const*)
 T CUtlString::~CUtlString()
 T CUtlSymbol::CUtlSymbol(char const*)
 T CUtlSymbol::Initialize()
 T CUtlSymbol::String() const
 T CUtlSymbolTable::AddString(char const*)
 T CUtlSymbolTable::CLess::operator()(CUtlSymbolTable::CStringPoolIndex const&, CUtlSymbolTable::CStringPoolIndex const&) const
 T CUtlSymbolTable::~CUtlSymbolTable()
 T CUtlSymbolTableMT::String(CUtlSymbol) const
 T CUtlVector<CDispTri, CUtlMemory<CDispTri, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CDispTri, CUtlMemory<CDispTri, int> >::~CUtlVector()
 T CUtlVector<CDispVert, CUtlMemory<CDispVert, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CDispVert, CUtlMemory<CDispVert, int> >::~CUtlVector()
 T CUtlVector<CFaceMacroTextureInfo, CUtlMemory<CFaceMacroTextureInfo, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<CFaceMacroTextureInfo, CUtlMemory<CFaceMacroTextureInfo, int> >::~CUtlVector()
 T CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >::InsertBefore(int, CUtlString const&)
 T CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >::~CUtlVector()
 T CUtlVector<CUtlSymbolTable::StringPool_t*, CUtlMemory<CUtlSymbolTable::StringPool_t*, int> >::~CUtlVector()
 T CUtlVector<SortedLump_t, CUtlMemory<SortedLump_t, int> >::~CUtlVector()
 T CUtlVector<char*, CUtlMemory<char*, int> >::~CUtlVector()
 T CUtlVector<char, CUtlMemory<char, int> >::GrowVector(int)
 T CUtlVector<char, CUtlMemory<char, int> >::~CUtlVector()
 T CUtlVector<clusterlist_t, CUtlMemory<clusterlist_t, int> >::~CUtlVector()
 T CUtlVector<ddispinfo_t, CUtlMemory<ddispinfo_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<ddispinfo_t, CUtlMemory<ddispinfo_t, int> >::~CUtlVector()
 T CUtlVector<dfaceid_t, CUtlMemory<dfaceid_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<dfaceid_t, CUtlMemory<dfaceid_t, int> >::~CUtlVector()
 T CUtlVector<dleafambientindex_t, CUtlMemory<dleafambientindex_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<dleafambientindex_t, CUtlMemory<dleafambientindex_t, int> >::~CUtlVector()
 T CUtlVector<dleafambientlighting_t, CUtlMemory<dleafambientlighting_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<dleafambientlighting_t, CUtlMemory<dleafambientlighting_t, int> >::~CUtlVector()
 T CUtlVector<doccluderdata_t, CUtlMemory<doccluderdata_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<doccluderdata_t, CUtlMemory<doccluderdata_t, int> >::~CUtlVector()
 T CUtlVector<doccluderpolydata_t, CUtlMemory<doccluderpolydata_t, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<doccluderpolydata_t, CUtlMemory<doccluderpolydata_t, int> >::~CUtlVector()
 T CUtlVector<int, CUtlMemory<int, int> >::GrowVector(int)
 T CUtlVector<int, CUtlMemory<int, int> >::~CUtlVector()
 T CUtlVector<texinfo_s, CUtlMemory<texinfo_s, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<texinfo_s, CUtlMemory<texinfo_s, int> >::~CUtlVector()
 T CUtlVector<unsigned char, CUtlMemory<unsigned char, int> >::InsertMultipleBefore(int, int)
 T CUtlVector<unsigned char, CUtlMemory<unsigned char, int> >::~CUtlVector()
 T CUtlVector<variable_t, CUtlMemory<variable_t, int> >::~CUtlVector()
 T CWin32File::CreateTempFile(CUtlString&, CUtlString&)
 T CZip::ActivateByteSwapping(bool)
 T CZip::AddBufferToZip(char const*, void*, int, bool, IZip::eCompressionType)
 T CZip::AddFileToZip(char const*, char const*, IZip::eCompressionType)
 T CZip::CZip(char const*, bool)
 T CZip::EstimateSize()
 T CZip::FileExistsInZip(char const*)
 T CZip::ForceAlignment(bool, bool, unsigned int)
 T CZip::GetAlignment()
 T CZip::GetNextFilename(int, char*, int, int&)
 T CZip::ParseFromBuffer(void*, int)
 T CZip::ParseFromDisk(char const*)
 T CZip::PrintDirectory()
 T CZip::ReadFileFromZip(char const*, bool, CUtlBuffer&)
 T CZip::ReadFileFromZip(void*, char const*, bool, CUtlBuffer&)
 T CZip::RemoveFileFromZip(char const*)
 T CZip::Reset()
 T CZip::SaveToBuffer(CUtlBuffer&)
 T CZip::SaveToDisk(__sFILE*)
 T CZip::SaveToDisk(void*)
 T CZip::SetBigEndian(bool)
 T CZip::~CZip()
 T CZipFile::AddBufferToZip(char const*, void*, int, bool, IZip::eCompressionType)
 T CZipFile::AddFileToZip(char const*, char const*, IZip::eCompressionType)
 T CZipFile::CZipEntry::ZipFileLessFunc(CZipFile::CZipEntry const&, CZipFile::CZipEntry const&)
 T CZipFile::CZipEntry::ZipFileLessFunc_CaselessSort(CZipFile::CZipEntry const&, CZipFile::CZipEntry const&)
 T CZipFile::CZipFile(char const*, bool)
 T CZipFile::CalculateSize()
 T CZipFile::FileExistsInZip(char const*)
 T CZipFile::GetNextFilename(int, char*, int, int&)
 T CZipFile::ParseFromBuffer(void*, int)
 T CZipFile::ParseFromDisk(char const*)
 T CZipFile::PrintDirectory()
 T CZipFile::ReadFileFromZip(void*, char const*, bool, CUtlBuffer&)
 T CZipFile::RemoveFileFromZip(char const*)
 T CZipFile::SaveDirectory(IWriteStream&)
 T CZipFile::SaveToBuffer(CUtlBuffer&)
 T CZipFile::~CZipFile()
 T ClearPakFile(IZip*)
 T CmdLib_HasBasePath(char const*, int&)
 T CompressGameLump(dheader_t*, dheader_t*, CUtlBuffer&, bool (*)(CUtlBuffer&, CUtlBuffer&))
 T ConCommandBase::CreateBase(char const*, char const*, int)
 T ConCommandBase::GetDLLIdentifier() const
 T ConVar::AddFlags(int)
 T ConVar::ChangeStringValue(char const*, float)
 T ConVar::ClampValue(float&)
 T ConVar::ConVar(char const*, char const*, int, char const*)
 T ConVar::Create(char const*, char const*, int, char const*, bool, float, bool, float, bool, float, bool, float, void (*)(IConVar*, char const*, float))
 T ConVar::GetHelpText() const
 T ConVar::GetName() const
 T ConVar::Init()
 T ConVar::InternalSetFloatValue(float, bool)
 T ConVar::InternalSetIntValue(int)
 T ConVar::InternalSetValue(char const*)
 T ConVar::IsCommand() const
 T ConVar::IsFlagSet(int) const
 T ConVar::IsRegistered() const
 T ConVar::SetValue(char const*)
 T ConVar::SetValue(float)
 T ConVar::SetValue(int)
 T ConVar::~ConVar()
 T ConvertPakFileContents(char const*)
 T CreateInterface
 T GetBSPDependants(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >*)
 T GetMatchesSpec1
 T GetPakFile()
 T GetPakFileLump(char const*, void**, int*)
 T IZip::CreateZip(char const*, bool)
 T IZip::ReleaseZip(IZip*)
 T InterfaceReg::InterfaceReg(void* (*)(), char const*)
 T LZMA_Compress(unsigned char*, unsigned int, unsigned int*)
 T LoadBSPFile(char const*)
 T LoadFile(char const*, void**)
 T LoadLeafAmbientLighting(int)
 T LoadLeafs()
 T LzmaDec_Allocate
 T LzmaDec_AllocateProbs
 T LzmaDec_DecodeToBuf
 T LzmaDec_DecodeToDic
 T LzmaDec_Free
 T LzmaDec_Init
 T LzmaDecode
 T LzmaEncProps_Init
 T LzmaEncProps_Normalize
 T LzmaEnc_Construct(CLzmaEnc*)
 T LzmaEnc_Create
 T LzmaEnc_Destroy
 T LzmaEnc_Encode
 T LzmaEnc_Init(CLzmaEnc*)
 T LzmaEnc_InitPrices(CLzmaEnc*)
 T LzmaEnc_SetProps
 T LzmaEnc_WriteProperties
 T LzmaEncode(unsigned char const*, unsigned long, unsigned char*, unsigned long, unsigned long*)
 T MatchFinder_Construct
 T MatchFinder_Create
 T MatchFinder_CreateVTable
 T MatchFinder_Free
 T MatchFinder_GetIndexByte(_CMatchFinder*, int)
 T MatchFinder_GetNumAvailableBytes(_CMatchFinder*)
 T MatchFinder_GetPointerToCurrentPos
 T MatchFinder_Init
 T MathLib_Init(float, float, float, int, bool, bool, bool, bool)
 T OpenBSPFile(char const*)
 T RepackBSP(CUtlBuffer&, CUtlBuffer&, bool (*)(CUtlBuffer&, CUtlBuffer&), IZip::eCompressionType)
 T RepackBSPCallback_LZMA(CUtlBuffer&, CUtlBuffer&)
 T ResolveStaticPropToModel(char const*)
 T SafeOpenRead(char const*)
 T SafeOpenWrite(char const*)
 T SafeWrite(void*, void*, int)
 T SetHDRMode(bool)
 T SetPakFileLump(char const*, char const*, void*, int)
 T SinCos(float, float*, float*)
 T SortLumpsByOffset(SortedLump_t const*, SortedLump_t const*)
 T SwapBSPFile(char const*, char const*, bool, bool (*)(char const*, CUtlBuffer&, CUtlBuffer&, bool (*)(CUtlBuffer&, CUtlBuffer&)), bool (*)(char const*, char const*, CUtlBuffer&, CUtlBuffer&), bool (*)(CUtlBuffer&, CUtlBuffer&))
 T SwapGameLumpsToDisk()
 T SwapLeafAmbientLightingLumpToDisk()
 T SwapLeafLumpToDisk()
 T SwapOcclusionLumpToDisk()
 T SwapPakfileLumpToDisk(char const*)
 T SwapVHV(void*, void*)
 T Sys_GetFactory(CSysModule*)
 T UnloadBSPFile()
 T V_ComposeFileName(char const*, char const*, char*, int)
 T V_FileBase(char const*, char*, int)
 T V_FixSlashes(char*, char)
 T V_GetFileExtension(char const*)
 T V_SetExtension(char*, char const*, int)
 T V_StripExtension(char const*, char*, int)
 T V_atof(char const*)
 T V_snprintf(char*, int, char const*, ...)
 T V_stricmp(char const*, char const*)
 T V_stristr(char const*, char const*)
 T V_stristr(char*, char const*)
 T V_strlower(char*)
 T V_strncat(char*, char const*, unsigned long, int)
 T V_strncpy(char*, char const*, int)
 T V_strnicmp(char const*, char const*, int)
 T V_vsnprintf(char*, int, char const*, char*)
 T WriteBSPFile(char const*, char*)
 T _InvRSquared(float const*)
 T _SSE_InvRSquared(float const*)
 T _SSE_RSqrtAccurate(float)
 T _SSE_RSqrtFast(float)
 T _SSE_Sqrt(float)
 T _SSE_VectorNormalizeFast(Vector&)
 T _VectorNormalize(Vector&)
 T _VectorNormalizeFast(Vector&)
 T __clang_call_terminate
 T _rsqrtf(float)
 T _sqrtf(float)
 T int CopyLumpInternal<CDispTri>(int, CDispTri*, int)
 T int CopyLumpInternal<CDispVert>(int, CDispVert*, int)
 T int CopyLumpInternal<CFaceMacroTextureInfo>(int, CFaceMacroTextureInfo*, int)
 T int CopyLumpInternal<char>(int, int, char*, int)
 T int CopyLumpInternal<darea_t>(int, darea_t*, int)
 T int CopyLumpInternal<dareaportal_t>(int, dareaportal_t*, int)
 T int CopyLumpInternal<dbrush_t>(int, dbrush_t*, int)
 T int CopyLumpInternal<dbrushside_t>(int, dbrushside_t*, int)
 T int CopyLumpInternal<dcubemapsample_t>(int, dcubemapsample_t*, int)
 T int CopyLumpInternal<ddispinfo_t>(int, ddispinfo_t*, int)
 T int CopyLumpInternal<dedge_t>(int, dedge_t*, int)
 T int CopyLumpInternal<dface_t>(int, dface_t*, int)
 T int CopyLumpInternal<dflagslump_t>(int, dflagslump_t*, int)
 T int CopyLumpInternal<dleafambientindex_t>(int, dleafambientindex_t*, int)
 T int CopyLumpInternal<dleafambientlighting_t>(int, dleafambientlighting_t*, int)
 T int CopyLumpInternal<dleafwaterdata_t>(int, dleafwaterdata_t*, int)
 T int CopyLumpInternal<dmodel_t>(int, dmodel_t*, int)
 T int CopyLumpInternal<dnode_t>(int, dnode_t*, int)
 T int CopyLumpInternal<doverlay_t>(int, doverlay_t*, int)
 T int CopyLumpInternal<doverlayfade_t>(int, doverlayfade_t*, int)
 T int CopyLumpInternal<dplane_t>(int, dplane_t*, int)
 T int CopyLumpInternal<dprimitive_t>(int, dprimitive_t*, int)
 T int CopyLumpInternal<dprimvert_t>(int, dprimvert_t*, int)
 T int CopyLumpInternal<dtexdata_t>(int, dtexdata_t*, int)
 T int CopyLumpInternal<dvertex_t>(int, dvertex_t*, int)
 T int CopyLumpInternal<dwateroverlay_t>(int, dwateroverlay_t*, int)
 T int CopyLumpInternal<dworldlight_t>(int, dworldlight_t*, int)
 T int CopyLumpInternal<float>(int, int, float*, int)
 T int CopyLumpInternal<int>(int, int, int*, int)
 T int CopyLumpInternal<short>(int, int, short*, int)
 T int CopyLumpInternal<texinfo_s>(int, texinfo_s*, int)
 T int CopyLumpInternal<unsigned char>(int, int, unsigned char*, int)
 T int CopyLumpInternal<unsigned short>(int, int, unsigned short*, int)
 T int SwapLumpToDisk<CDispTri>(int)
 T int SwapLumpToDisk<CDispVert>(int)
 T int SwapLumpToDisk<CFaceMacroTextureInfo>(int)
 T int SwapLumpToDisk<char>(int, int)
 T int SwapLumpToDisk<darea_t>(int)
 T int SwapLumpToDisk<dareaportal_t>(int)
 T int SwapLumpToDisk<dbrush_t>(int)
 T int SwapLumpToDisk<dbrushside_t>(int)
 T int SwapLumpToDisk<dcubemapsample_t>(int)
 T int SwapLumpToDisk<ddispinfo_t>(int)
 T int SwapLumpToDisk<dedge_t>(int)
 T int SwapLumpToDisk<dface_t>(int)
 T int SwapLumpToDisk<dflagslump_t>(int)
 T int SwapLumpToDisk<dleafambientindex_t>(int)
 T int SwapLumpToDisk<dleafambientlighting_t>(int)
 T int SwapLumpToDisk<dleafwaterdata_t>(int)
 T int SwapLumpToDisk<dmodel_t>(int)
 T int SwapLumpToDisk<dnode_t>(int)
 T int SwapLumpToDisk<doverlay_t>(int)
 T int SwapLumpToDisk<doverlayfade_t>(int)
 T int SwapLumpToDisk<dplane_t>(int)
 T int SwapLumpToDisk<dprimitive_t>(int)
 T int SwapLumpToDisk<dprimvert_t>(int)
 T int SwapLumpToDisk<dtexdata_t>(int)
 T int SwapLumpToDisk<dvertex_t>(int)
 T int SwapLumpToDisk<dwateroverlay_t>(int)
 T int SwapLumpToDisk<dworldlight_t>(int)
 T int SwapLumpToDisk<float>(int, int)
 T int SwapLumpToDisk<int>(int, int)
 T int SwapLumpToDisk<short>(int, int)
 T int SwapLumpToDisk<texinfo_s>(int)
 T int SwapLumpToDisk<unsigned char>(int, int)
 T int SwapLumpToDisk<unsigned short>(int, int)
 T non-virtual thunk to CEmptyConVar::GetName() const
 T non-virtual thunk to CEmptyConVar::IsFlagSet(int) const
 T non-virtual thunk to CEmptyConVar::SetValue(char const*)
 T non-virtual thunk to CEmptyConVar::SetValue(float)
 T non-virtual thunk to CEmptyConVar::SetValue(int)
 T non-virtual thunk to ConVar::GetName() const
 T non-virtual thunk to ConVar::IsFlagSet(int) const
 T non-virtual thunk to ConVar::SetValue(char const*)
 T non-virtual thunk to ConVar::SetValue(float)
 T non-virtual thunk to ConVar::SetValue(int)
 T operator delete(void*)
 T operator delete[](void*)
 T operator new(unsigned long)
 T operator new[](unsigned long)
 ThreadInMainThread
 Warning
 _DefaultRuneLocale
 _Unwind_Resume
 __bzero
 __cxa_atexit
 __cxa_begin_catch
 __cxa_call_unexpected
 __cxa_guard_acquire
 __cxa_guard_release
 __gxx_personality_v0
 __maskrune
 __stack_chk_fail
 __stack_chk_guard
 __tolower
 atof
 atoi
 b CUtlSymbol::Initialize()::symbolsInitialized
 b __g_CreateCBSPPackIBSPPack_reg
 b datamap_t* DataMapInit<CDispCornerNeighbors>(CDispCornerNeighbors*)::nameHolder
 b datamap_t* DataMapInit<CDispNeighbor>(CDispNeighbor*)::nameHolder
 b datamap_t* DataMapInit<CDispSubNeighbor>(CDispSubNeighbor*)::nameHolder
 b datamap_t* DataMapInit<CDispTri>(CDispTri*)::nameHolder
 b datamap_t* DataMapInit<CDispVert>(CDispVert*)::nameHolder
 b datamap_t* DataMapInit<CFaceMacroTextureInfo>(CFaceMacroTextureInfo*)::nameHolder
 b datamap_t* DataMapInit<CompressedLightCube>(CompressedLightCube*)::nameHolder
 b datamap_t* DataMapInit<DetailObjectDictLump_t>(DetailObjectDictLump_t*)::nameHolder
 b datamap_t* DataMapInit<DetailObjectLump_t>(DetailObjectLump_t*)::nameHolder
 b datamap_t* DataMapInit<DetailPropLightstylesLump_t>(DetailPropLightstylesLump_t*)::nameHolder
 b datamap_t* DataMapInit<DetailSpriteDictLump_t>(DetailSpriteDictLump_t*)::nameHolder
 b datamap_t* DataMapInit<StaticPropDictLump_t>(StaticPropDictLump_t*)::nameHolder
 b datamap_t* DataMapInit<StaticPropLeafLump_t>(StaticPropLeafLump_t*)::nameHolder
 b datamap_t* DataMapInit<StaticPropLumpV4_t>(StaticPropLumpV4_t*)::nameHolder
 b datamap_t* DataMapInit<StaticPropLumpV5_t>(StaticPropLumpV5_t*)::nameHolder
 b datamap_t* DataMapInit<StaticPropLump_t>(StaticPropLump_t*)::nameHolder
 b datamap_t* DataMapInit<ZIP_EndOfCentralDirRecord>(ZIP_EndOfCentralDirRecord*)::nameHolder
 b datamap_t* DataMapInit<ZIP_FileHeader>(ZIP_FileHeader*)::nameHolder
 b datamap_t* DataMapInit<ZIP_LocalFileHeader>(ZIP_LocalFileHeader*)::nameHolder
 b datamap_t* DataMapInit<ZIP_PreloadDirectoryEntry>(ZIP_PreloadDirectoryEntry*)::nameHolder
 b datamap_t* DataMapInit<ZIP_PreloadHeader>(ZIP_PreloadHeader*)::nameHolder
 b datamap_t* DataMapInit<darea_t>(darea_t*)::nameHolder
 b datamap_t* DataMapInit<dareaportal_t>(dareaportal_t*)::nameHolder
 b datamap_t* DataMapInit<dbrush_t>(dbrush_t*)::nameHolder
 b datamap_t* DataMapInit<dbrushside_t>(dbrushside_t*)::nameHolder
 b datamap_t* DataMapInit<dcubemapsample_t>(dcubemapsample_t*)::nameHolder
 b datamap_t* DataMapInit<ddispinfo_t>(ddispinfo_t*)::nameHolder
 b datamap_t* DataMapInit<dedge_t>(dedge_t*)::nameHolder
 b datamap_t* DataMapInit<dface_t>(dface_t*)::nameHolder
 b datamap_t* DataMapInit<dfaceid_t>(dfaceid_t*)::nameHolder
 b datamap_t* DataMapInit<dflagslump_t>(dflagslump_t*)::nameHolder
 b datamap_t* DataMapInit<dgamelump_t>(dgamelump_t*)::nameHolder
 b datamap_t* DataMapInit<dgamelumpheader_t>(dgamelumpheader_t*)::nameHolder
 b datamap_t* DataMapInit<dheader_t>(dheader_t*)::nameHolder
 b datamap_t* DataMapInit<dleaf_t>(dleaf_t*)::nameHolder
 b datamap_t* DataMapInit<dleaf_version_0_t>(dleaf_version_0_t*)::nameHolder
 b datamap_t* DataMapInit<dleafambientindex_t>(dleafambientindex_t*)::nameHolder
 b datamap_t* DataMapInit<dleafambientlighting_t>(dleafambientlighting_t*)::nameHolder
 b datamap_t* DataMapInit<dleafwaterdata_t>(dleafwaterdata_t*)::nameHolder
 b datamap_t* DataMapInit<dmodel_t>(dmodel_t*)::nameHolder
 b datamap_t* DataMapInit<dnode_t>(dnode_t*)::nameHolder
 b datamap_t* DataMapInit<doccluderdata_t>(doccluderdata_t*)::nameHolder
 b datamap_t* DataMapInit<doccluderpolydata_t>(doccluderpolydata_t*)::nameHolder
 b datamap_t* DataMapInit<doverlay_t>(doverlay_t*)::nameHolder
 b datamap_t* DataMapInit<doverlayfade_t>(doverlayfade_t*)::nameHolder
 b datamap_t* DataMapInit<dphysdisp_t>(dphysdisp_t*)::nameHolder
 b datamap_t* DataMapInit<dphysmodel_t>(dphysmodel_t*)::nameHolder
 b datamap_t* DataMapInit<dplane_t>(dplane_t*)::nameHolder
 b datamap_t* DataMapInit<dprimitive_t>(dprimitive_t*)::nameHolder
 b datamap_t* DataMapInit<dprimvert_t>(dprimvert_t*)::nameHolder
 b datamap_t* DataMapInit<dtexdata_t>(dtexdata_t*)::nameHolder
 b datamap_t* DataMapInit<dvertex_t>(dvertex_t*)::nameHolder
 b datamap_t* DataMapInit<dwateroverlay_t>(dwateroverlay_t*)::nameHolder
 b datamap_t* DataMapInit<dworldlight_t>(dworldlight_t*)::nameHolder
 b datamap_t* DataMapInit<lump_t>(lump_t*)::nameHolder
 b datamap_t* DataMapInit<swapcollideheader_t>(swapcollideheader_t*)::nameHolder
 b datamap_t* DataMapInit<swapcompactsurfaceheader_t>(swapcompactsurfaceheader_t*)::nameHolder
 b datamap_t* DataMapInit<swapmoppsurfaceheader_t>(swapmoppsurfaceheader_t*)::nameHolder
 b datamap_t* DataMapInit<texinfo_s>(texinfo_s*)::nameHolder
 b datamap_t* HardwareVerts::DataMapInit<HardwareVerts::FileHeader_t>(HardwareVerts::FileHeader_t*)::nameHolder
 b datamap_t* HardwareVerts::DataMapInit<HardwareVerts::MeshHeader_t>(HardwareVerts::MeshHeader_t*)::nameHolder
 b f05
 b f3
 b g_CleanupSymbolTable
 b g_KVMutex
 b g_Mathlib_GammaToLinear
 b g_Mathlib_LinearToGamma
 b g_NumBasePaths
 b g_ZipUtils
 b g_bSwapOnLoad
 b g_bSwapOnWrite
 b g_pBasePaths
 b g_pStaticLZMABuf
 b g_unStaticLZMABufRef
 b g_unStaticLZMABufSize
 b guard variable for datamap_t* DataMapInit<CDispCornerNeighbors>(CDispCornerNeighbors*)::nameHolder
 b guard variable for datamap_t* DataMapInit<CDispNeighbor>(CDispNeighbor*)::nameHolder
 b guard variable for datamap_t* DataMapInit<CDispSubNeighbor>(CDispSubNeighbor*)::nameHolder
 b guard variable for datamap_t* DataMapInit<CDispTri>(CDispTri*)::nameHolder
 b guard variable for datamap_t* DataMapInit<CDispVert>(CDispVert*)::nameHolder
 b guard variable for datamap_t* DataMapInit<CFaceMacroTextureInfo>(CFaceMacroTextureInfo*)::nameHolder
 b guard variable for datamap_t* DataMapInit<CompressedLightCube>(CompressedLightCube*)::nameHolder
 b guard variable for datamap_t* DataMapInit<DetailObjectDictLump_t>(DetailObjectDictLump_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<DetailObjectLump_t>(DetailObjectLump_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<DetailPropLightstylesLump_t>(DetailPropLightstylesLump_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<DetailSpriteDictLump_t>(DetailSpriteDictLump_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<StaticPropDictLump_t>(StaticPropDictLump_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<StaticPropLeafLump_t>(StaticPropLeafLump_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<StaticPropLumpV4_t>(StaticPropLumpV4_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<StaticPropLumpV5_t>(StaticPropLumpV5_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<StaticPropLump_t>(StaticPropLump_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<ZIP_EndOfCentralDirRecord>(ZIP_EndOfCentralDirRecord*)::nameHolder
 b guard variable for datamap_t* DataMapInit<ZIP_FileHeader>(ZIP_FileHeader*)::nameHolder
 b guard variable for datamap_t* DataMapInit<ZIP_LocalFileHeader>(ZIP_LocalFileHeader*)::nameHolder
 b guard variable for datamap_t* DataMapInit<ZIP_PreloadDirectoryEntry>(ZIP_PreloadDirectoryEntry*)::nameHolder
 b guard variable for datamap_t* DataMapInit<ZIP_PreloadHeader>(ZIP_PreloadHeader*)::nameHolder
 b guard variable for datamap_t* DataMapInit<darea_t>(darea_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<dareaportal_t>(dareaportal_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<dbrush_t>(dbrush_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<dbrushside_t>(dbrushside_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<dcubemapsample_t>(dcubemapsample_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<ddispinfo_t>(ddispinfo_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<dedge_t>(dedge_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<dface_t>(dface_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<dfaceid_t>(dfaceid_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<dflagslump_t>(dflagslump_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<dgamelump_t>(dgamelump_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<dgamelumpheader_t>(dgamelumpheader_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<dheader_t>(dheader_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<dleaf_t>(dleaf_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<dleaf_version_0_t>(dleaf_version_0_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<dleafambientindex_t>(dleafambientindex_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<dleafambientlighting_t>(dleafambientlighting_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<dleafwaterdata_t>(dleafwaterdata_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<dmodel_t>(dmodel_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<dnode_t>(dnode_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<doccluderdata_t>(doccluderdata_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<doccluderpolydata_t>(doccluderpolydata_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<doverlay_t>(doverlay_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<doverlayfade_t>(doverlayfade_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<dphysdisp_t>(dphysdisp_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<dphysmodel_t>(dphysmodel_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<dplane_t>(dplane_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<dprimitive_t>(dprimitive_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<dprimvert_t>(dprimvert_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<dtexdata_t>(dtexdata_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<dvertex_t>(dvertex_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<dwateroverlay_t>(dwateroverlay_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<dworldlight_t>(dworldlight_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<lump_t>(lump_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<swapcollideheader_t>(swapcollideheader_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<swapcompactsurfaceheader_t>(swapcompactsurfaceheader_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<swapmoppsurfaceheader_t>(swapmoppsurfaceheader_t*)::nameHolder
 b guard variable for datamap_t* DataMapInit<texinfo_s>(texinfo_s*)::nameHolder
 b guard variable for datamap_t* HardwareVerts::DataMapInit<HardwareVerts::FileHeader_t>(HardwareVerts::FileHeader_t*)::nameHolder
 b guard variable for datamap_t* HardwareVerts::DataMapInit<HardwareVerts::MeshHeader_t>(HardwareVerts::MeshHeader_t*)::nameHolder
 b lineartoscreen
 b lineartotexture
 b s_EmptyConVar
 b s_bMMXEnabled
 b s_bSSE2Enabled
 b s_bSSEEnabled
 b s_pakFile
 b texturetolinear
 b vec2_invalid
 b vec2_origin
 b vec4_invalid
 b vec4_origin
 cosf
 d __g_CBSPPack_singleton
 d datamap_t* DataMapInit<CDispCornerNeighbors>(CDispCornerNeighbors*)::dataDesc
 d datamap_t* DataMapInit<CDispNeighbor>(CDispNeighbor*)::dataDesc
 d datamap_t* DataMapInit<CDispSubNeighbor>(CDispSubNeighbor*)::dataDesc
 d datamap_t* DataMapInit<CDispTri>(CDispTri*)::dataDesc
 d datamap_t* DataMapInit<CDispVert>(CDispVert*)::dataDesc
 d datamap_t* DataMapInit<CFaceMacroTextureInfo>(CFaceMacroTextureInfo*)::dataDesc
 d datamap_t* DataMapInit<CompressedLightCube>(CompressedLightCube*)::dataDesc
 d datamap_t* DataMapInit<DetailObjectDictLump_t>(DetailObjectDictLump_t*)::dataDesc
 d datamap_t* DataMapInit<DetailObjectLump_t>(DetailObjectLump_t*)::dataDesc
 d datamap_t* DataMapInit<DetailPropLightstylesLump_t>(DetailPropLightstylesLump_t*)::dataDesc
 d datamap_t* DataMapInit<DetailSpriteDictLump_t>(DetailSpriteDictLump_t*)::dataDesc
 d datamap_t* DataMapInit<StaticPropDictLump_t>(StaticPropDictLump_t*)::dataDesc
 d datamap_t* DataMapInit<StaticPropLeafLump_t>(StaticPropLeafLump_t*)::dataDesc
 d datamap_t* DataMapInit<StaticPropLumpV4_t>(StaticPropLumpV4_t*)::dataDesc
 d datamap_t* DataMapInit<StaticPropLumpV5_t>(StaticPropLumpV5_t*)::dataDesc
 d datamap_t* DataMapInit<StaticPropLump_t>(StaticPropLump_t*)::dataDesc
 d datamap_t* DataMapInit<ZIP_EndOfCentralDirRecord>(ZIP_EndOfCentralDirRecord*)::dataDesc
 d datamap_t* DataMapInit<ZIP_FileHeader>(ZIP_FileHeader*)::dataDesc
 d datamap_t* DataMapInit<ZIP_LocalFileHeader>(ZIP_LocalFileHeader*)::dataDesc
 d datamap_t* DataMapInit<ZIP_PreloadDirectoryEntry>(ZIP_PreloadDirectoryEntry*)::dataDesc
 d datamap_t* DataMapInit<ZIP_PreloadHeader>(ZIP_PreloadHeader*)::dataDesc
 d datamap_t* DataMapInit<darea_t>(darea_t*)::dataDesc
 d datamap_t* DataMapInit<dareaportal_t>(dareaportal_t*)::dataDesc
 d datamap_t* DataMapInit<dbrush_t>(dbrush_t*)::dataDesc
 d datamap_t* DataMapInit<dbrushside_t>(dbrushside_t*)::dataDesc
 d datamap_t* DataMapInit<dcubemapsample_t>(dcubemapsample_t*)::dataDesc
 d datamap_t* DataMapInit<ddispinfo_t>(ddispinfo_t*)::dataDesc
 d datamap_t* DataMapInit<dedge_t>(dedge_t*)::dataDesc
 d datamap_t* DataMapInit<dface_t>(dface_t*)::dataDesc
 d datamap_t* DataMapInit<dfaceid_t>(dfaceid_t*)::dataDesc
 d datamap_t* DataMapInit<dflagslump_t>(dflagslump_t*)::dataDesc
 d datamap_t* DataMapInit<dgamelump_t>(dgamelump_t*)::dataDesc
 d datamap_t* DataMapInit<dgamelumpheader_t>(dgamelumpheader_t*)::dataDesc
 d datamap_t* DataMapInit<dheader_t>(dheader_t*)::dataDesc
 d datamap_t* DataMapInit<dleaf_t>(dleaf_t*)::dataDesc
 d datamap_t* DataMapInit<dleaf_version_0_t>(dleaf_version_0_t*)::dataDesc
 d datamap_t* DataMapInit<dleafambientindex_t>(dleafambientindex_t*)::dataDesc
 d datamap_t* DataMapInit<dleafambientlighting_t>(dleafambientlighting_t*)::dataDesc
 d datamap_t* DataMapInit<dleafwaterdata_t>(dleafwaterdata_t*)::dataDesc
 d datamap_t* DataMapInit<dmodel_t>(dmodel_t*)::dataDesc
 d datamap_t* DataMapInit<dnode_t>(dnode_t*)::dataDesc
 d datamap_t* DataMapInit<doccluderdata_t>(doccluderdata_t*)::dataDesc
 d datamap_t* DataMapInit<doccluderpolydata_t>(doccluderpolydata_t*)::dataDesc
 d datamap_t* DataMapInit<doverlay_t>(doverlay_t*)::dataDesc
 d datamap_t* DataMapInit<doverlayfade_t>(doverlayfade_t*)::dataDesc
 d datamap_t* DataMapInit<dphysdisp_t>(dphysdisp_t*)::dataDesc
 d datamap_t* DataMapInit<dphysmodel_t>(dphysmodel_t*)::dataDesc
 d datamap_t* DataMapInit<dplane_t>(dplane_t*)::dataDesc
 d datamap_t* DataMapInit<dprimitive_t>(dprimitive_t*)::dataDesc
 d datamap_t* DataMapInit<dprimvert_t>(dprimvert_t*)::dataDesc
 d datamap_t* DataMapInit<dtexdata_t>(dtexdata_t*)::dataDesc
 d datamap_t* DataMapInit<dvertex_t>(dvertex_t*)::dataDesc
 d datamap_t* DataMapInit<dwateroverlay_t>(dwateroverlay_t*)::dataDesc
 d datamap_t* DataMapInit<dworldlight_t>(dworldlight_t*)::dataDesc
 d datamap_t* DataMapInit<lump_t>(lump_t*)::dataDesc
 d datamap_t* DataMapInit<swapcollideheader_t>(swapcollideheader_t*)::dataDesc
 d datamap_t* DataMapInit<swapcompactsurfaceheader_t>(swapcompactsurfaceheader_t*)::dataDesc
 d datamap_t* DataMapInit<swapmoppsurfaceheader_t>(swapmoppsurfaceheader_t*)::dataDesc
 d datamap_t* DataMapInit<texinfo_s>(texinfo_s*)::dataDesc
 d datamap_t* HardwareVerts::DataMapInit<HardwareVerts::FileHeader_t>(HardwareVerts::FileHeader_t*)::dataDesc
 d datamap_t* HardwareVerts::DataMapInit<HardwareVerts::MeshHeader_t>(HardwareVerts::MeshHeader_t*)::dataDesc
 d g_Alloc
 d s_LumpNames
 d s_nDLLIdentifier
 d s_pConversionArrays_NoEscConversion
 d s_pConversionArrays_StringCharConversion
 dlsym
 dyld_stub_binder
 fclose
 fflush
 fopen$UNIX2003
 fread
 fseek
 fseeko
 ftell
 ftello
 fwrite$UNIX2003
 g_pMemAlloc
 localtime
 memcpy
 memmove
 memset
 memset_pattern16
 pow
 pthread_mutex_destroy
 pthread_mutex_init
 pthread_mutex_lock
 pthread_mutex_unlock
 pthread_mutexattr_init
 pthread_mutexattr_settype
 qsort
 r .memset_pattern
 r .memset_pattern6
 r kLiteralNextStates
 r kMatchNextStates
 r kRepNextStates
 r kShortRepNextStates
 r pulCRCTable
 sin
 sprintf
 sscanf
 std::terminate()
 strcasecmp
 strcat
 strchr
 strcmp
 strcpy
 strlen
 strncasecmp
 strncat
 strncpy
 strrchr
 strtod$UNIX2003
 strtol
 strtoul
 t AddGameLumps()
 t AddLumpInternal(int, void*, int, int)
 t AddOcclusionLump()
 t Bt2_MatchFinder_GetMatches(_CMatchFinder*, unsigned int*)
 t Bt2_MatchFinder_Skip(_CMatchFinder*, unsigned int)
 t Bt3_MatchFinder_GetMatches(_CMatchFinder*, unsigned int*)
 t Bt3_MatchFinder_Skip(_CMatchFinder*, unsigned int)
 t Bt4_MatchFinder_GetMatches(_CMatchFinder*, unsigned int*)
 t Bt4_MatchFinder_Skip(_CMatchFinder*, unsigned int)
 t FillAlignPrices(CLzmaEnc*)
 t FillDistancesPrices(CLzmaEnc*)
 t Flush(CLzmaEnc*, unsigned int)
 t Hc4_MatchFinder_GetMatches(_CMatchFinder*, unsigned int*)
 t Hc4_MatchFinder_Skip(_CMatchFinder*, unsigned int)
 t LenEnc_Encode2(CLenPriceEnc*, CRangeEnc*, unsigned int, unsigned int, int, unsigned int*)
 t LenPriceEnc_UpdateTable(CLenPriceEnc*, unsigned int, unsigned int*)
 t LoadOcclusionLump()
 t LumpOffsetCompare(void const*, void const*)
 t LzmaDec_DecodeReal2(CLzmaDec*, unsigned long, unsigned char const*)
 t LzmaDec_TryDummy(CLzmaDec const*, unsigned char const*, unsigned long)
 t LzmaEnc_AllocAndInit(CLzmaEnc*, unsigned int, ISzAlloc*, ISzAlloc*)
 t LzmaEnc_CodeOneBlock(CLzmaEnc*, int, unsigned int, unsigned int)
 t MatchFinder_CheckLimits(_CMatchFinder*)
 t MatchFinder_ReadBlock(_CMatchFinder*)
 t SkipMatchesSpec(unsigned int, unsigned int, unsigned int, unsigned char const*, unsigned int*, unsigned int, unsigned int, unsigned int)
 t SwapPhyscollideLump(unsigned char*, unsigned char*, unsigned int&)
 t SzAlloc(void*, unsigned long)
 t SzFree(void*, void*)
 t WritePakFileLump()
 t _GLOBAL__sub_I_KeyValues.stdout.rel_tf_osx_builder.53345.z6Hzoa.ii
 t _GLOBAL__sub_I_bsplib.stdout.rel_tf_osx_builder.95661.EQVxzy.ii
 t _GLOBAL__sub_I_bsppack.stdout.rel_tf_osx_builder.95691.Sv2hPv.ii
 t _GLOBAL__sub_I_cmdlib.stdout.rel_tf_osx_builder.95662.nQWTPP.ii
 t _GLOBAL__sub_I_convar.stdout.rel_tf_osx_builder.53344.c3Wj3a.ii
 t _GLOBAL__sub_I_lzmaDecode.stdout.rel_tf_osx_builder.53346.E9e3sE.ii
 t _GLOBAL__sub_I_scriplib.stdout.rel_tf_osx_builder.56517.IEO1P3.ii
 t _GLOBAL__sub_I_sse.stdout.rel_tf_osx_builder.90768.DcbOud.ii
 t _GLOBAL__sub_I_utlbuffer.stdout.rel_tf_osx_builder.90365.1luepP.ii
 t _GLOBAL__sub_I_utlsymbol.stdout.rel_tf_osx_builder.90388.2ggVTf.ii
 t _GLOBAL__sub_I_zip_utils.stdout.rel_tf_osx_builder.95660.jxgYd5.ii
 t __CreateCBSPPackIBSPPack_interface()
 time
 tmpnam
 typeinfo for std::bad_alloc
 unlink
 vsnprintf
 vtable for __cxxabiv1::__class_type_info
 vtable for __cxxabiv1::__si_class_type_info
 vtable for __cxxabiv1::__vmi_class_type_info
