	Padding the vertex format with extra texcoords
	Will not warn again.
	w4A1
	w@F1
        000000  00``
     0
     PPP`
    @@00  PP
   PPPPP P000P0
  00  
  0@p
  0@p0 
  p@ 
 @p0p`
 ERROR: failed to create vertex decl for vertex format 0x%08llX! You'll probably see messed-up mesh rendering - to diagnose, build shaderapidx9.dll in debug.
 ReadToken overflow
 unrecognized shader compression type = file corrupt?
!!!!!Using invalid shader combo!!!!!  Consult a programmer and tell them to build debug materialsystem.dll and stdshader*.dll.  Run with "mat_bufferprimitives 0" and look for CMaterial in the call stack and see what m_pDebugName is.  You are likely using a shader combo that has been skipped.
"CreateInterface
"ffffff.
#base
#base is NULL 
#include
#include is NULL 
$LINUX
$POSIX
$WIN32
$WINDOWS
$X360
%1.2f 
%d MB of system RAM
%f %f %f %f
%s ps-combo %d
%s vs-combo %d
(*%s*), 
**** WARNING: Transition table overflow. Grab Brian
,^_[]
-1 = use hardware caps. 0 = use hardware srgb. 1 = use shader srgb(software lookup)
-arbmode
-debugdxsupport
-disallowhwmorph
-dxlevel
-force_device_id
-force_vendor_id
-forcenovsync
-glslcontrolflow
-ignoredxsupportcfg
-limitvsconst
-maxdxlevel
-no_compressed_verts
-nops2b
-noshadersondemand
-nosrgb
-nouserclip
-nulldevice
-shader
.ffffff.
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk/usr/include/ctype.h
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/algorithm
/System/Library/Frameworks/Carbon.framework/Versions/A/Carbon
/System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa
/System/Library/Frameworks/IOKit.framework/Versions/A/IOKit
/System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL
/System/Library/Frameworks/Quartz.framework/Versions/A/Quartz
/Users/buildbot/buildslave/../.ccache/tmp/
/Users/buildbot/buildslave/rel_hl2_osx/build/src/bitmap/imageformat.cpp
/Users/buildbot/buildslave/rel_hl2_osx/build/src/build/Release/libbitmap.a(imageformat.o)
/Users/buildbot/buildslave/rel_hl2_osx/build/src/build/Release/libmathlib.a(color_conversion.o)
/Users/buildbot/buildslave/rel_hl2_osx/build/src/build/Release/libmathlib.a(mathlib_base.o)
/Users/buildbot/buildslave/rel_hl2_osx/build/src/build/Release/libmathlib.a(sse.o)
/Users/buildbot/buildslave/rel_hl2_osx/build/src/build/Release/libmathlib.a(vmatrix.o)
/Users/buildbot/buildslave/rel_hl2_osx/build/src/build/Release/libtier1.a(KeyValues.o)
/Users/buildbot/buildslave/rel_hl2_osx/build/src/build/Release/libtier1.a(LzmaDec.o)
/Users/buildbot/buildslave/rel_hl2_osx/build/src/build/Release/libtier1.a(checksum_crc.o)
/Users/buildbot/buildslave/rel_hl2_osx/build/src/build/Release/libtier1.a(convar.o)
/Users/buildbot/buildslave/rel_hl2_osx/build/src/build/Release/libtier1.a(diff.o)
/Users/buildbot/buildslave/rel_hl2_osx/build/src/build/Release/libtier1.a(interface.o)
/Users/buildbot/buildslave/rel_hl2_osx/build/src/build/Release/libtier1.a(lzmaDecoder.o)
/Users/buildbot/buildslave/rel_hl2_osx/build/src/build/Release/libtier1.a(strtools.o)
/Users/buildbot/buildslave/rel_hl2_osx/build/src/build/Release/libtier1.a(strtools_unicode.o)
/Users/buildbot/buildslave/rel_hl2_osx/build/src/build/Release/libtier1.a(tier1.o)
/Users/buildbot/buildslave/rel_hl2_osx/build/src/build/Release/libtier1.a(utlbuffer.o)
/Users/buildbot/buildslave/rel_hl2_osx/build/src/build/Release/libtier1.a(utlstring.o)
/Users/buildbot/buildslave/rel_hl2_osx/build/src/build/Release/libtier1.a(utlsymbol.o)
/Users/buildbot/buildslave/rel_hl2_osx/build/src/build/Release/libtier2.a(meshutils.o)
/Users/buildbot/buildslave/rel_hl2_osx/build/src/build/Release/libtier2.a(tier2.o)
/Users/buildbot/buildslave/rel_hl2_osx/build/src/build/buildbot_osx.build/Release/shaderapidx9.build/Objects-normal/i386/TransitionTable.o
/Users/buildbot/buildslave/rel_hl2_osx/build/src/build/buildbot_osx.build/Release/shaderapidx9.build/Objects-normal/i386/colorformatdx8.o
/Users/buildbot/buildslave/rel_hl2_osx/build/src/build/buildbot_osx.build/Release/shaderapidx9.build/Objects-normal/i386/cvballoctracker.o
/Users/buildbot/buildslave/rel_hl2_osx/build/src/build/buildbot_osx.build/Release/shaderapidx9.build/Objects-normal/i386/hardwareconfig.o
/Users/buildbot/buildslave/rel_hl2_osx/build/src/build/buildbot_osx.build/Release/shaderapidx9.build/Objects-normal/i386/memoverride.o
/Users/buildbot/buildslave/rel_hl2_osx/build/src/build/buildbot_osx.build/Release/shaderapidx9.build/Objects-normal/i386/meshbase.o
/Users/buildbot/buildslave/rel_hl2_osx/build/src/build/buildbot_osx.build/Release/shaderapidx9.build/Objects-normal/i386/meshdx8.o
/Users/buildbot/buildslave/rel_hl2_osx/build/src/build/buildbot_osx.build/Release/shaderapidx9.build/Objects-normal/i386/shaderapibase.o
/Users/buildbot/buildslave/rel_hl2_osx/build/src/build/buildbot_osx.build/Release/shaderapidx9.build/Objects-normal/i386/shaderapidx8.o
/Users/buildbot/buildslave/rel_hl2_osx/build/src/build/buildbot_osx.build/Release/shaderapidx9.build/Objects-normal/i386/shaderdevicebase.o
/Users/buildbot/buildslave/rel_hl2_osx/build/src/build/buildbot_osx.build/Release/shaderapidx9.build/Objects-normal/i386/shaderdevicedx8.o
/Users/buildbot/buildslave/rel_hl2_osx/build/src/build/buildbot_osx.build/Release/shaderapidx9.build/Objects-normal/i386/shadershadowdx8.o
/Users/buildbot/buildslave/rel_hl2_osx/build/src/build/buildbot_osx.build/Release/shaderapidx9.build/Objects-normal/i386/texturedx8.o
/Users/buildbot/buildslave/rel_hl2_osx/build/src/build/buildbot_osx.build/Release/shaderapidx9.build/Objects-normal/i386/vertexdecl.o
/Users/buildbot/buildslave/rel_hl2_osx/build/src/build/buildbot_osx.build/Release/shaderapidx9.build/Objects-normal/i386/vertexshaderdx8.o
/Users/buildbot/buildslave/rel_hl2_osx/build/src/build/buildbot_osx.build/Release/shaderapidx9.build/Objects-normal/i386/winutils.o
/Users/buildbot/buildslave/rel_hl2_osx/build/src/materialsystem/shaderapidx9/TransitionTable.cpp
/Users/buildbot/buildslave/rel_hl2_osx/build/src/materialsystem/shaderapidx9/TransitionTable.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/materialsystem/shaderapidx9/colorformatdx8.cpp
/Users/buildbot/buildslave/rel_hl2_osx/build/src/materialsystem/shaderapidx9/cvballoctracker.cpp
/Users/buildbot/buildslave/rel_hl2_osx/build/src/materialsystem/shaderapidx9/dynamicib.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/materialsystem/shaderapidx9/dynamicvb.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/materialsystem/shaderapidx9/hardwareconfig.cpp
/Users/buildbot/buildslave/rel_hl2_osx/build/src/materialsystem/shaderapidx9/hardwareconfig.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/materialsystem/shaderapidx9/meshbase.cpp
/Users/buildbot/buildslave/rel_hl2_osx/build/src/materialsystem/shaderapidx9/meshbase.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/materialsystem/shaderapidx9/meshdx8.cpp
/Users/buildbot/buildslave/rel_hl2_osx/build/src/materialsystem/shaderapidx9/shaderapi_global.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/materialsystem/shaderapidx9/shaderapibase.cpp
/Users/buildbot/buildslave/rel_hl2_osx/build/src/materialsystem/shaderapidx9/shaderapibase.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/materialsystem/shaderapidx9/shaderapidx8.cpp
/Users/buildbot/buildslave/rel_hl2_osx/build/src/materialsystem/shaderapidx9/shaderapidx8.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/materialsystem/shaderapidx9/shaderapidx8_global.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/materialsystem/shaderapidx9/shaderdevicebase.cpp
/Users/buildbot/buildslave/rel_hl2_osx/build/src/materialsystem/shaderapidx9/shaderdevicebase.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/materialsystem/shaderapidx9/shaderdevicedx8.cpp
/Users/buildbot/buildslave/rel_hl2_osx/build/src/materialsystem/shaderapidx9/shaderdevicedx8.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/materialsystem/shaderapidx9/shadershadowdx8.cpp
/Users/buildbot/buildslave/rel_hl2_osx/build/src/materialsystem/shaderapidx9/texturedx8.cpp
/Users/buildbot/buildslave/rel_hl2_osx/build/src/materialsystem/shaderapidx9/vertexdecl.cpp
/Users/buildbot/buildslave/rel_hl2_osx/build/src/materialsystem/shaderapidx9/vertexshaderdx8.cpp
/Users/buildbot/buildslave/rel_hl2_osx/build/src/materialsystem/shaderapidx9/vertexshaderdx8.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/materialsystem/shaderapidx9/winutils.cpp
/Users/buildbot/buildslave/rel_hl2_osx/build/src/mathlib/color_conversion.cpp
/Users/buildbot/buildslave/rel_hl2_osx/build/src/mathlib/mathlib_base.cpp
/Users/buildbot/buildslave/rel_hl2_osx/build/src/mathlib/sse.cpp
/Users/buildbot/buildslave/rel_hl2_osx/build/src/mathlib/vmatrix.cpp
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/bitmap/imageformat.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/filesystem.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/materialsystem/imaterial.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/materialsystem/imaterialsystem.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/materialsystem/imaterialsystemhardwareconfig.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/materialsystem/imesh.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/materialsystem/materialsystem_config.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/mathlib/lightdesc.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/mathlib/mathlib.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/mathlib/vector.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/mathlib/vector2d.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/mathlib/vector4d.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/mathlib/vmatrix.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/pixelwriter.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/shaderapi/IShaderDevice.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/shaderapi/ishaderapi.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/shaderapi/ishaderdynamic.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/tier0/basetypes.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/tier0/memalloc.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/tier0/memoverride.cpp
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/tier0/platform.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/tier0/threadtools.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/tier0/vprof.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/tier1/KeyValues.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/tier1/UtlSortVector.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/tier1/byteswap.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/tier1/callqueue.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/tier1/convar.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/tier1/functors.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/tier1/refcount.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/tier1/strtools.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/tier1/utlbuffer.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/tier1/utlfixedmemory.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/tier1/utllinkedlist.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/tier1/utlmemory.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/tier1/utlrbtree.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/tier1/utlstack.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/tier1/utlstring.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/tier1/utlsymbol.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/tier1/utlvector.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/togl/linuxwin/dxabstract.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/togl/linuxwin/glentrypoints.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/public/togl/linuxwin/glmgr.h
/Users/buildbot/buildslave/rel_hl2_osx/build/src/tier1/KeyValues.cpp
/Users/buildbot/buildslave/rel_hl2_osx/build/src/tier1/checksum_crc.cpp
/Users/buildbot/buildslave/rel_hl2_osx/build/src/tier1/convar.cpp
/Users/buildbot/buildslave/rel_hl2_osx/build/src/tier1/diff.cpp
/Users/buildbot/buildslave/rel_hl2_osx/build/src/tier1/interface.cpp
/Users/buildbot/buildslave/rel_hl2_osx/build/src/tier1/lzmaDecoder.cpp
/Users/buildbot/buildslave/rel_hl2_osx/build/src/tier1/strtools.cpp
/Users/buildbot/buildslave/rel_hl2_osx/build/src/tier1/strtools_unicode.cpp
/Users/buildbot/buildslave/rel_hl2_osx/build/src/tier1/tier1.cpp
/Users/buildbot/buildslave/rel_hl2_osx/build/src/tier1/utlbuffer.cpp
/Users/buildbot/buildslave/rel_hl2_osx/build/src/tier1/utlstring.cpp
/Users/buildbot/buildslave/rel_hl2_osx/build/src/tier1/utlsymbol.cpp
/Users/buildbot/buildslave/rel_hl2_osx/build/src/tier2/meshutils.cpp
/Users/buildbot/buildslave/rel_hl2_osx/build/src/tier2/tier2.cpp
/Users/buildbot/buildslave/rel_hl2_osx/build/src/utils/lzma/C/LzmaDec.c
/usr/lib/libSystem.B.dylib
/usr/lib/libc++.1.dylib
/usr/lib/libiconv.2.dylib
0  000Ppp@@@00
00    
00    ``
000000
000@0P0@0@0
0=HNTZ
0@00   
0@@```p
0pp    
0pp 00p
0x%016llX
10ConCommand
10IAppSystem
10IShaderAPI
11IRefCounted
127.0.0.1
12CBaseMeshDX8
12CEmptyConVar
12CRefCounted1I8CFunctor20CRefCountServiceBaseILb1E6CRefMTEE
12CTempMeshDX8
12IIndexBuffer
13CShaderAPIDx8
13CShaderBufferI11ID3DXBufferE
13IShaderAPIDX8
13IShaderBuffer
13IShaderDevice
13IShaderShadow
13IVertexBuffer
14CShaderAPIBase
14CShaderManager
14ConCommandBase
14IShaderManager
15CDynamicMeshDX8
15CHardwareConfig
15CIndexBufferDx8
15CVBAllocTracker
15IVBAllocTracker
16CBufferedMeshDX8
16CDefaultAccessor
16CIndexBufferBase
16CShaderDeviceDx8
16CShaderShadowDX8
16CTransitionTable
16CVertexBufferDx8
16IShaderDeviceMgr
16IShaderShadowDX8
17CShaderDeviceBase
17CVertexBufferBase
17IDebugTextureInfo
17IShaderDynamicAPI
18CUtlCharConversion
19CShaderDeviceMgrDx8
19CUtlNoEscConversion
20CRefCountServiceBaseILb1E6CRefMTE
20CShaderDeviceMgrBase
23IConCommandBaseAccessor
23IHardwareConfigInternal
24CShaderAPIConVarAccessor
29IMaterialSystemHardwareConfig
2fff.
32 bit buffer (hack)
4fffff.
5IMesh
6ConVar
7IConVar
7fffff.
8CFunctor
8CMeshDX8
8CMeshMgr
8IMeshMgr
8fff.
9@`u	9@d
9@du<
9@duG
9CFunctor1IPFvP21IDirect3DBaseTexture9ES1_12CRefCounted1I8CFunctor20CRefCountServiceBaseILb1E6CRefMTEEE
9CMeshBase
9F$r*
9F<t"
9G t^
9I`u	9Id
9LZMA
9[`u	9[d
9ffffff.
9v`u	9vd
;p$t>
;r(t.
;y$t>
;zTt7
;zTt;
<^_[]
<rFGCu
=BTI1u
=CF24
=DF16t
=DF24
=INTZ
=RAWZu
@(^_]
@00PP`
@@@0000    
@@@@ 
@@@@@@    
@@@@@PP
@@PPPPPP
@CThreadEvent::CThreadEvent(bool)
@CThreadEvent::Set()
@CThreadFastMutex::Lock(unsigned int, unsigned int) volatile
@CThreadRWLock::LockForWrite()
@CThreadRWLock::UnlockWrite()
@CThreadRWLock::WaitForRead()
@CThreadSyncObject::~CThreadSyncObject()
@CVProfNode::EnterScope()
@CVProfNode::ExitScope()
@CVProfNode::GetSubNode(char const*, int, char const*, int)
@CVProfile::FindOrCreateCounter(char const*, CounterGroup_t)
@D3DXMATRIX::operator float*()
@D3DXMATRIX::operator!=(D3DXMATRIX const&) const
@D3DXMATRIX::operator()(int, int)
@D3DXMATRIX::operator*(D3DXMATRIX const&) const
@D3DXPLANE::operator float*()
@D3DXPLANE::operator!=(D3DXPLANE const&)
@D3DXPLANE::operator[](int)
@D3DXVECTOR2::operator float*()
@D3DXVECTOR3::D3DXVECTOR3(float, float, float)
@D3DXVECTOR3::operator float*()
@D3DXVECTOR4::D3DXVECTOR4(float, float, float, float)
@DevMsg(char const*, ...)
@DevWarning(char const*, ...)
@ID3DXBuffer::GetBufferPointer()
@ID3DXBuffer::GetBufferSize()
@ID3DXMatrixStack::GetTop()
@ID3DXMatrixStack::LoadIdentity()
@ID3DXMatrixStack::LoadMatrix(D3DXMATRIX const*)
@ID3DXMatrixStack::MultMatrix(D3DXMATRIX const*)
@ID3DXMatrixStack::MultMatrixLocal(D3DXMATRIX const*)
@ID3DXMatrixStack::Pop()
@ID3DXMatrixStack::Push()
@ID3DXMatrixStack::Release(int, char*)
@ID3DXMatrixStack::RotateAxisLocal(D3DXVECTOR3 const*, float)
@ID3DXMatrixStack::ScaleLocal(float, float, float)
@ID3DXMatrixStack::TranslateLocal(float, float, float)
@IDirect3D9::CheckDepthStencilMatch(unsigned int, _D3DDEVTYPE, _D3DFORMAT, _D3DFORMAT, _D3DFORMAT)
@IDirect3D9::CheckDeviceFormat(unsigned int, _D3DDEVTYPE, _D3DFORMAT, unsigned int, _D3DRESOURCETYPE, _D3DFORMAT)
@IDirect3D9::CheckDeviceMultiSampleType(unsigned int, _D3DDEVTYPE, _D3DFORMAT, int, _D3DMULTISAMPLE_TYPE, unsigned int*)
@IDirect3D9::CheckDeviceType(unsigned int, _D3DDEVTYPE, _D3DFORMAT, _D3DFORMAT, int)
@IDirect3D9::CreateDevice(unsigned int, _D3DDEVTYPE, void*, unsigned int, _D3DPRESENT_PARAMETERS_*, IDirect3DDevice9**)
@IDirect3D9::EnumAdapterModes(unsigned int, _D3DFORMAT, unsigned int, _D3DDISPLAYMODE*)
@IDirect3D9::GetAdapterCount()
@IDirect3D9::GetAdapterDisplayMode(unsigned int, _D3DDISPLAYMODE*)
@IDirect3D9::GetAdapterIdentifier(unsigned int, unsigned int, _D3DADAPTER_IDENTIFIER9*)
@IDirect3D9::GetAdapterModeCount(unsigned int, _D3DFORMAT)
@IDirect3D9::GetDeviceCaps(unsigned int, _D3DDEVTYPE, _D3DCAPS9*)
@IDirect3DBaseTexture9::GetLevelCount()
@IDirect3DBaseTexture9::GetLevelDesc(unsigned int, _D3DSURFACE_DESC*)
@IDirect3DBaseTexture9::GetType()
@IDirect3DCubeTexture9::GetCubeMapSurface(_D3DCUBEMAP_FACES, unsigned int, IDirect3DSurface9**)
@IDirect3DCubeTexture9::GetLevelDesc(unsigned int, _D3DSURFACE_DESC*)
@IDirect3DDevice9::AcquireThreadOwnership()
@IDirect3DDevice9::BeginScene()
@IDirect3DDevice9::Clear(unsigned int, _D3DRECT const*, unsigned int, unsigned int, float, unsigned int)
@IDirect3DDevice9::CreateCubeTexture(unsigned int, unsigned int, unsigned int, _D3DFORMAT, _D3DPOOL, IDirect3DCubeTexture9**, void**, char*)
@IDirect3DDevice9::CreateDepthStencilSurface(unsigned int, unsigned int, _D3DFORMAT, _D3DMULTISAMPLE_TYPE, unsigned int, int, IDirect3DSurface9**, void**)
@IDirect3DDevice9::CreateIndexBuffer(unsigned int, unsigned int, _D3DFORMAT, _D3DPOOL, IDirect3DIndexBuffer9**, void**)
@IDirect3DDevice9::CreateOffscreenPlainSurface(unsigned int, unsigned int, _D3DFORMAT, _D3DPOOL, IDirect3DSurface9**, void**)
@IDirect3DDevice9::CreatePixelShader(unsigned int const*, IDirect3DPixelShader9**, char const*, char*, unsigned int const*)
@IDirect3DDevice9::CreateQuery(_D3DQUERYTYPE, IDirect3DQuery9**)
@IDirect3DDevice9::CreateRenderTarget(unsigned int, unsigned int, _D3DFORMAT, _D3DMULTISAMPLE_TYPE, unsigned int, int, IDirect3DSurface9**, void**, char*)
@IDirect3DDevice9::CreateTexture(unsigned int, unsigned int, unsigned int, unsigned int, _D3DFORMAT, _D3DPOOL, IDirect3DTexture9**, void**, char*)
@IDirect3DDevice9::CreateVertexBuffer(unsigned int, unsigned int, unsigned int, _D3DPOOL, IDirect3DVertexBuffer9**, void**)
@IDirect3DDevice9::CreateVertexDeclaration(_D3DVERTEXELEMENT9 const*, IDirect3DVertexDeclaration9**)
@IDirect3DDevice9::CreateVertexShader(unsigned int const*, IDirect3DVertexShader9**, char const*, char*)
@IDirect3DDevice9::CreateVolumeTexture(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, _D3DFORMAT, _D3DPOOL, IDirect3DVolumeTexture9**, void**, char*)
@IDirect3DDevice9::DrawIndexedPrimitive(_D3DPRIMITIVETYPE, int, unsigned int, unsigned int, unsigned int, unsigned int)
@IDirect3DDevice9::DrawPrimitive(_D3DPRIMITIVETYPE, unsigned int, unsigned int)
@IDirect3DDevice9::EndScene()
@IDirect3DDevice9::EvictManagedResources()
@IDirect3DDevice9::GetDepthStencilSurface(IDirect3DSurface9**)
@IDirect3DDevice9::GetDeviceCaps(_D3DCAPS9*)
@IDirect3DDevice9::GetRenderTarget(unsigned int, IDirect3DSurface9**)
@IDirect3DDevice9::GetRenderTargetData(IDirect3DSurface9*, IDirect3DSurface9*)
@IDirect3DDevice9::LightEnable(unsigned int, int)
@IDirect3DDevice9::LinkShaderPair(IDirect3DVertexShader9*, IDirect3DPixelShader9*)
@IDirect3DDevice9::Present(_RECT const*, _RECT const*, void*, RGNDATA const*)
@IDirect3DDevice9::QueryShaderPair(int, GLMShaderPairInfo*)
@IDirect3DDevice9::ReleaseThreadOwnership()
@IDirect3DDevice9::Reset(_D3DPRESENT_PARAMETERS_*)
@IDirect3DDevice9::SetClipPlane(unsigned int, float const*)
@IDirect3DDevice9::SetDepthStencilSurface(IDirect3DSurface9*)
@IDirect3DDevice9::SetGammaRamp(unsigned int, unsigned int, _D3DGAMMARAMP const*)
@IDirect3DDevice9::SetLight(unsigned int, _D3DLIGHT9 const*)
@IDirect3DDevice9::SetMaterial(_D3DMATERIAL9 const*)
@IDirect3DDevice9::SetPixelShaderConstantB(unsigned int, int const*, unsigned int)
@IDirect3DDevice9::SetPixelShaderConstantI(unsigned int, int const*, unsigned int)
@IDirect3DDevice9::SetRenderState(_D3DRENDERSTATETYPE, unsigned int)
@IDirect3DDevice9::SetRenderTarget(unsigned int, IDirect3DSurface9*)
@IDirect3DDevice9::SetScissorRect(_RECT const*)
@IDirect3DDevice9::SetTextureStageState(unsigned int, _D3DTEXTURESTAGESTATETYPE, unsigned int)
@IDirect3DDevice9::SetTransform(_D3DTRANSFORMSTATETYPE, D3DMATRIX const*)
@IDirect3DDevice9::SetViewport(_D3DVIEWPORT9 const*)
@IDirect3DDevice9::ShowCursor(int)
@IDirect3DDevice9::StretchRect(IDirect3DSurface9*, _RECT const*, IDirect3DSurface9*, _RECT const*, _D3DTEXTUREFILTERTYPE)
@IDirect3DDevice9::TestCooperativeLevel()
@IDirect3DIndexBuffer9::Lock(unsigned int, unsigned int, void**, unsigned int)
@IDirect3DIndexBuffer9::Unlock()
@IDirect3DIndexBuffer9::UnlockActualSize(unsigned int, void const*)
@IDirect3DQuery9::GetData(void*, unsigned int, unsigned int)
@IDirect3DQuery9::Issue(unsigned int)
@IDirect3DResource9::SetPriority(unsigned int)
@IDirect3DSurface9::GetDesc(_D3DSURFACE_DESC*)
@IDirect3DSurface9::LockRect(_D3DLOCKED_RECT*, _RECT const*, unsigned int)
@IDirect3DSurface9::UnlockRect()
@IDirect3DTexture9::GetSurfaceLevel(unsigned int, IDirect3DSurface9**)
@IDirect3DVertexBuffer9::Lock(unsigned int, unsigned int, void**, unsigned int)
@IDirect3DVertexBuffer9::Unlock()
@IDirect3DVertexBuffer9::UnlockActualSize(unsigned int, void const*)
@IDirect3DVolumeTexture9::GetLevelDesc(unsigned int, _D3DVOLUME_DESC*)
@IDirect3DVolumeTexture9::LockBox(unsigned int, _D3DLOCKED_BOX*, _D3DBOX const*, unsigned int)
@IDirect3DVolumeTexture9::UnlockBox(unsigned int)
@_COM_TimestampedLog
@_CallAssertFailedNotifyFunc
@_CommandLine_Tier0
@_D3DPERF_SetOptions
@_D3DXCompileShader
@_D3DXCreateMatrixStack
@_D3DXMatrixIdentity
@_D3DXMatrixInverse
@_D3DXMatrixMultiply
@_D3DXMatrixOrthoOffCenterRH
@_D3DXMatrixPerspectiveOffCenterRH
@_D3DXMatrixPerspectiveRH
@_D3DXMatrixTranslation
@_D3DXMatrixTranspose
@_D3DXPlaneNormalize
@_D3DXPlaneTransform
@_D3DXVec3TransformCoord
@_D3DXVec4Normalize
@_D3DXVec4Transform
@_DWarning
@_DevMsg
@_Direct3DCreate9
@_DoNewAssertDialog
@_Error
@_GetCPUInformation
@_KeyValuesSystem
@_Msg
@_Plat_DebugString
@_Plat_FloatTime
@_Plat_GetPagedPoolInfo
@_Plat_IsInDebugSession
@_ShouldUseNewAssertDialog
@_ThreadGetCurrentId
@_ThreadInMainThread
@_ThreadInterlockedAssignIf
@_ThreadInterlockedDecrement
@_ThreadInterlockedExchange
@_ThreadInterlockedIncrement
@_ThreadSleep
@_ToGLConnectLibraries
@_ToGLDisconnectLibraries
@_Warning
@__DefaultRuneLocale
@__ExitOnFatalAssert
@__SpewInfo
@__SpewMessage
@__Unwind_Resume
@___bzero
@___cxa_atexit
@___cxa_begin_catch
@___cxa_call_unexpected
@___cxa_guard_abort
@___cxa_guard_acquire
@___cxa_guard_release
@___cxa_pure_virtual
@___error
@___gxx_personality_v0
@___maskrune
@___stack_chk_fail
@___stack_chk_guard
@___tolower
@_atof
@_atoi
@_cosf
@_g_VProfCurrentProfile
@_g_pMemAlloc
@_memcmp
@_memcpy
@_memmove
@_memset_pattern16
@_pow
@_pthread_mutex_destroy
@_pthread_mutex_init
@_pthread_mutex_lock
@_pthread_mutex_unlock
@_pthread_mutexattr_init
@_pthread_mutexattr_settype
@_qsort
@_raise
@_sin
@_sprintf
@_sscanf
@_strcasecmp
@_strchr
@_strcmp
@_strlen
@_strncat
@_strncpy
@_strtod$UNIX2003
@_strtol
@_strtoul
@_swprintf
@_tan
@_toglGetClientRect
@_vsnprintf
@_wcslen
@_wcstol
@dyld_stub_binder
@loader_path/libtier0.dylib
@loader_path/libtogl.dylib
@loader_path/libvstdlib.dylib
@loader_path/shaderapidx9.dylib
@std::terminate()
@typeinfo for std::bad_alloc
@vtable for __cxxabiv1::__class_type_info
@vtable for __cxxabiv1::__si_class_type_info
@vtable for __cxxabiv1::__vmi_class_type_info
A ff.
ABGR8888
ALPHA %s CUBEMAP %s MIPCUBEMAP %s SQUAREONLY %s
ARGB8888
ATI1N
ATI1uC
ATI2N
ATI2u
ATI_DST16
ATI_DST24
AVBSAUA
A]A`7A`
A`#ARBRBRBRBRBRBRBRBp
A`+CRBRB`;ARBSAp
A`7A`
AddKey(KeyValues*, KeyValues*)
AdjustUpdateRange(float const*, void const*, int, int*)
AlphaFunc: invalid param
ApplyActivateFixedFunction(ShadowState_t const&, int)
ApplyAlphaBlend(ShadowState_t const&, int)
ApplyAlphaTest(ShadowState_t const&, int)
ApplyAlphaTextureStage(ShadowState_t const&, int)
ApplyAlphaToCoverage(ShadowState_t const&, int)
ApplyColorTextureStage(ShadowState_t const&, int)
ApplyColorWriteEnable(ShadowState_t const&, int)
ApplyCullEnable(ShadowState_t const&, int)
ApplyDepthTest(ShadowState_t const&, int)
ApplyDiffs(unsigned char const*, unsigned char const*, int, int, int&, unsigned char*, unsigned int)
ApplyDiffuseMaterialSource(ShadowState_t const&, int)
ApplyDisableFogGammaCorrection(ShadowState_t const&, int)
ApplyFetch4Enable(ShadowState_t const&, int)
ApplyFillMode(ShadowState_t const&, int)
ApplyFogMode(ShadowState_t const&, int)
ApplyLighting(ShadowState_t const&, int)
ApplySRGBReadEnable(ShadowState_t const&, int)
ApplySRGBWriteEnable(ShadowState_t const&, int)
ApplySeparateAlphaBlend(ShadowState_t const&, int)
ApplyShadowFilterEnable(ShadowState_t const&, int)
ApplySpecularEnable(ShadowState_t const&, int)
ApplyTexCoordIndex(ShadowState_t const&, int)
ApplyTextureEnable(ShadowState_t const&, int)
ApplyVertexBlendEnable(ShadowState_t const&, int)
ApplyZWriteEnable(ShadowState_t const&, int)
Assertion Failed: !m_bNeedsSort
Attempted to set too many flex weights! Max is %d
Attempting set SRGBRead state on an invalid sampler (%d)!
Attempting set shadow filtering state on an invalid sampler (%d)!
Attempting to bind a texture to an invalid sampler (%d)!
Attempting to bind a vertex texture (%s) which was not created as a vertex texture!
BACKBUFFER
BGR565
BGR888
BGR888_BLUESCREEN
BGRA4444
BGRA5551
BGRA8888
BGRX5551
BGRX8888
BI %d %d %d %d 
BLENDOP %s CLIPPLANESCALEDPOINTS %s CLIPTLVERTS %s
BTI1	
BTI1BTI1BTI1
BTI1]
BTI1t
Bffffff.
BindsFrame
BindsMax
BlendFunc: invalid factor
BlendOp: invalid op
BlitTextureBits(TextureLoadInfo_t&, int, int, int)
BlitVolumeBits: couldn't lock volume texture rect
BlitVolumeBits: couldn't unlock volume texture rect
BuildGammaTable(float, float, float, int)
C b %3d g %3d r %3d a %3d 
CANBLTSYSTONONLOCAL %s CANRENDERAFTERFLIP %s HWRASTERIZATION %s
CBaseMeshDX8::BeginCastBuffer(MaterialIndexFormat_t)
CBaseMeshDX8::BeginCastBuffer(unsigned long long)
CBaseMeshDX8::BeginPass()
CBaseMeshDX8::ComputeMemoryUsed()
CBaseMeshDX8::CopyToMeshBuilder(int, int, int, int, int, CMeshBuilder&)
CBaseMeshDX8::DisableFlexMesh()
CBaseMeshDX8::Draw(CPrimList*, int)
CBaseMeshDX8::EndCastBuffer()
CBaseMeshDX8::GetIndexBuffer()
CBaseMeshDX8::GetMorphFormat() const
CBaseMeshDX8::GetRoomRemaining() const
CBaseMeshDX8::GetVertexBuffer()
CBaseMeshDX8::GetVertexFormat() const
CBaseMeshDX8::HasColorMesh() const
CBaseMeshDX8::HasEnoughRoom(int, int) const
CBaseMeshDX8::HasFlexMesh() const
CBaseMeshDX8::IndexFormat() const
CBaseMeshDX8::IsUsingMorphData() const
CBaseMeshDX8::Lock(int, bool, IndexDesc_t&)
CBaseMeshDX8::Lock(int, bool, VertexDesc_t&)
CBaseMeshDX8::MarkAsDrawn()
CBaseMeshDX8::ModifyBegin(bool, int, int, IndexDesc_t&)
CBaseMeshDX8::ModifyBegin(int, int, int, int, MeshDesc_t&)
CBaseMeshDX8::ModifyBeginEx(bool, int, int, int, int, MeshDesc_t&)
CBaseMeshDX8::ModifyEnd(IndexDesc_t&)
CBaseMeshDX8::ModifyEnd(MeshDesc_t&)
CBaseMeshDX8::NeedsVertexFormatReset(unsigned long long) const
CBaseMeshDX8::PreLock()
CBaseMeshDX8::SetColorMesh(IMesh*, int)
CBaseMeshDX8::SetFlexMesh(IMesh*, int)
CBaseMeshDX8::SetMaterial(IMaterial*)
CBaseMeshDX8::SetMorphFormat(unsigned int)
CBaseMeshDX8::SetVertexFormat(unsigned long long)
CBaseMeshDX8::Spew(int, IndexDesc_t const&)
CBaseMeshDX8::Spew(int, VertexDesc_t const&)
CBaseMeshDX8::Spew(int, int, MeshDesc_t const&)
CBaseMeshDX8::Unlock(int, IndexDesc_t&)
CBaseMeshDX8::Unlock(int, VertexDesc_t&)
CBaseMeshDX8::ValidateData(int, IndexDesc_t const&)
CBaseMeshDX8::ValidateData(int, VertexDesc_t const&)
CBaseMeshDX8::ValidateData(int, int, MeshDesc_t const&)
CBaseMeshDX8::VertexCount() const
CBufferedMeshDX8::BeginCastBuffer(MaterialIndexFormat_t)
CBufferedMeshDX8::Draw(int, int)
CBufferedMeshDX8::EndCastBuffer()
CBufferedMeshDX8::Flush
CBufferedMeshDX8::Flush()
CBufferedMeshDX8::GetPrimitiveType() const
CBufferedMeshDX8::GetRoomRemaining() const
CBufferedMeshDX8::GetVertexFormat() const
CBufferedMeshDX8::HandleLateCreation()
CBufferedMeshDX8::IndexCount() const
CBufferedMeshDX8::IndexFormat() const
CBufferedMeshDX8::IsDynamic() const
CBufferedMeshDX8::LockMesh(int, int, MeshDesc_t&)
CBufferedMeshDX8::RenderPass()
CBufferedMeshDX8::SetFlexMesh(IMesh*, int)
CBufferedMeshDX8::SetMaterial(IMaterial*)
CBufferedMeshDX8::SetMorphFormat(unsigned int)
CBufferedMeshDX8::SetPrimitiveType(MaterialPrimitiveType_t)
CBufferedMeshDX8::SetVertexFormat(unsigned long long)
CBufferedMeshDX8::Spew(int, int, MeshDesc_t const&)
CBufferedMeshDX8::UnlockMesh(int, int, MeshDesc_t&)
CBufferedMeshDX8::ValidateData(int, int, MeshDesc_t const&)
CBufferedMeshDX8::~CBufferedMeshDX8()
CC_DumpVBMemAllocs()
CCleanupUtlSymbolTable::~CCleanupUtlSymbolTable()
CDefaultAccessor::RegisterConCommandBase(ConCommandBase*)
CDynamicMeshDX8
CDynamicMeshDX8::Draw
CDynamicMeshDX8::Draw(int, int)
CDynamicMeshDX8::HasEnoughRoom(int, int) const
CDynamicMeshDX8::IndexCount() const
CDynamicMeshDX8::IsDynamic() const
CDynamicMeshDX8::LockMesh(int, int, MeshDesc_t&)
CDynamicMeshDX8::MarkAsDrawn()
CDynamicMeshDX8::NeedsVertexFormatReset(unsigned long long) const
CDynamicMeshDX8::PreLock()
CDynamicMeshDX8::SetVertexFormat(unsigned long long)
CDynamicMeshDX8::UnlockMesh(int, int, MeshDesc_t&)
CDynamicMeshDX8::~CDynamicMeshDX8()
CEmptyConVar::GetName() const
CEmptyConVar::IsFlagSet(int) const
CEmptyConVar::SetValue(char const*)
CEmptyConVar::SetValue(float)
CEmptyConVar::SetValue(int)
CEmptyConVar::~CEmptyConVar()
CFunctor1<void (*)(IDirect3DBaseTexture9*), IDirect3DBaseTexture9*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::operator()()
CFunctor1<void (*)(IDirect3DBaseTexture9*), IDirect3DBaseTexture9*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor1()
CHardwareConfig::ActuallySupportsPixelShaders_2_b() const
CHardwareConfig::CanDoSRGBReadFromRTs() const
CHardwareConfig::CanStretchRectFromTextures() const
CHardwareConfig::FakeSRGBWrite() const
CHardwareConfig::ForceCapsToDXLevel(HardwareCaps_t*, int, HardwareCaps_t const&)
CHardwareConfig::GetActualSamplerCount() const
CHardwareConfig::GetActualTextureStageCount() const
CHardwareConfig::GetDXSupportLevel() const
CHardwareConfig::GetFrameBufferColorDepth() const
CHardwareConfig::GetHDREnabled() const
CHardwareConfig::GetHDRType() const
CHardwareConfig::GetHWSpecificShaderDLLName() const
CHardwareConfig::GetHardwareHDRType() const
CHardwareConfig::GetMaxDXSupportLevel() const
CHardwareConfig::GetMaxVertexTextureDimension() const
CHardwareConfig::GetSamplerCount() const
CHardwareConfig::GetShaderDLLName() const
CHardwareConfig::GetShadowFilterMode() const
CHardwareConfig::GetTextureStageCount() const
CHardwareConfig::GetVertexTextureCount() const
CHardwareConfig::HasDestAlphaBuffer() const
CHardwareConfig::HasFastVertexTextures() const
CHardwareConfig::HasFastVertexTextures() const::bEnableFastVertexTextures
CHardwareConfig::HasProjectedBumpEnv() const
CHardwareConfig::HasSetDeviceGammaRamp() const
CHardwareConfig::HasStencilBuffer() const
CHardwareConfig::IsAAEnabled() const
CHardwareConfig::MaxBlendMatrices() const
CHardwareConfig::MaxBlendMatrixIndices() const
CHardwareConfig::MaxHWMorphBatchCount() const
CHardwareConfig::MaxNumLights() const
CHardwareConfig::MaxTextureAspectRatio() const
CHardwareConfig::MaxTextureDepth() const
CHardwareConfig::MaxTextureHeight() const
CHardwareConfig::MaxTextureWidth() const
CHardwareConfig::MaxUserClipPlanes() const
CHardwareConfig::MaxVertexShaderBlendMatrices() const
CHardwareConfig::MaxViewports() const
CHardwareConfig::MaximumAnisotropicLevel() const
CHardwareConfig::NeedsAAClamp() const
CHardwareConfig::NeedsATICentroidHack() const
CHardwareConfig::NeedsShaderSRGBConversion() const
CHardwareConfig::NumBooleanPixelShaderConstants() const
CHardwareConfig::NumBooleanVertexShaderConstants() const
CHardwareConfig::NumIntegerPixelShaderConstants() const
CHardwareConfig::NumIntegerVertexShaderConstants() const
CHardwareConfig::NumPixelShaderConstants() const
CHardwareConfig::NumVertexShaderConstants() const
CHardwareConfig::OverrideStreamOffsetSupport(bool, bool)
CHardwareConfig::PreferDynamicTextures() const
CHardwareConfig::PreferReducedFillrate() const
CHardwareConfig::ReadPixelsFromFrontBuffer() const
CHardwareConfig::SetHDREnabled(bool)
CHardwareConfig::SetupHardwareCaps(ShaderDeviceInfo_t const&, HardwareCaps_t const&)
CHardwareConfig::SetupHardwareCaps(int, HardwareCaps_t const&)
CHardwareConfig::SpecifiesFogColorInLinearSpace() const
CHardwareConfig::StencilBufferBits() const
CHardwareConfig::SupportsBorderColor() const
CHardwareConfig::SupportsColorOnSecondStream() const
CHardwareConfig::SupportsCompressedTextures() const
CHardwareConfig::SupportsCompressedVertices() const
CHardwareConfig::SupportsCubeMaps() const
CHardwareConfig::SupportsFetch4() const
CHardwareConfig::SupportsGLMixedSizeTargets() const
CHardwareConfig::SupportsHDR() const
CHardwareConfig::SupportsHDRMode(HDRType_t) const
CHardwareConfig::SupportsHardwareLighting() const
CHardwareConfig::SupportsMipmappedCubemaps() const
CHardwareConfig::SupportsMipmapping() const
CHardwareConfig::SupportsNonPow2Textures() const
CHardwareConfig::SupportsOverbright() const
CHardwareConfig::SupportsPixelShaders_1_4() const
CHardwareConfig::SupportsPixelShaders_2_0() const
CHardwareConfig::SupportsPixelShaders_2_b() const
CHardwareConfig::SupportsSRGB() const
CHardwareConfig::SupportsShaderModel_3_0() const
CHardwareConfig::SupportsSpheremapping() const
CHardwareConfig::SupportsStaticControlFlow() const
CHardwareConfig::SupportsStaticPlusDynamicLighting() const
CHardwareConfig::SupportsStreamOffset() const
CHardwareConfig::SupportsVertexAndPixelShaders() const
CHardwareConfig::SupportsVertexShaders_2_0() const
CHardwareConfig::TextureMemorySize() const
CHardwareConfig::UseFastClipping() const
CHardwareConfig::UsesSRGBCorrectBlending() const
CIndexBuffer::CIndexBuffer(IDirect3DDevice9*, int, bool, bool)::_counter
CIndexBuffer::Create(IDirect3DDevice9*)
CIndexBuffer::HandlePerFrameTextureStats(int)
CIndexBuffer::HandlePerFrameTextureStats(int)::_counter
CIndexBuffer::Lock(bool, int, int&, int)
CIndexBuffer::~CIndexBuffer()::_counter
CIndexBufferBase::CIndexBufferBase(char const*)
CIndexBufferBase::Spew(int, IndexDesc_t const&)
CIndexBufferBase::ValidateData(int, IndexDesc_t const&)
CIndexBufferBase::~CIndexBufferBase()
CIndexBufferDx8::Allocate()
CIndexBufferDx8::Allocate()::_counter
CIndexBufferDx8::Allocate: CreateIndexBuffer failed!
CIndexBufferDx8::BeginCastBuffer(MaterialIndexFormat_t)
CIndexBufferDx8::EndCastBuffer()
CIndexBufferDx8::Free()
CIndexBufferDx8::Free()::_counter
CIndexBufferDx8::GetRoomRemaining() const
CIndexBufferDx8::HandlePerFrameTextureStats(int)
CIndexBufferDx8::HandlePerFrameTextureStats(int)::_counter
CIndexBufferDx8::IndexCount() const
CIndexBufferDx8::IndexFormat() const
CIndexBufferDx8::IsDynamic() const
CIndexBufferDx8::Lock(int, bool, IndexDesc_t&)
CIndexBufferDx8::ModifyBegin(bool, int, int, IndexDesc_t&)
CIndexBufferDx8::ModifyEnd(IndexDesc_t&)
CIndexBufferDx8::Unlock(int, IndexDesc_t&)
CIndexBufferDx8::~CIndexBufferDx8()
CIndexBufferX8::Lock
CKeyValuesErrorStack::ReportError(char const*)
CLZMA::Uncompress(unsigned char*, unsigned char*)
CMeshBase::CMeshBase()
CMeshBase::GetMesh()
CMeshBase::~CMeshBase()
CMeshDX8::DisableFlexMesh()
CMeshDX8::Draw(CPrimList*, int)
CMeshDX8::Draw(int, int)
CMeshDX8::GetIndexBuffer()
CMeshDX8::GetPrimitiveType() const
CMeshDX8::GetVertexBuffer()
CMeshDX8::HandleLateCreation()
CMeshDX8::HasColorMesh() const
CMeshDX8::HasFlexMesh() const
CMeshDX8::IndexCount() const
CMeshDX8::IsDynamic() const
CMeshDX8::IsValidVertexFormat(unsigned long long)
CMeshDX8::IsValidVertexFormat(unsigned long long)::numWarnings
CMeshDX8::Lock(bool, int, int, IndexDesc_t&)
CMeshDX8::Lock(int, bool, VertexDesc_t&)
CMeshDX8::LockMesh
CMeshDX8::LockMesh(int, int, MeshDesc_t&)
CMeshDX8::ModifyBegin
CMeshDX8::ModifyBegin(int, int, int, int, MeshDesc_t&)
CMeshDX8::ModifyBeginEx(bool, int, int, int, int, MeshDesc_t&)
CMeshDX8::ModifyEnd
CMeshDX8::ModifyEnd(MeshDesc_t&)
CMeshDX8::RenderPass
CMeshDX8::RenderPass()
CMeshDX8::RenderPass()::_counter
CMeshDX8::SetColorMesh(IMesh*, int)
CMeshDX8::SetColorStreamState()
CMeshDX8::SetFlexMesh(IMesh*, int)
CMeshDX8::SetPrimitiveType(MaterialPrimitiveType_t)
CMeshDX8::SetRenderState(int, int, unsigned long long)
CMeshDX8::SetVertexIDStreamState()
CMeshDX8::SetVertexStreamState(int)
CMeshDX8::SetVertexStreamState(int)::bWarned
CMeshDX8::Unlock(int, IndexDesc_t&)
CMeshDX8::Unlock(int, VertexDesc_t&)
CMeshDX8::UnlockMesh
CMeshDX8::UnlockMesh(int, int, MeshDesc_t&)
CMeshDX8::VertexCount() const
CMeshDX8::s_FirstVertex
CMeshDX8::s_NumVertices
CMeshDX8::s_nPrims
CMeshDX8::s_pPrims
CMeshDX8::~CMeshDX8()
CMeshMgr::BindIndexBuffer(IIndexBuffer*, int)
CMeshMgr::BindVertexBuffer(int, IVertexBuffer*, int, int, int, unsigned long long, int)
CMeshMgr::BufferCount() const
CMeshMgr::CMeshMgr()
CMeshMgr::ComputeVertexDescription(unsigned char*, unsigned long long, MeshDesc_t&) const
CMeshMgr::ComputeVertexFormat(unsigned int, int, int*, int, int) const
CMeshMgr::CopyStaticMeshIndexBufferToTempMeshIndexBuffer(CTempMeshDX8*, CMeshDX8*)
CMeshMgr::CreateDynamicIndexBuffer()
CMeshMgr::CreateIndexBuffer(ShaderBufferType_t, MaterialIndexFormat_t, int, char const*)
CMeshMgr::CreateStaticMesh(unsigned long long, char const*, IMaterial*)
CMeshMgr::CreateVertexBuffer(ShaderBufferType_t, unsigned long long, int, char const*)
CMeshMgr::CreateVertexIDBuffer()
CMeshMgr::DestroyIndexBuffer(IIndexBuffer*)
CMeshMgr::DestroyStaticMesh(IMesh*)
CMeshMgr::DestroyVertexBuffer(IVertexBuffer*)
CMeshMgr::DestroyVertexBuffers()
CMeshMgr::DestroyVertexIDBuffer()
CMeshMgr::DiscardVertexBuffers
CMeshMgr::DiscardVertexBuffers()
CMeshMgr::Draw(MaterialPrimitiveType_t, int, int)
CMeshMgr::FillVertexIDBuffer(CVertexBuffer*, int)
CMeshMgr::FindOrCreateVertexBuffer (dynamic VB)
CMeshMgr::FindOrCreateVertexBuffer(int, unsigned long long)
CMeshMgr::Flush()
CMeshMgr::GetCurrentVertexFormat() const
CMeshMgr::GetDynamicIndexBuffer(IMaterial*, bool)
CMeshMgr::GetDynamicIndexBuffer(MaterialIndexFormat_t, bool)
CMeshMgr::GetDynamicMesh(IMaterial*, unsigned long long, int, bool, IMesh*, IMesh*)
CMeshMgr::GetDynamicVertexBuffer(IMaterial*, bool)
CMeshMgr::GetDynamicVertexBuffer(int, unsigned long long, bool)
CMeshMgr::GetFlexMesh()
CMeshMgr::GetMaxIndicesToRender()
CMeshMgr::GetMaxToRender(IMesh*, bool, int*, int*)
CMeshMgr::GetMaxVerticesToRender(IMaterial*)
CMeshMgr::Init()
CMeshMgr::MarkUnusedVertexFields(unsigned int, int, bool*)
CMeshMgr::ReleaseBuffers()
CMeshMgr::RenderPassWithVertexAndIndexBuffers()
CMeshMgr::RestoreBuffers()
CMeshMgr::SetRenderState(int, int, unsigned long long, int)
CMeshMgr::SetVertexStreamState(int, int)
CMeshMgr::Shutdown()
CMeshMgr::UseFatVertices(bool)
CMeshMgr::~CMeshMgr()
COLORCORRECTION_VERSION_1
COLORWRITEENABLE %s MASKZ %s TSSARGTEMP %s
CPixelWriter::SetPixelMemory(ImageFormat, void*, int)
CPixelWriter::SetPixelMemory(ImageFormat, void*, int)::format_error_printed
CPixelWriter::SetPixelMemory:  Unsupported image format %i
CRC32_Final(unsigned int*)
CRC32_Init(unsigned int*)
CRC32_ProcessBuffer(unsigned int*, void const*, int)
CRefCountServiceBase<true, CRefMT>::OnFinalRelease()
CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >::AddRef()
CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >::Release()
CShaderAPIBase::CShaderAPIBase()
CShaderAPIBase::GetCurrentColorCorrection(ShaderColorCorrectionInfo_t*)
CShaderAPIBase::~CShaderAPIBase()
CShaderAPIConVarAccessor::RegisterConCommandBase(ConCommandBase*)
CShaderAPIDX8::BlitTextureBits: couldn't lock texture rect
CShaderAPIDX8::BlitTextureBits: couldn't unlock texture rect
CShaderAPIDX8::RenderPassWithVertexAndIndexBuffers
CShaderAPIDx8::AcquireThreadOwnership()
CShaderAPIDx8::AddBufferToTextureList(char const*, _D3DSURFACE_DESC&)
CShaderAPIDx8::AddCommitFunc(CommitFuncType_t, CommitShaderType_t, void (*)(IDirect3DDevice9*, DynamicState_t const&, DynamicState_t&, bool))
CShaderAPIDx8::AdvanceCurrentCopy(int)
CShaderAPIDx8::AdvancePIXFrame()
CShaderAPIDx8::ApplyAlphaToCoverage(bool)
CShaderAPIDx8::ApplyCullEnable(bool)
CShaderAPIDx8::ApplyFogMode(ShaderFogMode_t, bool, bool)
CShaderAPIDx8::ApplyTextureEnable(ShadowState_t const&, int)
CShaderAPIDx8::ApplyZBias(ShadowState_t const&)
CShaderAPIDx8::BeginFrame()
CShaderAPIDx8::BeginOcclusionQueryDrawing(ShaderAPIOcclusionQuery_t__*)
CShaderAPIDx8::BeginPIXEvent(unsigned long, char const*)
CShaderAPIDx8::BeginPass
CShaderAPIDx8::BeginPass(short)
CShaderAPIDx8::Bind(IMaterial*)
CShaderAPIDx8::BindGeometryShader(GeometryShaderHandle_t__*)
CShaderAPIDx8::BindIndexBuffer(IIndexBuffer*, int)
CShaderAPIDx8::BindPixelShader(PixelShaderHandle_t__*)
CShaderAPIDx8::BindStandardTexture(Sampler_t, StandardTextureId_t)
CShaderAPIDx8::BindStandardVertexTexture(VertexTextureSampler_t, StandardTextureId_t)
CShaderAPIDx8::BindTexture(Sampler_t, int)
CShaderAPIDx8::BindVertexBuffer(int, IVertexBuffer*, int, int, int, unsigned long long, int)
CShaderAPIDx8::BindVertexShader(VertexShaderHandle_t__*)
CShaderAPIDx8::BindVertexTexture(VertexTextureSampler_t, int)
CShaderAPIDx8::CShaderAPIDx8()
CShaderAPIDx8::CacheWorldSpaceCameraPosition()
CShaderAPIDx8::CallCommitFuncs(CommitFuncType_t, bool, bool)
CShaderAPIDx8::CanDownloadTextures() const
CShaderAPIDx8::ChangeVideoMode(ShaderDeviceInfo_t const&)
CShaderAPIDx8::ClearBuffers(bool, bool, bool, int, int)
CShaderAPIDx8::ClearBuffersObeyStencil(bool, bool)
CShaderAPIDx8::ClearBuffersObeyStencilEx(bool, bool, bool)
CShaderAPIDx8::ClearColor3ub(unsigned char, unsigned char, unsigned char)
CShaderAPIDx8::ClearColor4ub(unsigned char, unsigned char, unsigned char, unsigned char)
CShaderAPIDx8::ClearSelectionNames()
CShaderAPIDx8::ClearSnapshots()
CShaderAPIDx8::ClearStencilBufferRectangle(int, int, int, int, int)
CShaderAPIDx8::ClearVertexAndPixelShaderRefCounts()
CShaderAPIDx8::Color3f(float, float, float)
CShaderAPIDx8::Color3fv(float const*)
CShaderAPIDx8::Color3ub(unsigned char, unsigned char, unsigned char)
CShaderAPIDx8::Color3ubv(unsigned char const*)
CShaderAPIDx8::Color4f(float, float, float, float)
CShaderAPIDx8::Color4fv(float const*)
CShaderAPIDx8::Color4ub(unsigned char, unsigned char, unsigned char, unsigned char)
CShaderAPIDx8::Color4ubv(unsigned char const*)
CShaderAPIDx8::CommitFastClipPlane()
CShaderAPIDx8::CommitFixedFunctionLighting()
CShaderAPIDx8::CommitFixedFunctionTransforms()
CShaderAPIDx8::CommitPerPassFixedFunctionTransforms()
CShaderAPIDx8::CommitPerPassStateChanges(short)
CShaderAPIDx8::CommitPixelShaderLighting(int)
CShaderAPIDx8::CommitStateChanges
CShaderAPIDx8::CommitStateChanges()
CShaderAPIDx8::CommitUserClipPlanes(bool)
CShaderAPIDx8::CommitVertexShaderLighting()
CShaderAPIDx8::CommitVertexShaderTransforms()
CShaderAPIDx8::CompareSnapshots(short, short)
CShaderAPIDx8::ComputeFillRate()
CShaderAPIDx8::ComputeFillRate()::pBuf
CShaderAPIDx8::ComputeGammaCorrectedFogColor(unsigned char, unsigned char, unsigned char, bool)
CShaderAPIDx8::ComputeMorphFormat(int, short*) const
CShaderAPIDx8::ComputeStatsInfo(int, bool, bool)
CShaderAPIDx8::ComputeVertexDescription(unsigned char*, unsigned long long, MeshDesc_t&) const
CShaderAPIDx8::ComputeVertexFormat(int, short*) const
CShaderAPIDx8::ComputeVertexUsage(int, short*) const
CShaderAPIDx8::CopyRenderTargetToScratchTexture(int, int, Rect_t*, Rect_t*)
CShaderAPIDx8::CopyRenderTargetToTexture
CShaderAPIDx8::CopyRenderTargetToTexture(int)
CShaderAPIDx8::CopyRenderTargetToTextureEx(int, int, Rect_t*, Rect_t*)
CShaderAPIDx8::CopyTextureToRenderTargetEx(int, int, Rect_t*, Rect_t*)
CShaderAPIDx8::CopyTextureToTexture(int, int)
CShaderAPIDx8::CreateDepthTexture(ImageFormat, int, int, char const*, bool)
CShaderAPIDx8::CreateMatrixStacks()
CShaderAPIDx8::CreateOcclusionQueryObject()
CShaderAPIDx8::CreateTexture(int, int, int, ImageFormat, int, int, int, char const*, char const*)
CShaderAPIDx8::CreateTextureHandles(int*, int)
CShaderAPIDx8::CreateTextures(int*, int, int, int, int, ImageFormat, int, int, int, char const*, char const*)
CShaderAPIDx8::CullMode(MaterialCullMode_t)
CShaderAPIDx8::CurrentTime() const
CShaderAPIDx8::DXSupportLevelChanged()
CShaderAPIDx8::DeleteAllTextures()
CShaderAPIDx8::DeleteD3DTexture(int)
CShaderAPIDx8::DeleteTexture(int)
CShaderAPIDx8::DestroyOcclusionQueryObject(ShaderAPIOcclusionQuery_t__*)
CShaderAPIDx8::DestroyVertexBuffers(bool)
CShaderAPIDx8::DetermineHardwareCaps()
CShaderAPIDx8::DisableAllLocalLights()
CShaderAPIDx8::DisableAlphaToCoverage()
CShaderAPIDx8::DisableTextureTransform(TextureStage_t)
CShaderAPIDx8::DoRenderTargetsNeedSeparateDepthBuffer() const
CShaderAPIDx8::Draw(MaterialPrimitiveType_t, int, int)
CShaderAPIDx8::DrawMesh
CShaderAPIDx8::DrawMesh(CMeshBase*)
CShaderAPIDx8::DrawWithVertexAndIndexBuffers
CShaderAPIDx8::DrawWithVertexAndIndexBuffers()
CShaderAPIDx8::EnableAlphaToCoverage()
CShaderAPIDx8::EnableBuffer2FramesAhead(bool)
CShaderAPIDx8::EnableClipPlane(int, bool)
CShaderAPIDx8::EnableDebugTextureList(bool)
CShaderAPIDx8::EnableFastClip(bool)
CShaderAPIDx8::EnableGetAllTextures(bool)
CShaderAPIDx8::EnableHWMorphing(bool)
CShaderAPIDx8::EnableLinearColorSpaceFrameBuffer(bool)
CShaderAPIDx8::EnableShaderShaderMutex(bool)
CShaderAPIDx8::EnableUserClipTransformOverride(bool)
CShaderAPIDx8::EnabledSRGBWrite(bool)
CShaderAPIDx8::EndFrame()
CShaderAPIDx8::EndOcclusionQueryDrawing(ShaderAPIOcclusionQuery_t__*)
CShaderAPIDx8::EndPIXEvent()
CShaderAPIDx8::EvictManagedResources()
CShaderAPIDx8::EvictManagedResourcesInternal()
CShaderAPIDx8::ExecuteCommandBuffer(unsigned char*)
CShaderAPIDx8::ExportTextureList()
CShaderAPIDx8::ExportTextureList()::_counter
CShaderAPIDx8::FlushBufferedPrimitives()
CShaderAPIDx8::FlushHardware()
CShaderAPIDx8::FogEnd(float)
CShaderAPIDx8::FogMaxDensity(float)
CShaderAPIDx8::FogMode(MaterialFogMode_t)
CShaderAPIDx8::FogStart(float)
CShaderAPIDx8::ForceDepthFuncEquals(bool)
CShaderAPIDx8::ForceHardwareSync
CShaderAPIDx8::ForceHardwareSync()
CShaderAPIDx8::GammaToLinear_HardwareSpecific(float) const
CShaderAPIDx8::GetActualClearColor(unsigned int)
CShaderAPIDx8::GetActualSamplerCount() const
CShaderAPIDx8::GetActualTextureStageCount() const
CShaderAPIDx8::GetAmbientLightCubeLuminance()
CShaderAPIDx8::GetBackBufferDimensions(int&, int&) const
CShaderAPIDx8::GetBackBufferImage(Rect_t*, Rect_t*, ImageFormat&)
CShaderAPIDx8::GetBackBufferImageHDR(Rect_t*, Rect_t*, ImageFormat&)
CShaderAPIDx8::GetBoundMaterial()
CShaderAPIDx8::GetBoundMorphFormat()
CShaderAPIDx8::GetBufferedState(BufferedState_t&)
CShaderAPIDx8::GetCullMode() const
CShaderAPIDx8::GetCurrentDynamicVBSize()
CShaderAPIDx8::GetCurrentFogType() const
CShaderAPIDx8::GetCurrentFrameCounter() const
CShaderAPIDx8::GetCurrentLightCombo() const
CShaderAPIDx8::GetCurrentNumBones() const
CShaderAPIDx8::GetD3DTexture(int)
CShaderAPIDx8::GetDX9LightState(LightState_t*) const
CShaderAPIDx8::GetDXLevelDefaults(unsigned int&, unsigned int&)
CShaderAPIDx8::GetDebugTextureList()
CShaderAPIDx8::GetDynamicMesh(IMaterial*, int, bool, IMesh*, IMesh*)
CShaderAPIDx8::GetDynamicMeshEx(IMaterial*, unsigned long long, int, bool, IMesh*, IMesh*)
CShaderAPIDx8::GetFlashlightState(VMatrix&) const
CShaderAPIDx8::GetFlashlightStateEx(VMatrix&, ITexture**) const
CShaderAPIDx8::GetFlexMesh()
CShaderAPIDx8::GetFloatRenderingParameter(int) const
CShaderAPIDx8::GetFogDistances(float*, float*, float*)
CShaderAPIDx8::GetIntRenderingParameter(int) const
CShaderAPIDx8::GetLight(int) const
CShaderAPIDx8::GetLightMapScaleFactor() const
CShaderAPIDx8::GetLightmapDimensions(int*, int*)
CShaderAPIDx8::GetMatrix(MaterialMatrixMode_t, float*)
CShaderAPIDx8::GetMaxIndicesToRender()
CShaderAPIDx8::GetMaxLights() const
CShaderAPIDx8::GetMaxToRender(IMesh*, bool, int*, int*)
CShaderAPIDx8::GetMaxVerticesToRender(IMaterial*)
CShaderAPIDx8::GetNearestRenderTargetFormat(ImageFormat) const
CShaderAPIDx8::GetNearestSupportedFormat(ImageFormat, bool) const
CShaderAPIDx8::GetNullTextureFormat()
CShaderAPIDx8::GetNumActiveDeformations() const
CShaderAPIDx8::GetPackedDeformationInformation(int, float*, int, int, int*) const
CShaderAPIDx8::GetPixelFogCombo()
CShaderAPIDx8::GetRenderTargetEx(int)
CShaderAPIDx8::GetSceneFogColor(unsigned char*)
CShaderAPIDx8::GetSceneFogMode()
CShaderAPIDx8::GetShadowDepthTextureFormat()
CShaderAPIDx8::GetStandardTextureDimensions(int*, int*, StandardTextureId_t)
CShaderAPIDx8::GetTextureMemoryUsed(IDebugTextureInfo::TextureMemoryType)
CShaderAPIDx8::GetToneMappingScaleLinear() const
CShaderAPIDx8::GetVectorRenderingParameter(int) const
CShaderAPIDx8::GetVertexModifyBuilder()
CShaderAPIDx8::GetViewports(ShaderViewport_t*, int) const
CShaderAPIDx8::GetWorldSpaceCameraPosition(float*) const
CShaderAPIDx8::HandleDeviceLost()
CShaderAPIDx8::InEditorMode() const
CShaderAPIDx8::InFlashlightMode() const
CShaderAPIDx8::InitVertexAndPixelShaders()
CShaderAPIDx8::InvalidateDelayedShaderConstants()
CShaderAPIDx8::IsAAEnabled() const
CShaderAPIDx8::IsAlphaTested(short) const
CShaderAPIDx8::IsDebugTextureListFresh(int)
CShaderAPIDx8::IsDepthWriteEnabled(short) const
CShaderAPIDx8::IsHWMorphingEnabled() const
CShaderAPIDx8::IsInSelectionMode() const
CShaderAPIDx8::IsRenderingMesh() const
CShaderAPIDx8::IsTexture(int)
CShaderAPIDx8::IsTextureResident(int)
CShaderAPIDx8::IsTranslucent(short) const
CShaderAPIDx8::Knob(char*, float*)
CShaderAPIDx8::LinearToGamma_HardwareSpecific(float) const
CShaderAPIDx8::LoadBoneMatrix(int, float const*)
CShaderAPIDx8::LoadCameraToWorld()
CShaderAPIDx8::LoadIdentity()
CShaderAPIDx8::LoadMatrix(float*)
CShaderAPIDx8::LoadSelectionName(int)
CShaderAPIDx8::LockRect(void**, int*, int, int, int, int, int, int, bool, bool)
CShaderAPIDx8::MarkUnusedVertexFields(unsigned int, int, bool*)
CShaderAPIDx8::MatrixMode(MaterialMatrixMode_t)
CShaderAPIDx8::ModifyTexture(int)
CShaderAPIDx8::ModifyVertexData()
CShaderAPIDx8::MultMatrix(float*)
CShaderAPIDx8::MultMatrixLocal(float*)
CShaderAPIDx8::OcclusionQuery_GetNumPixelsRendered(ShaderAPIOcclusionQuery_t__*, bool)
CShaderAPIDx8::OnAdapterSet()
CShaderAPIDx8::OnDeviceInit()
CShaderAPIDx8::OnDeviceShutdown()
CShaderAPIDx8::Ortho(double, double, double, double, double, double)
CShaderAPIDx8::OverrideAlphaWriteEnable(bool, bool)
CShaderAPIDx8::OverrideColorWriteEnable(bool, bool)
CShaderAPIDx8::OverrideDepthEnable(bool, bool)
CShaderAPIDx8::OwnGPUResources(bool)
CShaderAPIDx8::PerformFullScreenStencilOperation()
CShaderAPIDx8::PerspectiveOffCenterX(double, double, double, double, double, double, double, double)
CShaderAPIDx8::PerspectiveX(double, double, double, double)
CShaderAPIDx8::PickMatrix(int, int, int, int)
CShaderAPIDx8::PopDeformation()
CShaderAPIDx8::PopMatrix()
CShaderAPIDx8::PopSelectionName()
CShaderAPIDx8::Printf(char const*, ...)
CShaderAPIDx8::PrintfVA(char*, char*)
CShaderAPIDx8::PurgeUnusedVertexAndPixelShaders()
CShaderAPIDx8::PushDeformation(DeformationBase_t const*)
CShaderAPIDx8::PushMatrix()
CShaderAPIDx8::PushSelectionName(int)
CShaderAPIDx8::QueueResetRenderState()
CShaderAPIDx8::ReadPixels(Rect_t*, Rect_t*, unsigned char*, ImageFormat, int)
CShaderAPIDx8::ReadPixels(int, int, int, int, unsigned char*, ImageFormat)
CShaderAPIDx8::RegisterSelectionHit(float, float)
CShaderAPIDx8::ReleaseShaderObjects()
CShaderAPIDx8::ReleaseThreadOwnership()
CShaderAPIDx8::RenderPass(int, int)
CShaderAPIDx8::ResetDXRenderState()
CShaderAPIDx8::ResetRenderState(bool)
CShaderAPIDx8::RestoreShaderObjects()
CShaderAPIDx8::Rotate(float, float, float, float)
CShaderAPIDx8::Scale(float, float, float)
CShaderAPIDx8::ScaleXY(float, float)
CShaderAPIDx8::SceneFogColor3ub(unsigned char, unsigned char, unsigned char)
CShaderAPIDx8::SceneFogMode(MaterialFogMode_t)
CShaderAPIDx8::SelectionBuffer(unsigned int*, int)
CShaderAPIDx8::SelectionMode(bool)
CShaderAPIDx8::SetAmbientLight(float, float, float)
CShaderAPIDx8::SetAmbientLightCube(Vector4D*)
CShaderAPIDx8::SetAnisotropicLevel(int)
CShaderAPIDx8::SetBooleanPixelShaderConstant(int, int const*, int, bool)
CShaderAPIDx8::SetBooleanVertexShaderConstant(int, int const*, int, bool)
CShaderAPIDx8::SetBumpEnvMatrix(TextureStage_t, float, float, float, float)
CShaderAPIDx8::SetClipPlane(int, float const*)
CShaderAPIDx8::SetCullModeState(bool, _D3DCULL)
CShaderAPIDx8::SetDebugTextureRendering(bool)
CShaderAPIDx8::SetDefaultState()
CShaderAPIDx8::SetDepthFeatheringPixelShaderConstant(int, float)
CShaderAPIDx8::SetDisallowAccess(bool)
CShaderAPIDx8::SetFastClipPlane(float const*)
CShaderAPIDx8::SetFlashlightState(FlashlightState_t const&, VMatrix const&)
CShaderAPIDx8::SetFlashlightStateEx(FlashlightState_t const&, VMatrix const&, ITexture*)
CShaderAPIDx8::SetFlexWeights(int, int, MorphWeight_t const*)
CShaderAPIDx8::SetFloatRenderingParameter(int, float)
CShaderAPIDx8::SetFogZ(float)
CShaderAPIDx8::SetFullScreenTextureHandle(int)
CShaderAPIDx8::SetHeightClipMode(MaterialHeightClipMode_t)
CShaderAPIDx8::SetHeightClipZ(float)
CShaderAPIDx8::SetIntRenderingParameter(int, int)
CShaderAPIDx8::SetIntegerPixelShaderConstant(int, int const*, int, bool)
CShaderAPIDx8::SetIntegerVertexShaderConstant(int, int const*, int, bool)
CShaderAPIDx8::SetLight(int, LightDesc_t const&)
CShaderAPIDx8::SetLightingOrigin(Vector)
CShaderAPIDx8::SetLinearToGammaConversionTextures(int, int)
CShaderAPIDx8::SetMode(void*, int, ShaderDeviceInfo_t const&)
CShaderAPIDx8::SetMode(void*, int, ShaderDeviceInfo_t const&)::bSetModeOnce
CShaderAPIDx8::SetNumBoneWeights(int)
CShaderAPIDx8::SetPIXMarker(unsigned long, char const*)
CShaderAPIDx8::SetPSNearAndFarZ(int)
CShaderAPIDx8::SetPixelShaderConstant(int, float const*, int, bool)
CShaderAPIDx8::SetPixelShaderFogParams(int)
CShaderAPIDx8::SetPixelShaderIndex(int)
CShaderAPIDx8::SetPixelShaderStateAmbientLightCube(int, bool)
CShaderAPIDx8::SetRasterState(ShaderRasterState_t const&)
CShaderAPIDx8::SetRenderTarget(int, int)
CShaderAPIDx8::SetRenderTargetEx(int, int, int)
CShaderAPIDx8::SetScissorRect(int, int, int, int, bool)
CShaderAPIDx8::SetShadowDepthBiasFactors(float, float)
CShaderAPIDx8::SetSkinningMatrices()
CShaderAPIDx8::SetStandardTextureHandle(StandardTextureId_t, int)
CShaderAPIDx8::SetStandardVertexShaderConstants(float)
CShaderAPIDx8::SetStencilCompareFunction(StencilComparisonFunction_t)
CShaderAPIDx8::SetStencilEnable(bool)
CShaderAPIDx8::SetStencilFailOperation(StencilOperation_t)
CShaderAPIDx8::SetStencilPassOperation(StencilOperation_t)
CShaderAPIDx8::SetStencilReferenceValue(int)
CShaderAPIDx8::SetStencilTestMask(unsigned int)
CShaderAPIDx8::SetStencilWriteMask(unsigned int)
CShaderAPIDx8::SetStencilZFailOperation(StencilOperation_t)
CShaderAPIDx8::SetTextureState(Sampler_t, int, bool)
CShaderAPIDx8::SetTextureState(Sampler_t, int, bool)::materialSystemConfig
CShaderAPIDx8::SetTextureTransformDimension(TextureStage_t, int, bool)
CShaderAPIDx8::SetToneMappingScaleLinear(Vector const&)
CShaderAPIDx8::SetVectorRenderingParameter(int, Vector const&)
CShaderAPIDx8::SetVertexBlendState(int)
CShaderAPIDx8::SetVertexDecl
CShaderAPIDx8::SetVertexDecl(unsigned long long, bool, bool, bool)
CShaderAPIDx8::SetVertexShaderConstant(int, float const*, int, bool)
CShaderAPIDx8::SetVertexShaderIndex(int)
CShaderAPIDx8::SetVertexShaderModelViewProjAndModelView()
CShaderAPIDx8::SetVertexShaderStateAmbientLightCube()
CShaderAPIDx8::SetVertexShaderViewProj()
CShaderAPIDx8::SetViewports(int, ShaderViewport_t const*)
CShaderAPIDx8::SetupSelectionModeVisualizationState()
CShaderAPIDx8::SetupTextureGroup(int, char const*)
CShaderAPIDx8::ShadeMode(ShaderShadeMode_t)
CShaderAPIDx8::ShaderLock()
CShaderAPIDx8::ShaderUnlock()
CShaderAPIDx8::ShouldWriteDepthToDestAlpha() const
CShaderAPIDx8::StencilBufferBits() const
CShaderAPIDx8::SupportsCSAAMode(int, int)
CShaderAPIDx8::SupportsFetch4()
CShaderAPIDx8::SupportsMSAAMode(int)
CShaderAPIDx8::SupportsShadowDepthTextures()
CShaderAPIDx8::SyncToken(char const*)
CShaderAPIDx8::TakeSnapshot()
CShaderAPIDx8::TexImage2D(int, int, ImageFormat, int, int, int, ImageFormat, bool, void*)
CShaderAPIDx8::TexImageFromVTF(IVTFTexture*, int)
CShaderAPIDx8::TexLock(int, int, int, int, int, int, CPixelWriter&)
CShaderAPIDx8::TexLodBias(float)
CShaderAPIDx8::TexLodClamp(int)
CShaderAPIDx8::TexMAGFilter: Unknown texFilterMode
CShaderAPIDx8::TexMagFilter(ShaderTexFilterMode_t)
CShaderAPIDx8::TexMagFilter: SHADER_TEXFILTERMODE_LINEAR_MIPMAP_LINEAR is invalid
CShaderAPIDx8::TexMagFilter: SHADER_TEXFILTERMODE_LINEAR_MIPMAP_NEAREST is invalid
CShaderAPIDx8::TexMagFilter: SHADER_TEXFILTERMODE_NEAREST_MIPMAP_LINEAR is invalid
CShaderAPIDx8::TexMagFilter: SHADER_TEXFILTERMODE_NEAREST_MIPMAP_NEAREST is invalid
CShaderAPIDx8::TexMinFilter(ShaderTexFilterMode_t)
CShaderAPIDx8::TexMinFilter: Unknown texFilterMode
CShaderAPIDx8::TexSetPriority(int)
CShaderAPIDx8::TexSubImage2D(int, int, int, int, int, int, int, ImageFormat, int, bool, void*)
CShaderAPIDx8::TexUnlock()
CShaderAPIDx8::TexWrap(ShaderTexCoordComponent_t, ShaderTexWrapMode_t)
CShaderAPIDx8::TexWrap: unknown coord
CShaderAPIDx8::TexWrap: unknown wrapMode
CShaderAPIDx8::Translate(float, float, float)
CShaderAPIDx8::UnlockRect(int, int)
CShaderAPIDx8::UpdateMatrixTransform(TransformType_t)
CShaderAPIDx8::UpdatePixelFogColorConstant()
CShaderAPIDx8::UserClipTransform(VMatrix const&)
CShaderAPIDx8::UsesVertexAndPixelShaders(short) const
CShaderAPIDx8::UsingSoftwareVertexProcessing() const
CShaderAPIDx8::~CShaderAPIDx8()
CShaderBuffer<ID3DXBuffer>::GetBits() const
CShaderBuffer<ID3DXBuffer>::GetSize() const
CShaderBuffer<ID3DXBuffer>::Release()
CShaderDeviceBase::AddView(void*)
CShaderDeviceBase::CShaderDeviceBase()
CShaderDeviceBase::EvictManagedResourcesInternal()
CShaderDeviceBase::GetBackBufferFormat() const
CShaderDeviceBase::GetWindowSize(int&, int&) const
CShaderDeviceBase::InstallWindowHook(void*)
CShaderDeviceBase::IsAAEnabled() const
CShaderDeviceBase::OtherAppInitializing(bool)
CShaderDeviceBase::RemoveThreadOwner()
CShaderDeviceBase::RemoveView(void*)
CShaderDeviceBase::RemoveWindowHook(void*)
CShaderDeviceBase::SendIPCMessage(CShaderDeviceBase::IPCMessage_t)
CShaderDeviceBase::SetCurrentThreadAsOwner()
CShaderDeviceBase::SetView(void*)
CShaderDeviceBase::StencilBufferBits() const
CShaderDeviceBase::ThreadOwnsDevice()
CShaderDeviceBase::~CShaderDeviceBase()
CShaderDeviceDx8::AllocFrameSyncObjects()
CShaderDeviceDx8::AllocNonInteractiveRefreshObjects()
CShaderDeviceDx8::CShaderDeviceDx8()
CShaderDeviceDx8::CheckDeviceLost(bool)
CShaderDeviceDx8::CompileShader(char const*, unsigned long, char const*)
CShaderDeviceDx8::ComputeMultisampleType(int)
CShaderDeviceDx8::CreateD3DDevice(void*, int, ShaderDeviceInfo_t const&)
CShaderDeviceDx8::CreateGeometryShader(IShaderBuffer*)
CShaderDeviceDx8::CreateIndexBuffer(ShaderBufferType_t, MaterialIndexFormat_t, int, char const*)
CShaderDeviceDx8::CreatePixelShader(IShaderBuffer*)
CShaderDeviceDx8::CreateStaticMesh(unsigned long long, char const*, IMaterial*)
CShaderDeviceDx8::CreateVertexBuffer(ShaderBufferType_t, unsigned long long, int, char const*)
CShaderDeviceDx8::CreateVertexShader(IShaderBuffer*)
CShaderDeviceDx8::DestroyGeometryShader(GeometryShaderHandle_t__*)
CShaderDeviceDx8::DestroyIndexBuffer(IIndexBuffer*)
CShaderDeviceDx8::DestroyPixelShader(PixelShaderHandle_t__*)
CShaderDeviceDx8::DestroyStaticMesh(IMesh*)
CShaderDeviceDx8::DestroyVertexBuffer(IVertexBuffer*)
CShaderDeviceDx8::DestroyVertexShader(VertexShaderHandle_t__*)
CShaderDeviceDx8::DoStartupShaderPreloading()
CShaderDeviceDx8::EnableNonInteractiveMode(MaterialNonInteractiveMode_t, ShaderNonInteractiveInfo_t*)
CShaderDeviceDx8::FreeFrameSyncObjects()
CShaderDeviceDx8::FreeNonInteractiveRefreshObjects()
CShaderDeviceDx8::GetBackBufferDimensions(int&, int&) const
CShaderDeviceDx8::GetBackBufferFormat() const
CShaderDeviceDx8::GetCurrentAdapter() const
CShaderDeviceDx8::GetDisplayDeviceName()
CShaderDeviceDx8::GetDynamicIndexBuffer(MaterialIndexFormat_t, bool)
CShaderDeviceDx8::GetDynamicVertexBuffer(int, unsigned long long, bool)
CShaderDeviceDx8::HandleThreadEvent(unsigned int)
CShaderDeviceDx8::InitDevice(void*, int, ShaderDeviceInfo_t const&)
CShaderDeviceDx8::InvokeCreateDevice(void*, int, unsigned int)
CShaderDeviceDx8::IsDeactivated() const
CShaderDeviceDx8::IsUsingGraphics() const
CShaderDeviceDx8::MarkDeviceLost()
CShaderDeviceDx8::OtherAppInitializing(bool)
CShaderDeviceDx8::Present()
CShaderDeviceDx8::ReacquireResources()
CShaderDeviceDx8::ReacquireResourcesInternal(bool, bool, char const*)
CShaderDeviceDx8::RefreshFrontBufferNonInteractive()
CShaderDeviceDx8::ReleaseResources()
CShaderDeviceDx8::ResizeWindow(ShaderDeviceInfo_t const&)
CShaderDeviceDx8::SetHardwareGammaRamp(float, float, float, float, bool)
CShaderDeviceDx8::SetPresentParameters(void*, int, ShaderDeviceInfo_t const&)
CShaderDeviceDx8::ShutdownDevice()
CShaderDeviceDx8::SpewDriverInfo() const
CShaderDeviceDx8::~CShaderDeviceDx8()
CShaderDeviceMgrBase::AddModeChangeCallback(void (*)())
CShaderDeviceMgrBase::CShaderDeviceMgrBase()
CShaderDeviceMgrBase::Connect(void* (*)(char const*, int*))
CShaderDeviceMgrBase::Disconnect()
CShaderDeviceMgrBase::FindCPUSpecificConfig(KeyValues*, int, bool)
CShaderDeviceMgrBase::FindCardSpecificConfig(KeyValues*, int, int)
CShaderDeviceMgrBase::GetClosestActualDXLevel(int) const
CShaderDeviceMgrBase::GetHardwareCaps(int) const
CShaderDeviceMgrBase::GetRecommendedConfigurationInfo(int, int, KeyValues*)
CShaderDeviceMgrBase::GetRecommendedConfigurationInfo(int, int, int, int, KeyValues*)
CShaderDeviceMgrBase::GetRecommendedConfigurationInfo: CPU speed: %d MHz, Processor: %s
CShaderDeviceMgrBase::InvokeModeChangeCallbacks()
CShaderDeviceMgrBase::LoadConfig(KeyValues*, KeyValues*)
CShaderDeviceMgrBase::LoadHardwareCaps(KeyValues*, HardwareCaps_t&)
CShaderDeviceMgrBase::QueryInterface(char const*)
CShaderDeviceMgrBase::ReadDXSupportKeyValues()
CShaderDeviceMgrBase::ReadDXSupportLevels(HardwareCaps_t&)
CShaderDeviceMgrBase::ReadHardwareCaps(HardwareCaps_t&, int)
CShaderDeviceMgrBase::RemoveModeChangeCallback(void (*)())
CShaderDeviceMgrBase::ShaderInterfaceFactory(char const*, int*)
CShaderDeviceMgrBase::~CShaderDeviceMgrBase()
CShaderDeviceMgrDx8::ComputeCapsFromD3D(HardwareCaps_t*, int)
CShaderDeviceMgrDx8::Connect(void* (*)(char const*, int*))
CShaderDeviceMgrDx8::Disconnect()
CShaderDeviceMgrDx8::GetAdapterCount() const
CShaderDeviceMgrDx8::GetAdapterInfo(int, MaterialAdapterInfo_t&) const
CShaderDeviceMgrDx8::GetCurrentModeInfo(ShaderDisplayMode_t*, int) const
CShaderDeviceMgrDx8::GetModeCount(int) const
CShaderDeviceMgrDx8::GetModeInfo(ShaderDisplayMode_t*, int, int) const
CShaderDeviceMgrDx8::GetVidMemBytes(int) const
CShaderDeviceMgrDx8::Init()
CShaderDeviceMgrDx8::InitAdapterInfo()
CShaderDeviceMgrDx8::SetAdapter(int, int)
CShaderDeviceMgrDx8::SetMode(void*, int, ShaderDeviceInfo_t const&)
CShaderDeviceMgrDx8::Shutdown()
CShaderDeviceMgrDx8::ValidateMode(int, ShaderDeviceInfo_t const&) const
CShaderDeviceMgrDx8::~CShaderDeviceMgrDx8()
CShaderManager::BindPixelShader(PixelShaderHandle_t__*)
CShaderManager::BindVertexShader(VertexShaderHandle_t__*)
CShaderManager::CShaderManager()
CShaderManager::ClearVertexAndPixelShaderRefCounts()
CShaderManager::CompileShader(char const*, unsigned long, char const*)
CShaderManager::CreateDynamicCombos_Ver4(void*, unsigned char*)
CShaderManager::CreateDynamicCombos_Ver5(void*, unsigned char*, char*)
CShaderManager::CreatePixelShader(IShaderBuffer*)
CShaderManager::CreatePixelShader(char const*, int, char*)
CShaderManager::CreateStaticShaders()::psIllegalMaterial
CShaderManager::CreateVertexShader(IShaderBuffer*)
CShaderManager::CreateVertexShader(char const*, int, char*)
CShaderManager::DestroyAllShaders()
CShaderManager::DestroyPixelShader(PixelShaderHandle_t__*)
CShaderManager::DestroyPixelShader(int)
CShaderManager::DestroyVertexShader(VertexShaderHandle_t__*)
CShaderManager::DestroyVertexShader(int)
CShaderManager::DoStartupShaderPreloading()
CShaderManager::GetCurrentPixelShader()
CShaderManager::GetCurrentVertexShader()
CShaderManager::Init()
CShaderManager::LoadAndCreateShaders(CShaderManager::ShaderLookup_t&, bool, char*)
CShaderManager::LoadShaderCache(char*)
CShaderManager::PurgeUnusedVertexAndPixelShaders()
CShaderManager::ResetShaderState()
CShaderManager::SaveShaderCache(char*)
CShaderManager::SetPixelShader(int)
CShaderManager::SetVertexShader(int)
CShaderManager::Shutdown()
CShaderManager::SpewVertexAndPixelShaders()
CShaderManager::~CShaderManager()
CShaderShadowDX8::AlphaFunc(ShaderAlphaFunc_t, float)
CShaderShadowDX8::BlendFunc(ShaderBlendFactor_t, ShaderBlendFactor_t)
CShaderShadowDX8::BlendFuncSeparateAlpha(ShaderBlendFactor_t, ShaderBlendFactor_t)
CShaderShadowDX8::BlendOp(ShaderBlendOp_t)
CShaderShadowDX8::BlendOpSeparateAlpha(ShaderBlendOp_t)
CShaderShadowDX8::ComputeAggregateShadowState()
CShaderShadowDX8::ConfigureAlphaPipe(unsigned int)
CShaderShadowDX8::ConfigureCustomFVFVertexShader(unsigned int)
CShaderShadowDX8::ConfigureFVFVertexShader(unsigned int)
CShaderShadowDX8::ConfigureTextureCoordinates(unsigned int)
CShaderShadowDX8::CustomTextureOperation(TextureStage_t, ShaderTexChannel_t, ShaderTexOp_t, ShaderTexArg_t, ShaderTexArg_t)
CShaderShadowDX8::CustomTextureStages(int)
CShaderShadowDX8::DepthFunc(ShaderDepthFunc_t)
CShaderShadowDX8::DisableFogGammaCorrection(bool)
CShaderShadowDX8::DrawFlags(unsigned int)
CShaderShadowDX8::EnableAlphaPipe(bool)
CShaderShadowDX8::EnableAlphaTest(bool)
CShaderShadowDX8::EnableAlphaToCoverage(bool)
CShaderShadowDX8::EnableAlphaWrites(bool)
CShaderShadowDX8::EnableBlending(bool)
CShaderShadowDX8::EnableBlendingSeparateAlpha(bool)
CShaderShadowDX8::EnableColorWrites(bool)
CShaderShadowDX8::EnableConstantAlpha(bool)
CShaderShadowDX8::EnableConstantColor(bool)
CShaderShadowDX8::EnableCulling(bool)
CShaderShadowDX8::EnableCustomPixelPipe(bool)
CShaderShadowDX8::EnableDepthTest(bool)
CShaderShadowDX8::EnableDepthWrites(bool)
CShaderShadowDX8::EnableLighting(bool)
CShaderShadowDX8::EnablePolyOffset(PolygonOffsetMode_t)
CShaderShadowDX8::EnableSRGBRead(Sampler_t, bool)
CShaderShadowDX8::EnableSRGBWrite(bool)
CShaderShadowDX8::EnableSpecular(bool)
CShaderShadowDX8::EnableStencil(bool)
CShaderShadowDX8::EnableTexGen(TextureStage_t, bool)
CShaderShadowDX8::EnableTexture(Sampler_t, bool)
CShaderShadowDX8::EnableTextureAlpha(TextureStage_t, bool)
CShaderShadowDX8::EnableVertexAlpha(bool)
CShaderShadowDX8::EnableVertexBlend(bool)
CShaderShadowDX8::FlagsToVertexFormat(int) const
CShaderShadowDX8::FogMode(ShaderFogMode_t)
CShaderShadowDX8::GetShadowShaderState()
CShaderShadowDX8::GetShadowState()
CShaderShadowDX8::Init()
CShaderShadowDX8::OverbrightValue(TextureStage_t, float)
CShaderShadowDX8::PolyMode(ShaderPolyModeFace_t, ShaderPolyMode_t)
CShaderShadowDX8::SetDefaultState()
CShaderShadowDX8::SetDiffuseMaterialSource(ShaderMaterialSource_t)
CShaderShadowDX8::SetMorphFormat(unsigned int)
CShaderShadowDX8::SetPixelShader(char const*, int)
CShaderShadowDX8::SetShadowDepthFiltering(Sampler_t)
CShaderShadowDX8::SetVertexShader(char const*, int)
CShaderShadowDX8::StencilDepthFailOp(ShaderStencilOp_t)
CShaderShadowDX8::StencilFailOp(ShaderStencilOp_t)
CShaderShadowDX8::StencilFunc(ShaderStencilFunc_t)
CShaderShadowDX8::StencilMask(int)
CShaderShadowDX8::StencilPassOp(ShaderStencilOp_t)
CShaderShadowDX8::StencilReference(int)
CShaderShadowDX8::StencilWriteMask(int)
CShaderShadowDX8::TexGen(TextureStage_t, ShaderTexGenParam_t)
CShaderShadowDX8::VertexShaderVertexFormat(unsigned int, int, int*, int)
CShaderShadowDX8::VertexShaderVertexFormat(unsigned int, int, int*, int)::bComplained
CShaderShadowDX8::~CShaderShadowDX8()
CTempMeshDX8::BeginPass()
CTempMeshDX8::ClipTriangle(D3DXVECTOR3**, float, D3DXMATRIX&)
CTempMeshDX8::CopyToMeshBuilder(int, int, int, int, int, CMeshBuilder&)
CTempMeshDX8::Draw(int, int)
CTempMeshDX8::GetPrimitiveType() const
CTempMeshDX8::HandleLateCreation()
CTempMeshDX8::IndexCount() const
CTempMeshDX8::IsDynamic() const
CTempMeshDX8::LockMesh(int, int, MeshDesc_t&)
CTempMeshDX8::ModifyBegin(int, int, int, int, MeshDesc_t&)
CTempMeshDX8::ModifyBeginEx(bool, int, int, int, int, MeshDesc_t&)
CTempMeshDX8::ModifyEnd(MeshDesc_t&)
CTempMeshDX8::RenderPass()
CTempMeshDX8::SetPrimitiveType(MaterialPrimitiveType_t)
CTempMeshDX8::SetVertexFormat(unsigned long long)
CTempMeshDX8::TestSelection()
CTempMeshDX8::TestSelection()::transformedVert
CTempMeshDX8::UnlockMesh(int, int, MeshDesc_t&)
CTempMeshDX8::VertexCount() const
CTempMeshDX8::s_FirstIndex
CTempMeshDX8::s_NumIndices
CTempMeshDX8::~CTempMeshDX8()
CThreadEvent::CThreadEvent(bool)
CThreadEvent::Set()
CThreadFastMutex::Lock(unsigned int, unsigned int) volatile
CThreadRWLock::LockForWrite()
CThreadRWLock::UnlockWrite()
CThreadRWLock::WaitForRead()
CThreadSyncObject::~CThreadSyncObject()
CTransitionTable::ApplyAlphaBlend(ShadowState_t const&)
CTransitionTable::ApplyAlphaTest(ShadowState_t const&)
CTransitionTable::ApplyAlphaTextureStage(ShadowState_t const&, int)
CTransitionTable::ApplyColorTextureStage(ShadowState_t const&, int)
CTransitionTable::ApplyDepthTest(ShadowState_t const&)
CTransitionTable::ApplySRGBWriteEnable(ShadowState_t const&)
CTransitionTable::ApplyShaderState
CTransitionTable::ApplyShaderState(ShadowState_t const&, ShadowShaderState_t const&)
CTransitionTable::ApplyTransition
CTransitionTable::ApplyTransition(CTransitionTable::TransitionList_t&, int)
CTransitionTable::ApplyTransitionList
CTransitionTable::ApplyTransitionList(int, int, int)
CTransitionTable::CTransitionTable()
CTransitionTable::CreateNormalTransitions(ShadowState_t const&, ShadowState_t const&, bool)
CTransitionTable::CreateShadowState(ShadowState_t const&)
CTransitionTable::CreateStateSnapshot(short, ShadowShaderState_t const&)
CTransitionTable::CreateTransitionTableEntry(int, int)
CTransitionTable::EnableLinearColorSpaceFrameBuffer(bool)
CTransitionTable::FindIdenticalTransitionList
CTransitionTable::FindIdenticalTransitionList(unsigned int, unsigned short, unsigned int) const
CTransitionTable::FindShadowState(ShadowState_t const&) const
CTransitionTable::FindStateSnapshot(short, ShadowShaderState_t const&) const
CTransitionTable::ForceDepthFuncEquals(bool)
CTransitionTable::Init()
CTransitionTable::OverrideAlphaWriteEnable(bool, bool)
CTransitionTable::OverrideColorWriteEnable(bool, bool)
CTransitionTable::OverrideDepthEnable(bool, bool)
CTransitionTable::PerformShadowStateOverrides
CTransitionTable::PerformShadowStateOverrides()
CTransitionTable::Reset()
CTransitionTable::Shutdown()
CTransitionTable::TakeDefaultStateSnapshot()
CTransitionTable::TakeSnapshot()
CTransitionTable::UseDefaultState
CTransitionTable::UseDefaultState()
CTransitionTable::UseSnapshot
CTransitionTable::UseSnapshot(short)
CTransitionTable::~CTransitionTable()
CUtlBuffer::AddNullTermination()
CUtlBuffer::AssumeMemory(void*, int, int, int)
CUtlBuffer::CUtlBuffer(int, int, int)
CUtlBuffer::CUtlBuffer(void const*, int, int)
CUtlBuffer::CheckArbitraryPeekGet(int, int&)
CUtlBuffer::EatCPPComment()
CUtlBuffer::EatWhiteSpace()
CUtlBuffer::EnsureCapacity(int)
CUtlBuffer::GetDelimitedCharInternal(CUtlCharConversion*)
CUtlBuffer::GetDelimitedString(CUtlCharConversion*, char*, int)
CUtlBuffer::GetOverflow(int)
CUtlBuffer::GetStringInternal(char*, unsigned long)
CUtlBuffer::PeekGet(int, int)
CUtlBuffer::PeekStringLength()
CUtlBuffer::PeekStringMatch(int, char const*, int)
CUtlBuffer::PeekWhiteSpace(int)
CUtlBuffer::Put(void const*, int)
CUtlBuffer::PutOverflow(int)
CUtlBuffer::Scanf(char const*, ...)
CUtlBuffer::SeekGet(CUtlBuffer::SeekType_t, int)
CUtlBuffer::VaScanf(char const*, char*)
CUtlCStringConversion::CUtlCStringConversion(char, char const*, int, CUtlCharConversion::ConversionArray_t*)
CUtlCStringConversion::FindConversion(char const*, int*)
CUtlCharConversion::FindConversion(char const*, int*)
CUtlFixedMemory overflow!
CUtlLinkedList overflow! (exhausted index range)
CUtlLinkedList overflow! (exhausted memory allocator)
CUtlLinkedList<CShaderManager::ShaderLookup_t, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CShaderManager::ShaderLookup_t, int> > >::AllocInternal(bool)
CUtlLinkedList<CShaderManager::ShaderLookup_t, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CShaderManager::ShaderLookup_t, int> > >::RemoveAll()
CUtlLinkedList<CShaderManager::ShaderLookup_t, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<CShaderManager::ShaderLookup_t, int> > >::Unlink(int)
CUtlLinkedList<IDirect3DPixelShader9*, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<IDirect3DPixelShader9*, int> > >::AllocInternal(bool)
CUtlLinkedList<IDirect3DPixelShader9*, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<IDirect3DPixelShader9*, int> > >::RemoveAll()
CUtlLinkedList<IDirect3DPixelShader9*, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<IDirect3DPixelShader9*, int> > >::Unlink(int)
CUtlLinkedList<IDirect3DVertexShader9*, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<IDirect3DVertexShader9*, int> > >::AllocInternal(bool)
CUtlLinkedList<IDirect3DVertexShader9*, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<IDirect3DVertexShader9*, int> > >::RemoveAll()
CUtlLinkedList<IDirect3DVertexShader9*, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<IDirect3DVertexShader9*, int> > >::Unlink(int)
CUtlLinkedList<ShaderFileCache_t, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<ShaderFileCache_t, int> > >::AllocInternal(bool)
CUtlLinkedList<ShaderFileCache_t, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<ShaderFileCache_t, int> > >::RemoveAll()
CUtlLinkedList<ShaderFileCache_t, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<ShaderFileCache_t, int> > >::Unlink(int)
CUtlLinkedList<Texture_t, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<Texture_t, int> > >::AllocInternal(bool)
CUtlLinkedList<Texture_t, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<Texture_t, int> > >::RemoveAll()
CUtlLinkedList<Texture_t, int, true, int, CUtlFixedMemory<UtlLinkedListElem_t<Texture_t, int> > >::Unlink(int)
CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short>::Grow(int)
CUtlMemoryAligned<unsigned char, 32>::~CUtlMemoryAligned()
CUtlNoEscConversion::FindConversion(char const*, int*)
CUtlRBTree overflow!
CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Insert(CUtlSymbolTable::CStringPoolIndex const&)
CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::InsertRebalance(unsigned short)
CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::NewNode()
CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::Purge()
CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RotateLeft(unsigned short)
CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::RotateRight(unsigned short)
CUtlRBTree<CUtlSymbolTable::CStringPoolIndex, unsigned short, CUtlSymbolTable::CLess, CUtlMemory<UtlRBTreeNode_t<CUtlSymbolTable::CStringPoolIndex, unsigned short>, unsigned short> >::~CUtlRBTree()
CUtlRBTree<VertexDeclLookup_t, int, bool (*)(VertexDeclLookup_t const&, VertexDeclLookup_t const&), CUtlMemory<UtlRBTreeNode_t<VertexDeclLookup_t, int>, int> >::Insert(VertexDeclLookup_t const&)
CUtlRBTree<VertexDeclLookup_t, int, bool (*)(VertexDeclLookup_t const&, VertexDeclLookup_t const&), CUtlMemory<UtlRBTreeNode_t<VertexDeclLookup_t, int>, int> >::InsertRebalance(int)
CUtlRBTree<VertexDeclLookup_t, int, bool (*)(VertexDeclLookup_t const&, VertexDeclLookup_t const&), CUtlMemory<UtlRBTreeNode_t<VertexDeclLookup_t, int>, int> >::NewNode()
CUtlRBTree<VertexDeclLookup_t, int, bool (*)(VertexDeclLookup_t const&, VertexDeclLookup_t const&), CUtlMemory<UtlRBTreeNode_t<VertexDeclLookup_t, int>, int> >::~CUtlRBTree()
CUtlSortVector<CTransitionTable::ShadowStateDictEntry_t, CTransitionTable::ShadowStateDictLessFunc, CUtlVector<CTransitionTable::ShadowStateDictEntry_t, CUtlMemory<CTransitionTable::ShadowStateDictEntry_t, int> > >::Insert(CTransitionTable::ShadowStateDictEntry_t const&)
CUtlSortVector<CTransitionTable::SnapshotDictEntry_t, CTransitionTable::SnapshotDictLessFunc, CUtlVector<CTransitionTable::SnapshotDictEntry_t, CUtlMemory<CTransitionTable::SnapshotDictEntry_t, int> > >::Insert(CTransitionTable::SnapshotDictEntry_t const&)
CUtlSortVector<CTransitionTable::TransitionList_t, CTransitionTable::UniqueSnapshotLessFunc, CUtlVector<CTransitionTable::TransitionList_t, CUtlMemory<CTransitionTable::TransitionList_t, int> > >::Insert(CTransitionTable::TransitionList_t const&)
CUtlSortVector<KeyValues*, CUtlSortVectorKeyValuesByName, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> > >::CompareHelper(KeyValues* const*, KeyValues* const*)
CUtlStack<int, CUtlMemory<int, int> >::~CUtlStack()
CUtlString::Get() const
CUtlString::GetForModify()
CUtlString::Purge()
CUtlString::Set(char const*)
CUtlString::operator=(char const*)
CUtlSymbol::CUtlSymbol(char const*)
CUtlSymbol::Initialize()
CUtlSymbol::Initialize()::symbolsInitialized
CUtlSymbol::String() const
CUtlSymbol::s_pSymbolTable
CUtlSymbolTable::AddString(char const*)
CUtlSymbolTable::CLess::operator()(CUtlSymbolTable::CStringPoolIndex const&, CUtlSymbolTable::CStringPoolIndex const&) const
CUtlSymbolTable::CUtlSymbolTable(int, int, bool)
CUtlSymbolTable::String(CUtlSymbol) const
CUtlSymbolTable::~CUtlSymbolTable()
CUtlSymbolTableMT::String(CUtlSymbol) const
CUtlVector<CMeshMgr::VertexBufferLookup_t, CUtlMemory<CMeshMgr::VertexBufferLookup_t, int> >::~CUtlVector()
CUtlVector<CShaderDeviceMgrBase::AdapterInfo_t, CUtlMemory<CShaderDeviceMgrBase::AdapterInfo_t, int> >::~CUtlVector()
CUtlVector<CTransitionTable::ShadowStateDictEntry_t, CUtlMemory<CTransitionTable::ShadowStateDictEntry_t, int> >::~CUtlVector()
CUtlVector<CTransitionTable::SnapshotDictEntry_t, CUtlMemory<CTransitionTable::SnapshotDictEntry_t, int> >::~CUtlVector()
CUtlVector<CTransitionTable::SnapshotShaderState_t, CUtlMemory<CTransitionTable::SnapshotShaderState_t, int> >::~CUtlVector()
CUtlVector<CTransitionTable::TransitionList_t, CUtlMemory<CTransitionTable::TransitionList_t, int> >::GrowVector(int)
CUtlVector<CTransitionTable::TransitionList_t, CUtlMemory<CTransitionTable::TransitionList_t, int> >::~CUtlVector()
CUtlVector<CTransitionTable::TransitionOp_t, CUtlMemory<CTransitionTable::TransitionOp_t, int> >::AddToTail()
CUtlVector<CTransitionTable::TransitionOp_t, CUtlMemory<CTransitionTable::TransitionOp_t, int> >::~CUtlVector()
CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >::InsertBefore(int, CUtlString const&)
CUtlVector<CUtlSymbolTable::StringPool_t*, CUtlMemory<CUtlSymbolTable::StringPool_t*, int> >::~CUtlVector()
CUtlVector<CUtlVector<CTransitionTable::TransitionList_t, CUtlMemory<CTransitionTable::TransitionList_t, int> >, CUtlMemory<CUtlVector<CTransitionTable::TransitionList_t, CUtlMemory<CTransitionTable::TransitionList_t, int> >, int> >::~CUtlVector()
CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >::GrowVector(int)
CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >::~CUtlVector()
CUtlVector<ShadowState_t, CUtlMemory<ShadowState_t, int> >::~CUtlVector()
CUtlVector<StaticComboAliasRecord_t, CUtlMemory<StaticComboAliasRecord_t, int> >::InsertMultipleBefore(int, int)
CUtlVector<StaticComboAliasRecord_t, CUtlMemory<StaticComboAliasRecord_t, int> >::~CUtlVector()
CUtlVector<StaticComboRecord_t, CUtlMemory<StaticComboRecord_t, int> >::InsertMultipleBefore(int, int)
CUtlVector<StaticComboRecord_t, CUtlMemory<StaticComboRecord_t, int> >::~CUtlVector()
CUtlVector<unsigned char, CUtlMemory<unsigned char, int> >::InsertMultipleBefore(int, int)
CUtlVector<unsigned char, CUtlMemory<unsigned char, int> >::~CUtlVector()
CUtlVector<unsigned char, CUtlMemoryAligned<unsigned char, 32> >::InsertMultipleBefore(int, int)
CUtlVector<unsigned short, CUtlMemory<unsigned short, int> >::InsertMultipleBefore(int, int)
CUtlVector<unsigned short, CUtlMemory<unsigned short, int> >::~CUtlVector()
CUtlVector<void (*)(), CUtlMemory<void (*)(), int> >::~CUtlVector()
CUtlVector<void (*)(IDirect3DDevice9*, DynamicState_t const&, DynamicState_t&, bool), CUtlMemory<void (*)(IDirect3DDevice9*, DynamicState_t const&, DynamicState_t&, bool), int> >::~CUtlVector()
CVBAllocTracker::CountVB(void*, bool, int, int, unsigned long long)
CVBAllocTracker::TrackMeshAllocations(char const*)
CVBAllocTracker::UnCountVB(void*)
CVProfNode::EnterScope()
CVProfNode::ExitScope()
CVProfNode::GetSubNode(char const*, int, char const*, int)
CVProfile::FindOrCreateCounter(char const*, CounterGroup_t)
CVertexBuffer::Create(IDirect3DDevice9*)
CVertexBufferBase::CVertexBufferBase(char const*)
CVertexBufferBase::ComputeVertexDescription(unsigned char*, unsigned long long, VertexDesc_t&)
CVertexBufferBase::PrintVertexFormat(unsigned long long)
CVertexBufferBase::Spew(int, VertexDesc_t const&)
CVertexBufferBase::ValidateData(int, VertexDesc_t const&)
CVertexBufferBase::VertexFormatSize(unsigned long long)
CVertexBufferBase::~CVertexBufferBase()
CVertexBufferDx8::Allocate()
CVertexBufferDx8::Allocate: CreateVertexBuffer failed!
CVertexBufferDx8::BeginCastBuffer(unsigned long long)
CVertexBufferDx8::CVertexBufferDx8(ShaderBufferType_t, unsigned long long, int, char const*)
CVertexBufferDx8::EndCastBuffer()
CVertexBufferDx8::GetRoomRemaining() const
CVertexBufferDx8::GetVertexFormat() const
CVertexBufferDx8::IsDynamic() const
CVertexBufferDx8::Lock
CVertexBufferDx8::Lock(int, bool, VertexDesc_t&)
CVertexBufferDx8::Unlock(int, VertexDesc_t&)
CVertexBufferDx8::VertexCount() const
CVertexBufferDx8::~CVertexBufferDx8()
Can't blit from full-sized offscreen buffer!
CentroidHack
Chipset version %d %d %d %d
ClipTriangleAgainstPlane(D3DXVECTOR3**, int, D3DXVECTOR3**, int, float, bool)
CommitFlexWeights(IDirect3DDevice9*, DynamicState_t const&, DynamicState_t&, bool)
CommitSetScissorRect(IDirect3DDevice9*, DynamicState_t const&, DynamicState_t&, bool)
CommitSetViewports(IDirect3DDevice9*, DynamicState_t const&, DynamicState_t&, bool)
CommitVertexTextures(IDirect3DDevice9*, DynamicState_t const&, DynamicState_t&, bool)
ComputeVertexDesc(unsigned char*, unsigned long long, VertexDesc_t&)
ComputeVertexDesc(unsigned char*, unsigned long long, VertexDesc_t&)::temp
ComputeVertexSpec(unsigned long long, _D3DVERTEXELEMENT9*, bool, bool, bool)
ConCommand::AutoCompleteSuggest(char const*, CUtlVector<CUtlString, CUtlMemory<CUtlString, int> >&)
ConCommand::CanAutoComplete()
ConCommand::ConCommand(char const*, void (*)(), char const*, int, int (*)(char const*, char (*) [64]))
ConCommand::ConCommand(char const*, void (*)(CCommand const&), char const*, int, int (*)(char const*, char (*) [64]))
ConCommand::Dispatch(CCommand const&)
ConCommand::IsCommand() const
ConCommand::~ConCommand()
ConCommandBase::AddFlags(int)
ConCommandBase::CreateBase(char const*, char const*, int)
ConCommandBase::GetDLLIdentifier() const
ConCommandBase::GetHelpText() const
ConCommandBase::GetName() const
ConCommandBase::Init()
ConCommandBase::IsFlagSet(int) const
ConCommandBase::IsRegistered() const
ConCommandBase::s_pAccessor
ConCommandBase::s_pConCommandBases
ConVar.mat_dxlevel
ConVar.mat_picmip
ConVar::AddFlags(int)
ConVar::ChangeStringValue(char const*, float)
ConVar::ClampValue(float&)
ConVar::ConVar(char const*, char const*, int)
ConVar::ConVar(char const*, char const*, int, char const*)
ConVar::Create(char const*, char const*, int, char const*, bool, float, bool, float, bool, float, bool, float, void (*)(IConVar*, char const*, float))
ConVar::GetHelpText() const
ConVar::GetName() const
ConVar::Init()
ConVar::InternalSetFloatValue(float, bool)
ConVar::InternalSetIntValue(int)
ConVar::InternalSetValue(char const*)
ConVar::IsCommand() const
ConVar::IsFlagSet(int) const
ConVar::IsRegistered() const
ConVar::SetValue(char const*)
ConVar::SetValue(float)
ConVar::SetValue(int)
ConVar::~ConVar()
ConVarRef %s doesn't point to an existing ConVar
ConVarRef::ConVarRef(char const*)
ConVarRef::Init(char const*, bool)::bFirst
ConVar_Register(int, IConCommandBaseAccessor*)
ConVar_Unregister()
ConnectTier1Libraries(void* (**)(char const*, int*), int)
ConnectTier2Libraries(void* (**)(char const*, int*), int)
CopyToMeshBuilder called on something other than a temp mesh.
Could not find base GL shader cache file
Could not find user GL shader cache file
Could not link OpenGL shaders: %s (%d, %d) : %s (%d, %d)
Could not load program cache file %s
Could not write to program cache file!
Couldn't load %s shader %s
Count
Create convars from the current hardware config, useful for diffing purposes
CreateD3DPixelShader(unsigned int*, unsigned int, int, char const*, char*)
CreateD3DTexture(int, int, int, ImageFormat, int, int, char*)
CreateIndexBuffer failed!
CreateInterfaceInternal(char const*, int*)
CreateVertexIDBuffer
CullMode: invalid cullMode
D3DERR_DRIVERINTERNALERROR - Index Buffer Lock Failed in %s on line %d (offset %d, size %d, flags 0x%x)
D3DERR_INVALIDCALL - Index Buffer Lock Failed in %s on line %d(offset %d, size %d, flags 0x%x)
D3DERR_OUTOFVIDEOMEMORY - Index Buffer Lock Failed in %s on line %d (offset %d, size %d, flags 0x%x)
D3DQUERYTYPE_EVENT not available on this driver
D3DSupportsCompressedTextures()
D3DXMATRIX::operator float*()
D3DXMATRIX::operator!=(D3DXMATRIX const&) const
D3DXMATRIX::operator()(int, int)
D3DXMATRIX::operator*(D3DXMATRIX const&) const
D3DXPLANE::operator float*()
D3DXPLANE::operator!=(D3DXPLANE const&)
D3DXPLANE::operator[](int)
D3DXVECTOR2::operator float*()
D3DXVECTOR3::D3DXVECTOR3(float, float, float)
D3DXVECTOR3::operator float*()
D3DXVECTOR4::D3DXVECTOR4(float, float, float, float)
DEFAULT
DEPTHBUFFER
DF16t
DF16u
DF24t
DF24u,
DTBRB`PBRBSHRASJRAS0|p
DXLevel
DXT1_ONEBITALPHA
DXT1_RUNTIME
DXT5_RUNTIME
DebugTextureInfo001
DefaultCompletionFunc(char const*, char (*) [64])
DepthFunc: invalid param
DestroyD3DTexture(IDirect3DBaseTexture9*)
DevMsg(char const*, ...)
DevWarning(char const*, ...)
Device Caps :
DisableShaderOptimizations
Disables HW morphing for particular mods
DisconnectTier1Libraries()
DisconnectTier2Libraries()
Display mode : %d x %d (%s)
DrawIndexedPrimitive
Driver : %s Version : %lld
Driver Description :  %s
Dump VB memory allocation stats.
Dx9Device()->DrawIndexedPrimitive
ENABLE_VB_ALLOC_TRACKER must be 1 to enable VB mem alloc tracking
ERROR: Compressed vertices in use but material does not support them!
ERROR: Compressed vertices in use but vertex compression is disabled (or not supported on this hardware)!
ERROR: dynamic meshes cannot use compressed vertices!
ERROR: shader asking for a too-narrow vertex format - you will see errors if running with debug D3D DLLs!
EXECUTABLE_PATH
Encountered a material with two passes that use different numbers of bones!
Encountered a material with two passes that use different texture coord sizes!
Encountered a material with two passes that use different user data sizes!
Error 0x%lX.
EvaluateConditional(char const*)
F9u(u
F;w0|
FOGRANGE %s FOGTABLE %s FOGVERTEX %s ZFOG %s WFOG %s
FRONTBUFFER
Failed to create %s device!
Failed to create D3D9!
Failed to lock index buffer in CIndexBufferDx8::LockIndexBuffer
Failed to lock vertex buffer in CVertexBufferDx8::Lock
FindNearestSupportedBackBufferFormat(unsigned int, _D3DDEVTYPE, ImageFormat, ImageFormat, bool)
FindNearestSupportedDepthFormat(int, ImageFormat, ImageFormat, _D3DFORMAT)
FindNearestSupportedFormat(ImageFormat, bool, bool, bool)
FindOrCreateVertexDecl(unsigned long long, bool, bool, bool)
Force frame syncing to lock a managed texture.
Forcefully resetting device (%s), resources release level was %d.
Format
GammaToLinear(float)
GammaToLinearFullRange(float)
GenerateLineLoopIndexBuffer(unsigned short*, int, int)
GenerateLineStripIndexBuffer(unsigned short*, int, int)
GeneratePolygonIndexBuffer(unsigned short*, int, int)
GenerateQuadIndexBuffer(unsigned short*, int, int)
GenerateSequentialIndexBuffer(unsigned short*, int, int)
GetCStringCharConversion()
GetImageFormat(IDirect3DBaseTexture9*)
GetNearestD3DColorFormat(ImageFormat, bool, bool, bool)
GetNoEscCharConversion()
Gfff.
GlobalMemoryStatus(_MEMORYSTATUS*)
GlobalMemoryStatus: %llu
HWTRANSFORMANDLIGHT %s NPATCHES %s PUREDEVICE %s
H__ZdaPv
H__ZdlPv
H__Znam
H__Znwm
HandleLateCreation
Height
ID3DXBuffer::GetBufferPointer()
ID3DXBuffer::GetBufferSize()
ID3DXMatrixStack::GetTop()
ID3DXMatrixStack::LoadIdentity()
ID3DXMatrixStack::LoadMatrix(D3DXMATRIX const*)
ID3DXMatrixStack::MultMatrix(D3DXMATRIX const*)
ID3DXMatrixStack::MultMatrixLocal(D3DXMATRIX const*)
ID3DXMatrixStack::Pop()
ID3DXMatrixStack::Push()
ID3DXMatrixStack::Release(int, char*)
ID3DXMatrixStack::RotateAxisLocal(D3DXVECTOR3 const*, float)
ID3DXMatrixStack::ScaleLocal(float, float, float)
ID3DXMatrixStack::TranslateLocal(float, float, float)
IDirect3D9::CheckDepthStencilMatch(unsigned int, _D3DDEVTYPE, _D3DFORMAT, _D3DFORMAT, _D3DFORMAT)
IDirect3D9::CheckDeviceFormat(unsigned int, _D3DDEVTYPE, _D3DFORMAT, unsigned int, _D3DRESOURCETYPE, _D3DFORMAT)
IDirect3D9::CheckDeviceMultiSampleType(unsigned int, _D3DDEVTYPE, _D3DFORMAT, int, _D3DMULTISAMPLE_TYPE, unsigned int*)
IDirect3D9::CheckDeviceType(unsigned int, _D3DDEVTYPE, _D3DFORMAT, _D3DFORMAT, int)
IDirect3D9::CreateDevice(unsigned int, _D3DDEVTYPE, void*, unsigned int, _D3DPRESENT_PARAMETERS_*, IDirect3DDevice9**)
IDirect3D9::EnumAdapterModes(unsigned int, _D3DFORMAT, unsigned int, _D3DDISPLAYMODE*)
IDirect3D9::GetAdapterCount()
IDirect3D9::GetAdapterDisplayMode(unsigned int, _D3DDISPLAYMODE*)
IDirect3D9::GetAdapterIdentifier(unsigned int, unsigned int, _D3DADAPTER_IDENTIFIER9*)
IDirect3D9::GetAdapterModeCount(unsigned int, _D3DFORMAT)
IDirect3D9::GetDeviceCaps(unsigned int, _D3DDEVTYPE, _D3DCAPS9*)
IDirect3DBaseTexture9::GetLevelCount()
IDirect3DBaseTexture9::GetLevelDesc(unsigned int, _D3DSURFACE_DESC*)
IDirect3DBaseTexture9::GetType()
IDirect3DCubeTexture9::GetCubeMapSurface(_D3DCUBEMAP_FACES, unsigned int, IDirect3DSurface9**)
IDirect3DCubeTexture9::GetLevelDesc(unsigned int, _D3DSURFACE_DESC*)
IDirect3DDevice9::AcquireThreadOwnership()
IDirect3DDevice9::BeginScene()
IDirect3DDevice9::Clear(unsigned int, _D3DRECT const*, unsigned int, unsigned int, float, unsigned int)
IDirect3DDevice9::CreateCubeTexture(unsigned int, unsigned int, unsigned int, _D3DFORMAT, _D3DPOOL, IDirect3DCubeTexture9**, void**, char*)
IDirect3DDevice9::CreateDepthStencilSurface(unsigned int, unsigned int, _D3DFORMAT, _D3DMULTISAMPLE_TYPE, unsigned int, int, IDirect3DSurface9**, void**)
IDirect3DDevice9::CreateIndexBuffer(unsigned int, unsigned int, _D3DFORMAT, _D3DPOOL, IDirect3DIndexBuffer9**, void**)
IDirect3DDevice9::CreateOffscreenPlainSurface(unsigned int, unsigned int, _D3DFORMAT, _D3DPOOL, IDirect3DSurface9**, void**)
IDirect3DDevice9::CreatePixelShader(unsigned int const*, IDirect3DPixelShader9**, char const*, char*, unsigned int const*)
IDirect3DDevice9::CreateQuery(_D3DQUERYTYPE, IDirect3DQuery9**)
IDirect3DDevice9::CreateRenderTarget(unsigned int, unsigned int, _D3DFORMAT, _D3DMULTISAMPLE_TYPE, unsigned int, int, IDirect3DSurface9**, void**, char*)
IDirect3DDevice9::CreateTexture(unsigned int, unsigned int, unsigned int, unsigned int, _D3DFORMAT, _D3DPOOL, IDirect3DTexture9**, void**, char*)
IDirect3DDevice9::CreateVertexBuffer(unsigned int, unsigned int, unsigned int, _D3DPOOL, IDirect3DVertexBuffer9**, void**)
IDirect3DDevice9::CreateVertexDeclaration(_D3DVERTEXELEMENT9 const*, IDirect3DVertexDeclaration9**)
IDirect3DDevice9::CreateVertexShader(unsigned int const*, IDirect3DVertexShader9**, char const*, char*)
IDirect3DDevice9::CreateVolumeTexture(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, _D3DFORMAT, _D3DPOOL, IDirect3DVolumeTexture9**, void**, char*)
IDirect3DDevice9::DrawIndexedPrimitive(_D3DPRIMITIVETYPE, int, unsigned int, unsigned int, unsigned int, unsigned int)
IDirect3DDevice9::DrawPrimitive(_D3DPRIMITIVETYPE, unsigned int, unsigned int)
IDirect3DDevice9::EndScene()
IDirect3DDevice9::EvictManagedResources()
IDirect3DDevice9::GetDepthStencilSurface(IDirect3DSurface9**)
IDirect3DDevice9::GetDeviceCaps(_D3DCAPS9*)
IDirect3DDevice9::GetRenderTarget(unsigned int, IDirect3DSurface9**)
IDirect3DDevice9::GetRenderTargetData(IDirect3DSurface9*, IDirect3DSurface9*)
IDirect3DDevice9::LightEnable(unsigned int, int)
IDirect3DDevice9::LinkShaderPair(IDirect3DVertexShader9*, IDirect3DPixelShader9*)
IDirect3DDevice9::Present(_RECT const*, _RECT const*, void*, RGNDATA const*)
IDirect3DDevice9::QueryShaderPair(int, GLMShaderPairInfo*)
IDirect3DDevice9::ReleaseThreadOwnership()
IDirect3DDevice9::Reset(_D3DPRESENT_PARAMETERS_*)
IDirect3DDevice9::SetClipPlane(unsigned int, float const*)
IDirect3DDevice9::SetDepthStencilSurface(IDirect3DSurface9*)
IDirect3DDevice9::SetGammaRamp(unsigned int, unsigned int, _D3DGAMMARAMP const*)
IDirect3DDevice9::SetLight(unsigned int, _D3DLIGHT9 const*)
IDirect3DDevice9::SetMaterial(_D3DMATERIAL9 const*)
IDirect3DDevice9::SetPixelShaderConstantB(unsigned int, int const*, unsigned int)
IDirect3DDevice9::SetPixelShaderConstantI(unsigned int, int const*, unsigned int)
IDirect3DDevice9::SetRenderState(_D3DRENDERSTATETYPE, unsigned int)
IDirect3DDevice9::SetRenderStateInline(_D3DRENDERSTATETYPE, unsigned int)
IDirect3DDevice9::SetRenderTarget(unsigned int, IDirect3DSurface9*)
IDirect3DDevice9::SetScissorRect(_RECT const*)
IDirect3DDevice9::SetTextureStageState(unsigned int, _D3DTEXTURESTAGESTATETYPE, unsigned int)
IDirect3DDevice9::SetTransform(_D3DTRANSFORMSTATETYPE, D3DMATRIX const*)
IDirect3DDevice9::SetViewport(_D3DVIEWPORT9 const*)
IDirect3DDevice9::ShowCursor(int)
IDirect3DDevice9::StretchRect(IDirect3DSurface9*, _RECT const*, IDirect3DSurface9*, _RECT const*, _D3DTEXTUREFILTERTYPE)
IDirect3DDevice9::TestCooperativeLevel()
IDirect3DIndexBuffer9::Lock(unsigned int, unsigned int, void**, unsigned int)
IDirect3DIndexBuffer9::Unlock()
IDirect3DIndexBuffer9::UnlockActualSize(unsigned int, void const*)
IDirect3DQuery9::GetData(void*, unsigned int, unsigned int)
IDirect3DQuery9::Issue(unsigned int)
IDirect3DResource9::SetPriority(unsigned int)
IDirect3DSurface9::GetDesc(_D3DSURFACE_DESC*)
IDirect3DSurface9::LockRect(_D3DLOCKED_RECT*, _RECT const*, unsigned int)
IDirect3DSurface9::UnlockRect()
IDirect3DTexture9::GetSurfaceLevel(unsigned int, IDirect3DSurface9**)
IDirect3DVertexBuffer9::Lock(unsigned int, unsigned int, void**, unsigned int)
IDirect3DVertexBuffer9::Unlock()
IDirect3DVertexBuffer9::UnlockActualSize(unsigned int, void const*)
IDirect3DVolumeTexture9::GetLevelDesc(unsigned int, _D3DVOLUME_DESC*)
IDirect3DVolumeTexture9::LockBox(unsigned int, _D3DLOCKED_BOX*, _D3DBOX const*, unsigned int)
IDirect3DVolumeTexture9::UnlockBox(unsigned int)
IMAGE_FORMAT_R32F
IMAGE_FORMAT_RGB323232F
IMAGE_FORMAT_RGBA32323232F
IMAGE_FORMAT_UVLX8888
IMaterialSystemHardwareConfig::SupportsNormalMapCompression() const
INTZRAWZDF16DF24NULLATI2ATI1
INTZt
INTZu
IShaderAPI::SupportsNormalMapCompression() const
If set, attempt to keep a persistent buffer for the LZMA decoder dictionary. This avoids re-allocating a ~16-64meg buffer for each operation, at the expensive of keeping extra memory around when it is not in-use.
If this value is not -1, the material system will limit the amount of texture memory it uses in a frame. Useful for identifying performance cliffs. The value is in kilobytes.
Ignoring out-of-date shader cache (%s) with root key %s
ImageLoader::D3DFormatToImageFormat(_D3DFORMAT)
ImageLoader::GetMemRequired(int, int, int, ImageFormat, bool)
ImageLoader::ImageFormatInfo(ImageFormat)
ImageLoader::ImageFormatToD3DFormat(ImageFormat)
Indices: %d
Indices: %d (First %d, Offset %d)
InitShaderAPICVars()::g_ConVarAccessor
InitializeColorInformation(unsigned int, _D3DDEVTYPE, ImageFormat)
InputSystemVersion001
Intel
InterfaceReg::InterfaceReg(void* (*)(), char const*)
InterfaceReg::s_pInterfaceRegs
Invalid shader linkage: %s (%d, %d) : %s (%d, %d)
IsIconic(void*)
KeyValues Error: %s in file %s
KeyValues::CreateKeyUsingKnownLastChild(char const*, KeyValues*)
KeyValues::CreateNewKey()
KeyValues::FindKey(char const*, bool)
KeyValues::GetColor(char const*)
KeyValues::GetDataType(char const*)
KeyValues::GetFirstTrueSubKey()
KeyValues::GetFirstValue()
KeyValues::GetFloat(char const*, float)
KeyValues::GetInt(char const*, int)
KeyValues::GetName() const
KeyValues::GetNextTrueSubKey()
KeyValues::GetNextValue()
KeyValues::GetPtr(char const*, void*)
KeyValues::GetString(char const*, char const*)
KeyValues::GetStringForSymbolClassic(int)
KeyValues::GetSymbolForStringClassic(char const*, bool)
KeyValues::GetWString(char const*, wchar_t const*)
KeyValues::KeyValues(char const*)
KeyValues::LoadFromBuffer(%s%s%s): Begin
KeyValues::LoadFromBuffer(%s%s%s): End
KeyValues::LoadFromBuffer(char const*, CUtlBuffer&, IBaseFileSystem*, char const*)
KeyValues::LoadFromBuffer(char const*, char const*, IBaseFileSystem*, char const*)
KeyValues::LoadFromFile(%s%s%s): Begin
KeyValues::LoadFromFile(%s%s%s): End / FileNotFound
KeyValues::LoadFromFile(%s%s%s): End / Success
KeyValues::LoadFromFile(IBaseFileSystem*, char const*, char const*, bool)
KeyValues::MakeCopy() const
KeyValues::ParseIncludedKeys(char const*, char const*, IBaseFileSystem*, char const*, CUtlVector<KeyValues*, CUtlMemory<KeyValues*, int> >&)
KeyValues::ParseIncludedKeys: Couldn't load included keyvalue file %s
KeyValues::ReadToken(CUtlBuffer&, bool&, bool&)
KeyValues::RecursiveLoadFromBuffer(char const*, CUtlBuffer&)
KeyValues::RecursiveMergeKeyValues(KeyValues*)
KeyValues::RecursiveSaveToFile(CUtlBuffer&, int, bool, bool)
KeyValues::RecursiveSaveToFile(IBaseFileSystem*, void*, CUtlBuffer*, int, bool, bool)
KeyValues::RecursiveSaveToFile: TODO, missing code for TYPE_COLOR.
KeyValues::RemoveEverything()
KeyValues::SaveKeyToFile(KeyValues*, IBaseFileSystem*, void*, CUtlBuffer*, int, bool, bool)
KeyValues::SaveKeyToFile(KeyValues*, IBaseFileSystem*, void*, CUtlBuffer*, int, bool, bool)::buf
KeyValues::SaveToFile(IBaseFileSystem*, char const*, char const*, bool, bool, bool)
KeyValues::SaveToFile: couldn't open file "%s" in path "%s".
KeyValues::SetColor(char const*, Color)
KeyValues::SetFloat(char const*, float)
KeyValues::SetInt(char const*, int)
KeyValues::SetPtr(char const*, void*)
KeyValues::SetString(char const*, char const*)
KeyValues::SetWString(char const*, wchar_t const*)
KeyValues::WriteConvertedString(IBaseFileSystem*, void*, CUtlBuffer*, char const*)
KeyValues::deleteThis()
KeyValues::operator delete(void*)
KeyValues::operator new(unsigned long)
KeyValues::s_pfGetStringForSymbol
KeyValues::s_pfGetSymbolForString
L=33s?
LZMA Decompression failed (%i)
L^_[]
LinearToGammaFullRange(float)
LoadCubeTextureFromVTF(TextureLoadInfo_t&, IVTFTexture*, int)
LoadCubeTextureFromVTF: VTF dimensions do not match texture
LoadCubeTextureFromVTF: couldn't get texture level description
LoadFromBuffer: missing {
LoadSubTexture(TextureLoadInfo_t&, int, int, int)
LoadTexture(TextureLoadInfo_t&)
LoadTextureFromVTF(TextureLoadInfo_t&, IVTFTexture*, int)
LoadTextureFromVTF: VTF dimensions do not match texture
LoadTextureFromVTF: couldn't get texture level description
LoadVolumeTextureFromVTF(TextureLoadInfo_t&, IVTFTexture*, int)
LoadVolumeTextureFromVTF: VTF dimensions do not match texture
LoadVolumeTextureFromVTF: couldn't get texture level description
Loaded program cache file "%s", total keyvalues: %i, total successfully linked: %i
LockTexture(int, int, IDirect3DBaseTexture9*, int, _D3DCUBEMAP_FACES, int, int, int, int, bool, CPixelWriter&)
LzmaDec_DecodeReal2(CLzmaDec*, unsigned long, unsigned char const*)
LzmaDec_TryDummy(CLzmaDec const*, unsigned char const*, unsigned long)
MIPMAPLODBIAS %s WBUFFER %s ZBIAS %s ZTEST %s
Material %s does not support vertex format used by the mesh (maybe missing fields or mismatched vertex compression?), mesh will not be rendered. Grab a programmer!
MaterialSystemHardwareConfig012
MathLib_Init(float, float, float, int, bool, bool, bool, bool)
MatrixTranspose(VMatrix const&, VMatrix&)
Max Texture Aspect Ratio : *%d*
Max Texture Dimensions : %d x %d
Max Textures : %d Max Stages : %d
MaxDXLevel
MaxDeviceID
MbP?9
MeshMgr()
MinDeviceID
N %1.2f %1.2f %1.2f 
NA333333
NULLt
NV_DST16
NV_DST24
NV_INTZ
NV_NULL
NV_RAWZ
NeedsReset
NetworkSystemVersion001
NoUserClipPlanes
Num Pixel Shaders = %d Vertex Shaders=%d
OpenGL
Other Verts
OtherAppInit
Out of OS Paged Pool Memory! For more information, please see
OverrideValues_R(KeyValues*, KeyValues*)
P %8.2f %8.2f %8.2f 
P0     ````@@00  @@
PPPPPPP0
Please see the following for more info.
PolyMode: invalid poly mode
Pp@0P
Precache: Took %d ms, Vertex %d, Pixel %d
Primitive Caps :
Print all vertex and pixel shaders currently loaded to the console
Q_UTF32ToUTF8(wchar_t const*, char*, int, EStringConvertErrorPolicy)
Q_UTF8ToUChar32(char const*, wchar_t&, bool&)
Q_UTF8ToUTF32(char const*, wchar_t*, int, EStringConvertErrorPolicy)
Qkkbal
QueuedLoaderVersion004
R0<VATBp
RAWZu%
RAWZuP
RBRARAp
RBZBRBp
RGB565
RGB888
RGB888_BLUESCREEN
RGBA16161616
RGBA16161616F
RGBA8888
Raster Caps :
ReacquireResources
ReacquireResources being discarded is a bug: use IsDeactivated to check for a valid device.
ReacquireResources has no effect, now at level %d.
RecursiveLoadFromBuffer:  got EOF instead of keyname
RecursiveLoadFromBuffer:  got NULL key
RecursiveLoadFromBuffer:  got conditional between key and value
RecursiveLoadFromBuffer:  got empty keyname
RecursiveLoadFromBuffer:  got } in key
RecursiveLoadFromBuffer:  recursion overflow
Refraction overhead
ReleaseAllVertexDecl()
ReleaseD3DTexture(IDirect3DBaseTexture9*)
ReleaseResources
ReleaseResources called twice is a bug: use IsDeactivated to check for a valid device.
ReleaseResources has no effect, now at level %d.
RenderTargets
ResizeWindow
ResizeWindow: Reset failed, hr = 0x%08lX.
Rffffff.
S %1.2f %1.2f %1.2f 
S0\TARBRB`
SEPARATETEXTUREMEMORIES %s TEXTURENONLOCALVIDMEM %s TEXTURESYSTEMMEMORY %s
SHADERAPI CAPS:
SMRBRBRB`
SetHardwareGammaRamp( %f )
SetIdentityMatrix(matrix3x4_t&)
Shader %s is the wrong version %d, expecting %d
Shader '%s' - All dynamic combos skipped. This is bad!
Shader '%s' - Couldn't load combo %d of shader (dyn=%d)
Shader API Driver Info:
Shader File Cache:
Shader compilation failed! Reported the following errors:
Shader specifying too-thin vertex format, should be at least %d bytes! (Suppressing furthur warnings)
ShaderAPIDX8::CreateD3DTexture: D3DERR_INVALIDCALL
ShaderAPIDX8::CreateD3DTexture: D3DERR_OUTOFVIDEOMEMORY
ShaderAPIDX8::CreateD3DTexture: E_OUTOFMEMORY
ShaderAPIDX8::CreateD3DTexture: Invalid color format!
ShaderAPIDX8::CreateD3DTexture: Null device used. Texture not created.
ShaderAPIDX8::CreateDepthStencilSurface: D3DERR_INVALIDCALL
ShaderAPIDX8::CreateDepthStencilSurface: D3DERR_OUTOFVIDEOMEMORY
ShaderAPIDx10 was unable to access the required interfaces!
ShaderApi030
ShaderDevice001
ShaderDeviceFactory(char const*, int*)
ShaderDeviceMgr001
ShaderShadow()
ShaderShadow010
SinCos(float, float*, float*)
Size of Texture Memory : %d kb
Sleep(unsigned int)
SrgbGammaToLinear(float)
SrgbLinearToGamma(float)
Swap_Buffers
Sys_GetFactoryThis()
SzAlloc(void*, unsigned long)
SzFree(void*, void*)
T %1.2f %1.2f %1.2f 
T%d %.2f %.2f 
TBRBp
TEXTUREVIDEOMEMORY %s TLVERTEXSYSTEMMEMORY %s TLVERTEXVIDEOMEMORY %s
Tcvar
TestTextureFormat(_D3DFORMAT, bool, bool, bool)
TexGroup
TexGroup_frame_
TexGroup_frame_%s
TexGroup_frame_RenderTargets
TexGroup_frame_Static Indices
TexGroup_global_
TexGroup_global_%s
TexGroup_global_Dynamic Indices
TexGroup_global_Dynamic Verts
TexGroup_global_Static Indices
Texture Caps :
TextureList
Too many indices for index buffer. . tell a programmer (%d>%d)
Too many vertices for vertex buffer. . tell a programmer (%d>%d)
Too many verts for a dynamic vertex buffer (%d>%d) Tell a programmer to up VERTEX_BUFFER_SIZE.
Total Combos:%9d Static:%9d Dynamic:%7d SeekTable:%7d Ver:%d '%s'
Total pixel shader sets: %d
Total unique pixel shaders: %d
Total unique vertex shaders: %d
Total vertex shader sets: %d
UNKNOWN
UVWQ8888
Unaccounted
Unaccounted textures
UnlockTexture(int, int, IDirect3DBaseTexture9*, int, _D3DCUBEMAP_FACES)
VBAllocTracker001
VERTEX_BONEWEIGHT(%d)%s|
VERTEX_BONE_INDEX|
VERTEX_COLOR|
VERTEX_FORMAT_VERTEX_SHADER|
VERTEX_NORMAL[COMPRESSED]|
VERTEX_NORMAL|
VERTEX_POSITION|
VERTEX_SPECULAR|
VERTEX_TANGENT_S|
VERTEX_TANGENT_T|
VERTEX_TEXCOORD_SIZE(%d,%d)
VERTEX_USERDATA_SIZE(%d)|
VEngineCvar004
VFileSystem022
VMDLLIB001
VMaterialSystem081
VMatrix::operator=(VMatrix const&)
VP4002
VProcessUtils001
VShaderUtil001
V_UnqualifiedFileName(char const*)
V_atof(char const*)
V_atoi(char const*)
V_snprintf(char*, int, char const*, ...)
V_stricmp(char const*, char const*)
V_stristr(char const*, char const*)
V_stristr(char*, char const*)
V_strncat(char*, char const*, unsigned long, int)
V_strncmp(char const*, char const*, int)
V_strncpy(char*, char const*, int)
VendorID
Vertex Shader Version : %d.%d Pixel Shader Version : %d.%d
VertexDeclLessFunc(VertexDeclLookup_t const&, VertexDeclLookup_t const&)
Verts %d (First %d, Offset %d) :
Verts: (Vertex Format %llx)
Width
Wr %8.2f 
[%4d] 
[COMPRESSED]
\^_[]
_.memset_pattern
_COM_TimestampedLog
_CallAssertFailedNotifyFunc
_CommandLine_Tier0
_CreateInterface
_D3DPERF_SetOptions
_D3DXCompileShader
_D3DXCreateMatrixStack
_D3DXMatrixIdentity
_D3DXMatrixInverse
_D3DXMatrixMultiply
_D3DXMatrixOrthoOffCenterRH
_D3DXMatrixPerspectiveOffCenterRH
_D3DXMatrixPerspectiveRH
_D3DXMatrixTranslation
_D3DXMatrixTranspose
_D3DXPlaneNormalize
_D3DXPlaneTransform
_D3DXVec3TransformCoord
_D3DXVec4Normalize
_D3DXVec4Transform
_DWarning
_DevMsg
_Direct3DCreate9
_DoNewAssertDialog
_Error
_GetCPUInformation
_InvRSquared(float const*)
_KeyValuesSystem
_LzmaDec_Allocate
_LzmaDec_AllocateProbs
_LzmaDec_DecodeToDic
_LzmaDec_Free
_LzmaDecode
_Plat_DebugString
_Plat_FloatTime
_Plat_GetPagedPoolInfo
_Plat_IsInDebugSession
_SSE_InvRSquared(float const*)
_SSE_RSqrtAccurate(float)
_SSE_RSqrtFast(float)
_SSE_Sqrt(float)
_SSE_VectorNormalizeFast(Vector&)
_ShouldUseNewAssertDialog
_SinCosTable
_ThreadGetCurrentId
_ThreadInMainThread
_ThreadInterlockedAssignIf
_ThreadInterlockedDecrement
_ThreadInterlockedExchange
_ThreadInterlockedIncrement
_ThreadSleep
_ToGLConnectLibraries
_ToGLDisconnectLibraries
_VectorNormalize(Vector&)
_VectorNormalizeFast(Vector&)
_Warning
__CreateCHardwareConfigIMaterialSystemHardwareConfig_interface()
__CreateCShaderAPIDx8IDebugTextureInfo_interface()
__CreateCShaderAPIDx8IShaderAPI_interface()
__CreateCShaderAPIDx8IShaderDevice_interface()
__CreateCShaderDeviceMgrDx8IShaderDeviceMgr_interface()
__CreateCShaderShadowDX8IShaderShadow_interface()
__CreateCVBAllocTrackerIVBAllocTracker_interface()
__DATA
__DefaultRuneLocale
__ExitOnFatalAssert
__GLOBAL__sub_I_KeyValues.stdout.rel_tf_osx_builder.48880.OTU5do.ii
__GLOBAL__sub_I_convar.stdout.rel_tf_osx_builder.95606.yY8UGm.ii
__GLOBAL__sub_I_cvballoctr.stdout.rel_tf_osx_builder.25196.Vnf8zi.ii
__GLOBAL__sub_I_hardwareco.stdout.rel_tf_osx_builder.25197.ZwaxO8.ii
__GLOBAL__sub_I_lzmaDecode.stdout.rel_tf_osx_builder.16562.vf3RpS.ii
__GLOBAL__sub_I_meshdx8.stdout.rel_tf_osx_builder.64105.TlVuVa.ii
__GLOBAL__sub_I_shaderapid.stdout.rel_tf_osx_builder.31061.8HRZ6M.ii
__GLOBAL__sub_I_shaderdevi.stdout.rel_tf_osx_builder.30138.Baoved.ii
__GLOBAL__sub_I_shadershad.stdout.rel_tf_osx_builder.25231.4ZkBKG.ii
__GLOBAL__sub_I_sse.stdout.rel_tf_osx_builder.17035.axPYyg.ii
__GLOBAL__sub_I_utlbuffer.stdout.rel_tf_osx_builder.16684.naN6Zv.ii
__GLOBAL__sub_I_utlsymbol.stdout.rel_tf_osx_builder.16704.f4zRDn.ii
__GLOBAL__sub_I_vertexdecl.stdout.rel_tf_osx_builder.25241.o4VYWA.ii
__GLOBAL__sub_I_vertexshad.stdout.rel_tf_osx_builder.64111.JNjmcT.ii
__LINKEDIT
__SpewInfo
__SpewMessage
__TEXT
__Unwind_Resume
___bzero
___clang_call_terminate
___cxa_atexit
___cxa_begin_catch
___cxa_call_unexpected
___cxa_guard_abort
___cxa_guard_acquire
___cxa_guard_release
___cxa_pure_virtual
___error
___gxx_personality_v0
___maskrune
___stack_chk_fail
___stack_chk_guard
___tolower
__bss
__common
__const
__cstring
__data
__eh_frame
__g_CreateCHardwareConfigIMaterialSystemHardwareConfig_reg
__g_CreateCShaderAPIDx8IDebugTextureInfo_reg
__g_CreateCShaderAPIDx8IShaderAPI_reg
__g_CreateCShaderAPIDx8IShaderDevice_reg
__g_CreateCShaderDeviceMgrDx8IShaderDeviceMgr_reg
__g_CreateCShaderShadowDX8IShaderShadow_reg
__g_CreateCVBAllocTrackerIVBAllocTracker_reg
__gcc_except_tab__TEXT
__la_symbol_ptr
__mod_init_func
__nl_symbol_ptr
__stub_helper
__symbol_stub
__text
__unwind_info
_atof
_atoi
_colorcorrection
_cosf
_cvar
_g_KeyValuesErrorStack
_g_VBAllocTracker
_g_VBAllocTrackerShaderAPI
_g_VProfCurrentProfile
_g_bShaderAccessDisallowed
_g_bUseShaderMutex
_g_pCVar
_g_pD3DDevice
_g_pFullFileSystem
_g_pHardwareConfig
_g_pInputSystem
_g_pMaterialSystem
_g_pMaterialSystemDebugTextureInfo
_g_pMaterialSystemHardwareConfig
_g_pMemAlloc
_g_pNetworkSystem
_g_pProcessUtils
_g_pQueuedLoader
_g_pShaderAPI
_g_pShaderAPIDX8
_g_pShaderDevice
_g_pShaderDeviceDx8
_g_pShaderDeviceMgr
_g_pShaderDeviceMgrDx8
_g_pShaderManager
_g_pShaderShadow
_g_pShaderShadowDx8
_g_pShaderUtil
_g_pTransitionTable
_g_pUtlSortVectorQSortContext
_k_pszShaderCacheRootKey
_lineartolightmap
_lineartovertex
_lzma_persistent_buffer
_mat_autoload_glshaders
_mat_autosave_glshaders
_mat_debugalttab
_mat_depthbias_shadowmap
_mat_fastclip
_mat_frame_sync_enable
_mat_frame_sync_force_texture
_mat_hdr_level
_mat_slopescaledepthbias_shadowmap
_mat_texture_limit
_materials
_mdllib
_memcmp
_memcpy
_memmove
_memset_pattern16
_pfFastCos
_pfFastSinCos
_pfInvRSquared
_pfRSqrt
_pfRSqrtFast
_pfSqrt
_pfVectorNormalize
_pfVectorNormalizeFast
_pthread_mutex_destroy
_pthread_mutex_init
_pthread_mutex_lock
_pthread_mutex_unlock
_pthread_mutexattr_init
_pthread_mutexattr_settype
_qsort
_raise
_rsqrtf(float)
_s_NoEscConversion
_s_StringCharConversion
_s_bMathlibInitialized
_s_pIllegalMaterialPS
_s_pRenderFunctionTable
_s_pTextureFunctionTable
_sprintf
_sqrtf(float)
_sscanf
_strcasecmp
_strchr
_strcmp
_strlen
_strncat
_strncpy
_strtod$UNIX2003
_strtol
_strtoul
_swprintf
_toglGetClientRect
_vsnprintf
_wcslen
_wcstol
``@@@@@@
bad vertex size for material %s
ccs_create_convars_from_hwconfig
ccs_create_convars_from_hwconfig(CCommand const&)
ccs_create_convars_from_hwconfig_command
device id: 0x%x
display count of all shaders and reset that count
dxsupport
dxsupport_mac.cfg
dxsupport_override
dxsupport_override.cfg
dyld_stub_binder
dynamic
f05
f3
failed to create shader
failed to lock index buffer in CMeshDX8::LockIndexBuffer
failed to lock vertex buffer in CMeshDX8::LockVertexBuffer: nVertexCount=%d, nFirstVertex=%d
ffff.
fffff.
ffffff.
final config:
g_Alloc
g_CleanupSymbolTable
g_ClipVerts
g_D3DColorFormat
g_DX8LightCombinations
g_DeviceFormat
g_DeviceType
g_DisplayAdapter
g_ImageFormatInfo
g_KVMutex
g_LastVertexFormat
g_LastVertexIdx
g_Mathlib_GammaToLinear
g_Mathlib_LinearToGamma
g_MeshMgr
g_NumClipVerts
g_ShaderAPIDX8
g_ShaderDeviceMgrDx8
g_ShaderShadow
g_bSupportsD15S1
g_bSupportsD16
g_bSupportsD24S8
g_bSupportsD24X4S4
g_bSupportsD24X8
g_bUsingVertexID
g_nLastColorMeshVertOffsetInBytes
g_nLastVertOffsetInBytes
g_nLastVertStride
g_nScratchIndexBuffer
g_pLastColorMesh
g_pLastIndex
g_pLastIndexBuffer
g_pLastVertex
g_pLastVertexBuffer
g_pStaticLZMABuf
g_unStaticLZMABufRef
g_unStaticLZMABufSize
glbaseshaders_osx.cfg
glshadercachev002
glshaders.cfg
guard variable for CIndexBuffer::CIndexBuffer(IDirect3DDevice9*, int, bool, bool)::_counter
guard variable for CIndexBuffer::HandlePerFrameTextureStats(int)::_counter
guard variable for CIndexBuffer::~CIndexBuffer()::_counter
guard variable for CIndexBufferDx8::Allocate()::_counter
guard variable for CIndexBufferDx8::Free()::_counter
guard variable for CIndexBufferDx8::HandlePerFrameTextureStats(int)::_counter
guard variable for CMeshDX8::RenderPass()::_counter
guard variable for CShaderAPIDx8::ExportTextureList()::_counter
guard variable for CShaderAPIDx8::SetTextureState(Sampler_t, int, bool)::materialSystemConfig
guard variable for CTempMeshDX8::TestSelection()::transformedVert
guard variable for ComputeVertexDesc(unsigned char*, unsigned long long, VertexDesc_t&)::temp
http://support.steampowered.com/cgi-bin/steampowered.cfg/php/enduser/std_adp.php?p_faqid=150
http://support.steampowered.com/cgi-bin/steampowered.cfg/php/enduser/std_adp.php?p_faqid=772
int CUtlSortVector<CTransitionTable::ShadowStateDictEntry_t, CTransitionTable::ShadowStateDictLessFunc, CUtlVector<CTransitionTable::ShadowStateDictEntry_t, CUtlMemory<CTransitionTable::ShadowStateDictEntry_t, int> > >::FindLessOrEqual<CTransitionTable::ShadowStateDictEntry_t>(CTransitionTable::ShadowStateDictEntry_t const&, bool*) const
int CUtlSortVector<CTransitionTable::SnapshotDictEntry_t, CTransitionTable::SnapshotDictLessFunc, CUtlVector<CTransitionTable::SnapshotDictEntry_t, CUtlMemory<CTransitionTable::SnapshotDictEntry_t, int> > >::FindLessOrEqual<CTransitionTable::SnapshotDictEntry_t>(CTransitionTable::SnapshotDictEntry_t const&, bool*) const
int CUtlSortVector<CTransitionTable::TransitionList_t, CTransitionTable::UniqueSnapshotLessFunc, CUtlVector<CTransitionTable::TransitionList_t, CUtlMemory<CTransitionTable::TransitionList_t, int> > >::FindLessOrEqual<CTransitionTable::TransitionList_t>(CTransitionTable::TransitionList_t const&, bool*) const
l^_[]
lfffff.
lineartoscreen
lineartotexture
lzma_persistent_buffer
m_AlphaToCoverageDisableValue
m_AlphaToCoverageEnableValue
m_AlphaToCoverageState
m_CanDoSRGBReadFromRTs
m_FakeSRGBWrite
m_HDRType
m_HDRType: HDR_TYPE_FLOAT
m_HDRType: HDR_TYPE_INTEGER
m_HDRType: HDR_TYPE_NONE
m_HasProjectedBumpEnv
m_HasProjectedBumpEnv: %s
m_HasSetDeviceGammaRamp
m_HasSetDeviceGammaRamp: %s
m_MaxBlendMatrices
m_MaxBlendMatrices: %d
m_MaxBlendMatrixIndices
m_MaxBlendMatrixIndices: %d
m_MaxHDRType
m_MaxNumLights
m_MaxNumLights: %d
m_MaxPixelShader30InstructionSlots
m_MaxPrimitiveCount
m_MaxPrimitiveCount: %d
m_MaxSimultaneousRenderTargets
m_MaxSimultaneousRenderTargets: %d
m_MaxTextureAspectRatio
m_MaxTextureAspectRatio: %d
m_MaxTextureDepth
m_MaxTextureHeight
m_MaxTextureHeight: %d
m_MaxTextureWidth
m_MaxTextureWidth: %d
m_MaxUserClipPlanes
m_MaxUserClipPlanes: %d
m_MaxVertexShader30InstructionSlots
m_MaxVertexShaderBlendMatrices
m_MaxVertexShaderBlendMatrices: %d
m_NullTextureFormat
m_NumBooleanPixelShaderConstants
m_NumBooleanVertexShaderConstants
m_NumBooleanVertexShaderConstants: %d
m_NumIntegerPixelShaderConstants
m_NumIntegerVertexShaderConstants
m_NumIntegerVertexShaderConstants: %d
m_NumPixelShaderConstants
m_NumPixelShaderConstants: %d
m_NumSamplers: %d
m_NumTextureStages
m_NumTextureStages: %d
m_NumVertexShaderConstants
m_NumVertexShaderConstants: %d
m_PreferDynamicTextures
m_PreferDynamicTextures: %s
m_ShadowDepthTextureFormat
m_SupportsCompressedTextures: COMPRESSED_TEXTURES_NOT_INITIALIZED
m_SupportsCompressedTextures: COMPRESSED_TEXTURES_ON
m_SupportsCompressedVertices: %d
m_SupportsCubeMaps
m_SupportsCubeMaps: %s
m_SupportsHardwareLighting
m_SupportsHardwareLighting: %s
m_SupportsMipmappedCubemaps
m_SupportsMipmappedCubemaps: %s
m_SupportsMipmapping
m_SupportsMipmapping: %s
m_SupportsNonPow2Textures
m_SupportsNonPow2Textures: %s
m_SupportsOverbright
m_SupportsOverbright: %s
m_SupportsPixelShaders
m_SupportsPixelShaders (1.1): %s
m_SupportsPixelShaders_1_4
m_SupportsPixelShaders_1_4: %s
m_SupportsPixelShaders_2_0
m_SupportsPixelShaders_2_0: %s
m_SupportsPixelShaders_2_b
m_SupportsPixelShaders_2_b: %s
m_SupportsSRGB
m_SupportsSRGB: %s
m_SupportsShaderModel_3_0
m_SupportsShaderModel_3_0: %s
m_SupportsVertexShaders
m_SupportsVertexShaders (1.1): %s
m_SupportsVertexShaders_2_0
m_SupportsVertexShaders_2_0: %s
m_TextureMemorySize
m_TextureMemorySize: %d
m_UseFastClipping
m_UseFastClipping: %s
m_ZBiasAndSlopeScaledDepthBiasSupported
m_ZBiasAndSlopeScaledDepthBiasSupported: %s
m_bCanStretchRectFromTextures
m_bColorOnSecondStream
m_bColorOnSecondStream: %s
m_bDX10Blending
m_bDX10Card
m_bDeviceOk
m_bDisableShaderOptimizations
m_bDisableShaderOptimizations: %s
m_bFogColorAlwaysLinearSpace
m_bFogColorSpecifiedInLinearSpace
m_bNeedsATICentroidHack
m_bNeedsATICentroidHack: %s
m_bScissorSupported
m_bSoftwareVertexProcessing
m_bSupportsAlphaToCoverage
m_bSupportsAnisotropicFiltering
m_bSupportsAnisotropicFiltering: %s
m_bSupportsBorderColor
m_bSupportsFetch4
m_bSupportsFloat32RenderTargets
m_bSupportsGLMixedSizeTargets
m_bSupportsMagAnisotropicFiltering
m_bSupportsShadowDepthTextures
m_bSupportsSpheremapping
m_bSupportsSpheremapping: %s
m_bSupportsStaticControlFlow
m_bSupportsStreamOffset
m_bSupportsVertexTextures
m_flMaxGammaControlPoint
m_flMinGammaControlPoint
m_nDXSupportLevel: %d
m_nGammaControlPointCount
m_nMaxAnisotropy
m_nMaxAnisotropy: %d
m_nMaxVertexTextureDimension
m_nMaxViewports
m_nVertexTextureCount
m_pHardwareShaders was null
m_pShaderDLL
m_pShaderDLL: %s
mat_alphacoverage
mat_autoload_glshaders
mat_autosave_glshaders
mat_debugalttab
mat_debugalttab: CMeshMgr::ReleaseBuffers
mat_debugalttab: CMeshMgr::RestoreBuffers
mat_debugalttab: CShaderAPIDX8::AllocFrameSyncObjects
mat_debugalttab: CShaderAPIDX8::FreeFrameSyncObjects
mat_debugalttab: CShaderAPIDx8::AcquireInternalRenderTargets
mat_debugalttab: CShaderAPIDx8::EvictManagedResourcesInternal
mat_debugalttab: CShaderAPIDx8::ReleaseInternalRenderTargets
mat_depthbias_shadowmap
mat_disable_ps_patch
mat_disablehwmorph
mat_fastclip
mat_force_ps_patch
mat_forcedynamic
mat_frame_sync_enable
mat_frame_sync_force_texture
mat_hdr_level
mat_queue_mode
mat_remoteshadercompile
mat_shadercount
mat_shadercount(CCommand const&)
mat_shadercount_command
mat_slopescaledepthbias_shadowmap
mat_spewvertexandpixelshaders
mat_spewvertexandpixelshaders(CCommand const&)
mat_spewvertexandpixelshaders_command
mat_texture_limit
max megabytes
max megahertz
max megatexels
mem_dumpvballocs
min megabytes
min megahertz
min megatexels
nVertexShaderDynamicIndex or nPixelShaderDynamicIndex was negative
non-virtual thunk to CBaseMeshDX8::BeginCastBuffer(MaterialIndexFormat_t)
non-virtual thunk to CBaseMeshDX8::EndCastBuffer()
non-virtual thunk to CBaseMeshDX8::GetRoomRemaining() const
non-virtual thunk to CBaseMeshDX8::IndexFormat() const
non-virtual thunk to CBaseMeshDX8::Lock(int, bool, IndexDesc_t&)
non-virtual thunk to CBaseMeshDX8::ModifyBegin(bool, int, int, IndexDesc_t&)
non-virtual thunk to CBaseMeshDX8::ModifyEnd(IndexDesc_t&)
non-virtual thunk to CBaseMeshDX8::Spew(int, IndexDesc_t const&)
non-virtual thunk to CBaseMeshDX8::Unlock(int, IndexDesc_t&)
non-virtual thunk to CBaseMeshDX8::ValidateData(int, IndexDesc_t const&)
non-virtual thunk to CBufferedMeshDX8::BeginCastBuffer(MaterialIndexFormat_t)
non-virtual thunk to CBufferedMeshDX8::EndCastBuffer()
non-virtual thunk to CBufferedMeshDX8::GetRoomRemaining() const
non-virtual thunk to CBufferedMeshDX8::IndexCount() const
non-virtual thunk to CBufferedMeshDX8::IndexFormat() const
non-virtual thunk to CBufferedMeshDX8::IsDynamic() const
non-virtual thunk to CBufferedMeshDX8::~CBufferedMeshDX8()
non-virtual thunk to CDynamicMeshDX8::IndexCount() const
non-virtual thunk to CDynamicMeshDX8::IsDynamic() const
non-virtual thunk to CDynamicMeshDX8::~CDynamicMeshDX8()
non-virtual thunk to CEmptyConVar::GetName() const
non-virtual thunk to CEmptyConVar::IsFlagSet(int) const
non-virtual thunk to CEmptyConVar::SetValue(char const*)
non-virtual thunk to CEmptyConVar::SetValue(float)
non-virtual thunk to CEmptyConVar::SetValue(int)
non-virtual thunk to CFunctor1<void (*)(IDirect3DBaseTexture9*), IDirect3DBaseTexture9*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >::~CFunctor1()
non-virtual thunk to CMeshBase::~CMeshBase()
non-virtual thunk to CMeshDX8::IndexCount() const
non-virtual thunk to CMeshDX8::IsDynamic() const
non-virtual thunk to CMeshDX8::Unlock(int, IndexDesc_t&)
non-virtual thunk to CMeshDX8::~CMeshDX8()
non-virtual thunk to CShaderAPIDx8::AcquireThreadOwnership()
non-virtual thunk to CShaderAPIDx8::AdvancePIXFrame()
non-virtual thunk to CShaderAPIDx8::ApplyAlphaToCoverage(bool)
non-virtual thunk to CShaderAPIDx8::ApplyCullEnable(bool)
non-virtual thunk to CShaderAPIDx8::ApplyFogMode(ShaderFogMode_t, bool, bool)
non-virtual thunk to CShaderAPIDx8::ApplyTextureEnable(ShadowState_t const&, int)
non-virtual thunk to CShaderAPIDx8::ApplyZBias(ShadowState_t const&)
non-virtual thunk to CShaderAPIDx8::BeginFrame()
non-virtual thunk to CShaderAPIDx8::BeginOcclusionQueryDrawing(ShaderAPIOcclusionQuery_t__*)
non-virtual thunk to CShaderAPIDx8::BeginPIXEvent(unsigned long, char const*)
non-virtual thunk to CShaderAPIDx8::BeginPass(short)
non-virtual thunk to CShaderAPIDx8::Bind(IMaterial*)
non-virtual thunk to CShaderAPIDx8::BindGeometryShader(GeometryShaderHandle_t__*)
non-virtual thunk to CShaderAPIDx8::BindIndexBuffer(IIndexBuffer*, int)
non-virtual thunk to CShaderAPIDx8::BindPixelShader(PixelShaderHandle_t__*)
non-virtual thunk to CShaderAPIDx8::BindStandardTexture(Sampler_t, StandardTextureId_t)
non-virtual thunk to CShaderAPIDx8::BindStandardVertexTexture(VertexTextureSampler_t, StandardTextureId_t)
non-virtual thunk to CShaderAPIDx8::BindTexture(Sampler_t, int)
non-virtual thunk to CShaderAPIDx8::BindVertexBuffer(int, IVertexBuffer*, int, int, int, unsigned long long, int)
non-virtual thunk to CShaderAPIDx8::BindVertexShader(VertexShaderHandle_t__*)
non-virtual thunk to CShaderAPIDx8::BindVertexTexture(VertexTextureSampler_t, int)
non-virtual thunk to CShaderAPIDx8::CanDownloadTextures() const
non-virtual thunk to CShaderAPIDx8::ChangeVideoMode(ShaderDeviceInfo_t const&)
non-virtual thunk to CShaderAPIDx8::ClearBuffers(bool, bool, bool, int, int)
non-virtual thunk to CShaderAPIDx8::ClearBuffersObeyStencil(bool, bool)
non-virtual thunk to CShaderAPIDx8::ClearBuffersObeyStencilEx(bool, bool, bool)
non-virtual thunk to CShaderAPIDx8::ClearColor3ub(unsigned char, unsigned char, unsigned char)
non-virtual thunk to CShaderAPIDx8::ClearColor4ub(unsigned char, unsigned char, unsigned char, unsigned char)
non-virtual thunk to CShaderAPIDx8::ClearSelectionNames()
non-virtual thunk to CShaderAPIDx8::ClearSnapshots()
non-virtual thunk to CShaderAPIDx8::ClearStencilBufferRectangle(int, int, int, int, int)
non-virtual thunk to CShaderAPIDx8::ClearVertexAndPixelShaderRefCounts()
non-virtual thunk to CShaderAPIDx8::Color3f(float, float, float)
non-virtual thunk to CShaderAPIDx8::Color3fv(float const*)
non-virtual thunk to CShaderAPIDx8::Color3ub(unsigned char, unsigned char, unsigned char)
non-virtual thunk to CShaderAPIDx8::Color3ubv(unsigned char const*)
non-virtual thunk to CShaderAPIDx8::Color4f(float, float, float, float)
non-virtual thunk to CShaderAPIDx8::Color4fv(float const*)
non-virtual thunk to CShaderAPIDx8::Color4ub(unsigned char, unsigned char, unsigned char, unsigned char)
non-virtual thunk to CShaderAPIDx8::Color4ubv(unsigned char const*)
non-virtual thunk to CShaderAPIDx8::CommitPixelShaderLighting(int)
non-virtual thunk to CShaderAPIDx8::CompareSnapshots(short, short)
non-virtual thunk to CShaderAPIDx8::ComputeFillRate()
non-virtual thunk to CShaderAPIDx8::ComputeMorphFormat(int, short*) const
non-virtual thunk to CShaderAPIDx8::ComputeVertexDescription(unsigned char*, unsigned long long, MeshDesc_t&) const
non-virtual thunk to CShaderAPIDx8::ComputeVertexFormat(int, short*) const
non-virtual thunk to CShaderAPIDx8::ComputeVertexUsage(int, short*) const
non-virtual thunk to CShaderAPIDx8::CopyRenderTargetToScratchTexture(int, int, Rect_t*, Rect_t*)
non-virtual thunk to CShaderAPIDx8::CopyRenderTargetToTexture(int)
non-virtual thunk to CShaderAPIDx8::CopyRenderTargetToTextureEx(int, int, Rect_t*, Rect_t*)
non-virtual thunk to CShaderAPIDx8::CopyTextureToRenderTargetEx(int, int, Rect_t*, Rect_t*)
non-virtual thunk to CShaderAPIDx8::CopyTextureToTexture(int, int)
non-virtual thunk to CShaderAPIDx8::CreateDepthTexture(ImageFormat, int, int, char const*, bool)
non-virtual thunk to CShaderAPIDx8::CreateOcclusionQueryObject()
non-virtual thunk to CShaderAPIDx8::CreateTexture(int, int, int, ImageFormat, int, int, int, char const*, char const*)
non-virtual thunk to CShaderAPIDx8::CreateTextures(int*, int, int, int, int, ImageFormat, int, int, int, char const*, char const*)
non-virtual thunk to CShaderAPIDx8::CullMode(MaterialCullMode_t)
non-virtual thunk to CShaderAPIDx8::CurrentTime() const
non-virtual thunk to CShaderAPIDx8::DXSupportLevelChanged()
non-virtual thunk to CShaderAPIDx8::DeleteTexture(int)
non-virtual thunk to CShaderAPIDx8::DestroyOcclusionQueryObject(ShaderAPIOcclusionQuery_t__*)
non-virtual thunk to CShaderAPIDx8::DestroyVertexBuffers(bool)
non-virtual thunk to CShaderAPIDx8::DisableAllLocalLights()
non-virtual thunk to CShaderAPIDx8::DisableAlphaToCoverage()
non-virtual thunk to CShaderAPIDx8::DisableTextureTransform(TextureStage_t)
non-virtual thunk to CShaderAPIDx8::DoRenderTargetsNeedSeparateDepthBuffer() const
non-virtual thunk to CShaderAPIDx8::Draw(MaterialPrimitiveType_t, int, int)
non-virtual thunk to CShaderAPIDx8::DrawMesh(CMeshBase*)
non-virtual thunk to CShaderAPIDx8::DrawWithVertexAndIndexBuffers()
non-virtual thunk to CShaderAPIDx8::EnableAlphaToCoverage()
non-virtual thunk to CShaderAPIDx8::EnableBuffer2FramesAhead(bool)
non-virtual thunk to CShaderAPIDx8::EnableClipPlane(int, bool)
non-virtual thunk to CShaderAPIDx8::EnableDebugTextureList(bool)
non-virtual thunk to CShaderAPIDx8::EnableFastClip(bool)
non-virtual thunk to CShaderAPIDx8::EnableGetAllTextures(bool)
non-virtual thunk to CShaderAPIDx8::EnableHWMorphing(bool)
non-virtual thunk to CShaderAPIDx8::EnableLinearColorSpaceFrameBuffer(bool)
non-virtual thunk to CShaderAPIDx8::EnableShaderShaderMutex(bool)
non-virtual thunk to CShaderAPIDx8::EnableUserClipTransformOverride(bool)
non-virtual thunk to CShaderAPIDx8::EnabledSRGBWrite(bool)
non-virtual thunk to CShaderAPIDx8::EndFrame()
non-virtual thunk to CShaderAPIDx8::EndOcclusionQueryDrawing(ShaderAPIOcclusionQuery_t__*)
non-virtual thunk to CShaderAPIDx8::EndPIXEvent()
non-virtual thunk to CShaderAPIDx8::EvictManagedResources()
non-virtual thunk to CShaderAPIDx8::ExecuteCommandBuffer(unsigned char*)
non-virtual thunk to CShaderAPIDx8::FlushBufferedPrimitives()
non-virtual thunk to CShaderAPIDx8::FlushHardware()
non-virtual thunk to CShaderAPIDx8::FogEnd(float)
non-virtual thunk to CShaderAPIDx8::FogMaxDensity(float)
non-virtual thunk to CShaderAPIDx8::FogMode(MaterialFogMode_t)
non-virtual thunk to CShaderAPIDx8::FogStart(float)
non-virtual thunk to CShaderAPIDx8::ForceDepthFuncEquals(bool)
non-virtual thunk to CShaderAPIDx8::ForceHardwareSync()
non-virtual thunk to CShaderAPIDx8::GammaToLinear_HardwareSpecific(float) const
non-virtual thunk to CShaderAPIDx8::GetActualSamplerCount() const
non-virtual thunk to CShaderAPIDx8::GetActualTextureStageCount() const
non-virtual thunk to CShaderAPIDx8::GetAmbientLightCubeLuminance()
non-virtual thunk to CShaderAPIDx8::GetBackBufferDimensions(int&, int&) const
non-virtual thunk to CShaderAPIDx8::GetBoundMaterial()
non-virtual thunk to CShaderAPIDx8::GetBoundMorphFormat()
non-virtual thunk to CShaderAPIDx8::GetBufferedState(BufferedState_t&)
non-virtual thunk to CShaderAPIDx8::GetCullMode() const
non-virtual thunk to CShaderAPIDx8::GetCurrentDynamicVBSize()
non-virtual thunk to CShaderAPIDx8::GetCurrentFogType() const
non-virtual thunk to CShaderAPIDx8::GetCurrentFrameCounter() const
non-virtual thunk to CShaderAPIDx8::GetCurrentLightCombo() const
non-virtual thunk to CShaderAPIDx8::GetCurrentNumBones() const
non-virtual thunk to CShaderAPIDx8::GetD3DTexture(int)
non-virtual thunk to CShaderAPIDx8::GetDX9LightState(LightState_t*) const
non-virtual thunk to CShaderAPIDx8::GetDXLevelDefaults(unsigned int&, unsigned int&)
non-virtual thunk to CShaderAPIDx8::GetDebugTextureList()
non-virtual thunk to CShaderAPIDx8::GetDynamicMesh(IMaterial*, int, bool, IMesh*, IMesh*)
non-virtual thunk to CShaderAPIDx8::GetDynamicMeshEx(IMaterial*, unsigned long long, int, bool, IMesh*, IMesh*)
non-virtual thunk to CShaderAPIDx8::GetFlashlightState(VMatrix&) const
non-virtual thunk to CShaderAPIDx8::GetFlashlightStateEx(VMatrix&, ITexture**) const
non-virtual thunk to CShaderAPIDx8::GetFlexMesh()
non-virtual thunk to CShaderAPIDx8::GetFloatRenderingParameter(int) const
non-virtual thunk to CShaderAPIDx8::GetFogDistances(float*, float*, float*)
non-virtual thunk to CShaderAPIDx8::GetIntRenderingParameter(int) const
non-virtual thunk to CShaderAPIDx8::GetLight(int) const
non-virtual thunk to CShaderAPIDx8::GetLightMapScaleFactor() const
non-virtual thunk to CShaderAPIDx8::GetLightmapDimensions(int*, int*)
non-virtual thunk to CShaderAPIDx8::GetMatrix(MaterialMatrixMode_t, float*)
non-virtual thunk to CShaderAPIDx8::GetMaxIndicesToRender()
non-virtual thunk to CShaderAPIDx8::GetMaxLights() const
non-virtual thunk to CShaderAPIDx8::GetMaxToRender(IMesh*, bool, int*, int*)
non-virtual thunk to CShaderAPIDx8::GetMaxVerticesToRender(IMaterial*)
non-virtual thunk to CShaderAPIDx8::GetNearestRenderTargetFormat(ImageFormat) const
non-virtual thunk to CShaderAPIDx8::GetNearestSupportedFormat(ImageFormat, bool) const
non-virtual thunk to CShaderAPIDx8::GetNullTextureFormat()
non-virtual thunk to CShaderAPIDx8::GetNumActiveDeformations() const
non-virtual thunk to CShaderAPIDx8::GetPackedDeformationInformation(int, float*, int, int, int*) const
non-virtual thunk to CShaderAPIDx8::GetPixelFogCombo()
non-virtual thunk to CShaderAPIDx8::GetRenderTargetEx(int)
non-virtual thunk to CShaderAPIDx8::GetSceneFogColor(unsigned char*)
non-virtual thunk to CShaderAPIDx8::GetSceneFogMode()
non-virtual thunk to CShaderAPIDx8::GetShadowDepthTextureFormat()
non-virtual thunk to CShaderAPIDx8::GetStandardTextureDimensions(int*, int*, StandardTextureId_t)
non-virtual thunk to CShaderAPIDx8::GetTextureMemoryUsed(IDebugTextureInfo::TextureMemoryType)
non-virtual thunk to CShaderAPIDx8::GetToneMappingScaleLinear() const
non-virtual thunk to CShaderAPIDx8::GetVectorRenderingParameter(int) const
non-virtual thunk to CShaderAPIDx8::GetVertexModifyBuilder()
non-virtual thunk to CShaderAPIDx8::GetViewports(ShaderViewport_t*, int) const
non-virtual thunk to CShaderAPIDx8::GetWorldSpaceCameraPosition(float*) const
non-virtual thunk to CShaderAPIDx8::HandleDeviceLost()
non-virtual thunk to CShaderAPIDx8::InEditorMode() const
non-virtual thunk to CShaderAPIDx8::InFlashlightMode() const
non-virtual thunk to CShaderAPIDx8::InvalidateDelayedShaderConstants()
non-virtual thunk to CShaderAPIDx8::IsAlphaTested(short) const
non-virtual thunk to CShaderAPIDx8::IsDebugTextureListFresh(int)
non-virtual thunk to CShaderAPIDx8::IsDepthWriteEnabled(short) const
non-virtual thunk to CShaderAPIDx8::IsHWMorphingEnabled() const
non-virtual thunk to CShaderAPIDx8::IsInSelectionMode() const
non-virtual thunk to CShaderAPIDx8::IsRenderingMesh() const
non-virtual thunk to CShaderAPIDx8::IsTexture(int)
non-virtual thunk to CShaderAPIDx8::IsTextureResident(int)
non-virtual thunk to CShaderAPIDx8::IsTranslucent(short) const
non-virtual thunk to CShaderAPIDx8::Knob(char*, float*)
non-virtual thunk to CShaderAPIDx8::LinearToGamma_HardwareSpecific(float) const
non-virtual thunk to CShaderAPIDx8::LoadBoneMatrix(int, float const*)
non-virtual thunk to CShaderAPIDx8::LoadCameraToWorld()
non-virtual thunk to CShaderAPIDx8::LoadIdentity()
non-virtual thunk to CShaderAPIDx8::LoadMatrix(float*)
non-virtual thunk to CShaderAPIDx8::LoadSelectionName(int)
non-virtual thunk to CShaderAPIDx8::LockRect(void**, int*, int, int, int, int, int, int, bool, bool)
non-virtual thunk to CShaderAPIDx8::MarkUnusedVertexFields(unsigned int, int, bool*)
non-virtual thunk to CShaderAPIDx8::MatrixMode(MaterialMatrixMode_t)
non-virtual thunk to CShaderAPIDx8::ModifyTexture(int)
non-virtual thunk to CShaderAPIDx8::ModifyVertexData()
non-virtual thunk to CShaderAPIDx8::MultMatrix(float*)
non-virtual thunk to CShaderAPIDx8::MultMatrixLocal(float*)
non-virtual thunk to CShaderAPIDx8::OcclusionQuery_GetNumPixelsRendered(ShaderAPIOcclusionQuery_t__*, bool)
non-virtual thunk to CShaderAPIDx8::OnDeviceInit()
non-virtual thunk to CShaderAPIDx8::OnDeviceShutdown()
non-virtual thunk to CShaderAPIDx8::Ortho(double, double, double, double, double, double)
non-virtual thunk to CShaderAPIDx8::OverrideAlphaWriteEnable(bool, bool)
non-virtual thunk to CShaderAPIDx8::OverrideColorWriteEnable(bool, bool)
non-virtual thunk to CShaderAPIDx8::OverrideDepthEnable(bool, bool)
non-virtual thunk to CShaderAPIDx8::OwnGPUResources(bool)
non-virtual thunk to CShaderAPIDx8::PerformFullScreenStencilOperation()
non-virtual thunk to CShaderAPIDx8::PerspectiveOffCenterX(double, double, double, double, double, double, double, double)
non-virtual thunk to CShaderAPIDx8::PerspectiveX(double, double, double, double)
non-virtual thunk to CShaderAPIDx8::PickMatrix(int, int, int, int)
non-virtual thunk to CShaderAPIDx8::PopDeformation()
non-virtual thunk to CShaderAPIDx8::PopMatrix()
non-virtual thunk to CShaderAPIDx8::PopSelectionName()
non-virtual thunk to CShaderAPIDx8::Printf(char const*, ...)
non-virtual thunk to CShaderAPIDx8::PrintfVA(char*, char*)
non-virtual thunk to CShaderAPIDx8::PurgeUnusedVertexAndPixelShaders()
non-virtual thunk to CShaderAPIDx8::PushDeformation(DeformationBase_t const*)
non-virtual thunk to CShaderAPIDx8::PushMatrix()
non-virtual thunk to CShaderAPIDx8::PushSelectionName(int)
non-virtual thunk to CShaderAPIDx8::QueueResetRenderState()
non-virtual thunk to CShaderAPIDx8::ReadPixels(Rect_t*, Rect_t*, unsigned char*, ImageFormat, int)
non-virtual thunk to CShaderAPIDx8::ReadPixels(int, int, int, int, unsigned char*, ImageFormat)
non-virtual thunk to CShaderAPIDx8::RegisterSelectionHit(float, float)
non-virtual thunk to CShaderAPIDx8::ReleaseShaderObjects()
non-virtual thunk to CShaderAPIDx8::ReleaseThreadOwnership()
non-virtual thunk to CShaderAPIDx8::RenderPass(int, int)
non-virtual thunk to CShaderAPIDx8::ResetRenderState(bool)
non-virtual thunk to CShaderAPIDx8::RestoreShaderObjects()
non-virtual thunk to CShaderAPIDx8::Rotate(float, float, float, float)
non-virtual thunk to CShaderAPIDx8::Scale(float, float, float)
non-virtual thunk to CShaderAPIDx8::ScaleXY(float, float)
non-virtual thunk to CShaderAPIDx8::SceneFogColor3ub(unsigned char, unsigned char, unsigned char)
non-virtual thunk to CShaderAPIDx8::SceneFogMode(MaterialFogMode_t)
non-virtual thunk to CShaderAPIDx8::SelectionBuffer(unsigned int*, int)
non-virtual thunk to CShaderAPIDx8::SelectionMode(bool)
non-virtual thunk to CShaderAPIDx8::SetAmbientLight(float, float, float)
non-virtual thunk to CShaderAPIDx8::SetAmbientLightCube(Vector4D*)
non-virtual thunk to CShaderAPIDx8::SetAnisotropicLevel(int)
non-virtual thunk to CShaderAPIDx8::SetBooleanPixelShaderConstant(int, int const*, int, bool)
non-virtual thunk to CShaderAPIDx8::SetBooleanVertexShaderConstant(int, int const*, int, bool)
non-virtual thunk to CShaderAPIDx8::SetBumpEnvMatrix(TextureStage_t, float, float, float, float)
non-virtual thunk to CShaderAPIDx8::SetClipPlane(int, float const*)
non-virtual thunk to CShaderAPIDx8::SetDebugTextureRendering(bool)
non-virtual thunk to CShaderAPIDx8::SetDefaultState()
non-virtual thunk to CShaderAPIDx8::SetDepthFeatheringPixelShaderConstant(int, float)
non-virtual thunk to CShaderAPIDx8::SetDisallowAccess(bool)
non-virtual thunk to CShaderAPIDx8::SetFastClipPlane(float const*)
non-virtual thunk to CShaderAPIDx8::SetFlashlightState(FlashlightState_t const&, VMatrix const&)
non-virtual thunk to CShaderAPIDx8::SetFlashlightStateEx(FlashlightState_t const&, VMatrix const&, ITexture*)
non-virtual thunk to CShaderAPIDx8::SetFlexWeights(int, int, MorphWeight_t const*)
non-virtual thunk to CShaderAPIDx8::SetFloatRenderingParameter(int, float)
non-virtual thunk to CShaderAPIDx8::SetFogZ(float)
non-virtual thunk to CShaderAPIDx8::SetFullScreenTextureHandle(int)
non-virtual thunk to CShaderAPIDx8::SetHeightClipMode(MaterialHeightClipMode_t)
non-virtual thunk to CShaderAPIDx8::SetHeightClipZ(float)
non-virtual thunk to CShaderAPIDx8::SetIntRenderingParameter(int, int)
non-virtual thunk to CShaderAPIDx8::SetIntegerPixelShaderConstant(int, int const*, int, bool)
non-virtual thunk to CShaderAPIDx8::SetIntegerVertexShaderConstant(int, int const*, int, bool)
non-virtual thunk to CShaderAPIDx8::SetLight(int, LightDesc_t const&)
non-virtual thunk to CShaderAPIDx8::SetLightingOrigin(Vector)
non-virtual thunk to CShaderAPIDx8::SetLinearToGammaConversionTextures(int, int)
non-virtual thunk to CShaderAPIDx8::SetMode(void*, int, ShaderDeviceInfo_t const&)
non-virtual thunk to CShaderAPIDx8::SetNumBoneWeights(int)
non-virtual thunk to CShaderAPIDx8::SetPIXMarker(unsigned long, char const*)
non-virtual thunk to CShaderAPIDx8::SetPSNearAndFarZ(int)
non-virtual thunk to CShaderAPIDx8::SetPixelShaderConstant(int, float const*, int, bool)
non-virtual thunk to CShaderAPIDx8::SetPixelShaderFogParams(int)
non-virtual thunk to CShaderAPIDx8::SetPixelShaderIndex(int)
non-virtual thunk to CShaderAPIDx8::SetPixelShaderStateAmbientLightCube(int, bool)
non-virtual thunk to CShaderAPIDx8::SetRasterState(ShaderRasterState_t const&)
non-virtual thunk to CShaderAPIDx8::SetRenderTarget(int, int)
non-virtual thunk to CShaderAPIDx8::SetRenderTargetEx(int, int, int)
non-virtual thunk to CShaderAPIDx8::SetScissorRect(int, int, int, int, bool)
non-virtual thunk to CShaderAPIDx8::SetShadowDepthBiasFactors(float, float)
non-virtual thunk to CShaderAPIDx8::SetSkinningMatrices()
non-virtual thunk to CShaderAPIDx8::SetStandardTextureHandle(StandardTextureId_t, int)
non-virtual thunk to CShaderAPIDx8::SetStandardVertexShaderConstants(float)
non-virtual thunk to CShaderAPIDx8::SetStencilCompareFunction(StencilComparisonFunction_t)
non-virtual thunk to CShaderAPIDx8::SetStencilEnable(bool)
non-virtual thunk to CShaderAPIDx8::SetStencilFailOperation(StencilOperation_t)
non-virtual thunk to CShaderAPIDx8::SetStencilPassOperation(StencilOperation_t)
non-virtual thunk to CShaderAPIDx8::SetStencilReferenceValue(int)
non-virtual thunk to CShaderAPIDx8::SetStencilTestMask(unsigned int)
non-virtual thunk to CShaderAPIDx8::SetStencilWriteMask(unsigned int)
non-virtual thunk to CShaderAPIDx8::SetStencilZFailOperation(StencilOperation_t)
non-virtual thunk to CShaderAPIDx8::SetTextureTransformDimension(TextureStage_t, int, bool)
non-virtual thunk to CShaderAPIDx8::SetToneMappingScaleLinear(Vector const&)
non-virtual thunk to CShaderAPIDx8::SetVectorRenderingParameter(int, Vector const&)
non-virtual thunk to CShaderAPIDx8::SetVertexBlendState(int)
non-virtual thunk to CShaderAPIDx8::SetVertexShaderConstant(int, float const*, int, bool)
non-virtual thunk to CShaderAPIDx8::SetVertexShaderIndex(int)
non-virtual thunk to CShaderAPIDx8::SetVertexShaderStateAmbientLightCube()
non-virtual thunk to CShaderAPIDx8::SetViewports(int, ShaderViewport_t const*)
non-virtual thunk to CShaderAPIDx8::SetupSelectionModeVisualizationState()
non-virtual thunk to CShaderAPIDx8::ShadeMode(ShaderShadeMode_t)
non-virtual thunk to CShaderAPIDx8::ShaderLock()
non-virtual thunk to CShaderAPIDx8::ShaderUnlock()
non-virtual thunk to CShaderAPIDx8::ShouldWriteDepthToDestAlpha() const
non-virtual thunk to CShaderAPIDx8::SupportsCSAAMode(int, int)
non-virtual thunk to CShaderAPIDx8::SupportsFetch4()
non-virtual thunk to CShaderAPIDx8::SupportsMSAAMode(int)
non-virtual thunk to CShaderAPIDx8::SupportsShadowDepthTextures()
non-virtual thunk to CShaderAPIDx8::SyncToken(char const*)
non-virtual thunk to CShaderAPIDx8::TakeSnapshot()
non-virtual thunk to CShaderAPIDx8::TexImage2D(int, int, ImageFormat, int, int, int, ImageFormat, bool, void*)
non-virtual thunk to CShaderAPIDx8::TexImageFromVTF(IVTFTexture*, int)
non-virtual thunk to CShaderAPIDx8::TexLock(int, int, int, int, int, int, CPixelWriter&)
non-virtual thunk to CShaderAPIDx8::TexLodBias(float)
non-virtual thunk to CShaderAPIDx8::TexLodClamp(int)
non-virtual thunk to CShaderAPIDx8::TexMagFilter(ShaderTexFilterMode_t)
non-virtual thunk to CShaderAPIDx8::TexMinFilter(ShaderTexFilterMode_t)
non-virtual thunk to CShaderAPIDx8::TexSetPriority(int)
non-virtual thunk to CShaderAPIDx8::TexSubImage2D(int, int, int, int, int, int, int, ImageFormat, int, bool, void*)
non-virtual thunk to CShaderAPIDx8::TexUnlock()
non-virtual thunk to CShaderAPIDx8::TexWrap(ShaderTexCoordComponent_t, ShaderTexWrapMode_t)
non-virtual thunk to CShaderAPIDx8::Translate(float, float, float)
non-virtual thunk to CShaderAPIDx8::UnlockRect(int, int)
non-virtual thunk to CShaderAPIDx8::UserClipTransform(VMatrix const&)
non-virtual thunk to CShaderAPIDx8::UsesVertexAndPixelShaders(short) const
non-virtual thunk to CShaderAPIDx8::UsingSoftwareVertexProcessing() const
non-virtual thunk to CShaderAPIDx8::~CShaderAPIDx8()
non-virtual thunk to CTempMeshDX8::IndexCount() const
non-virtual thunk to CTempMeshDX8::IsDynamic() const
non-virtual thunk to CTempMeshDX8::~CTempMeshDX8()
non-virtual thunk to ConVar::GetName() const
non-virtual thunk to ConVar::IsFlagSet(int) const
non-virtual thunk to ConVar::SetValue(char const*)
non-virtual thunk to ConVar::SetValue(float)
non-virtual thunk to ConVar::SetValue(int)
numPrimitives
offffff.
operator delete(void*)
operator delete[](void*)
operator new(unsigned long)
operator new[](unsigned long)
p4RHRD`
p@@@`
pVidMemKeyValues
p`@@@`
pixel
pp0000  
ppppPP``00@@    ``0@0@
ps-file %s ps-index %d
ps_dynamic
ps_static
psh 0x%8.8x: static combo:%9d dynamic combos:%6d refcount:%4d "%s"
pulCRCTable
r_pix_recordframes
r_pix_start
r_pixelfog
r_shader_srgb
render/DrawIndexedPrimitive
render/numPrimitives
s_DefaultAccessor
s_EmptyConVar
s_HardwareConfig
s_LastFileLoadingFrom
s_LockedRect
s_LockedSrcRect
s_NumPixelShadersCreated
s_NumVertexShadersCreated
s_ShaderManager
s_TempFactory
s_TextureCount
s_VertexDeclDict
s_bConnected
s_bMMXEnabled
s_bRegistered
s_bSSE2Enabled
s_bSSEEnabled
s_nCVarFlag
s_nDLLIdentifier
s_pConversionArrays_NoEscConversion
s_pConversionArrays_StringCharConversion
s_pTokenBuf
shaders\%s\%s.vcs
shaders\fxc\%s.vcs
std::terminate()
t+ff.
t@ffff.
tF9@`u
tQ9@`u
t\ff.
texturetolinear
too many indices for index buffer. . tell a programmer (%d>%d)
typeinfo for CBaseMeshDX8
typeinfo for CBufferedMeshDX8
typeinfo for CDefaultAccessor
typeinfo for CDynamicMeshDX8
typeinfo for CEmptyConVar
typeinfo for CFunctor
typeinfo for CFunctor1<void (*)(IDirect3DBaseTexture9*), IDirect3DBaseTexture9*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
typeinfo for CHardwareConfig
typeinfo for CIndexBufferBase
typeinfo for CIndexBufferDx8
typeinfo for CMeshBase
typeinfo for CMeshDX8
typeinfo for CMeshMgr
typeinfo for CRefCountServiceBase<true, CRefMT>
typeinfo for CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >
typeinfo for CShaderAPIBase
typeinfo for CShaderAPIConVarAccessor
typeinfo for CShaderAPIDx8
typeinfo for CShaderBuffer<ID3DXBuffer>
typeinfo for CShaderDeviceBase
typeinfo for CShaderDeviceDx8
typeinfo for CShaderDeviceMgrBase
typeinfo for CShaderDeviceMgrDx8
typeinfo for CShaderManager
typeinfo for CShaderShadowDX8
typeinfo for CTempMeshDX8
typeinfo for CTransitionTable
typeinfo for CUtlCStringConversion
typeinfo for CUtlCharConversion
typeinfo for CUtlNoEscConversion
typeinfo for CVBAllocTracker
typeinfo for CVertexBufferBase
typeinfo for CVertexBufferDx8
typeinfo for ConCommand
typeinfo for ConCommandBase
typeinfo for ConVar
typeinfo for IAppSystem
typeinfo for IConCommandBaseAccessor
typeinfo for IConVar
typeinfo for IDebugTextureInfo
typeinfo for IHardwareConfigInternal
typeinfo for IIndexBuffer
typeinfo for IMaterialSystemHardwareConfig
typeinfo for IMesh
typeinfo for IMeshMgr
typeinfo for IRefCounted
typeinfo for IShaderAPI
typeinfo for IShaderAPIDX8
typeinfo for IShaderBuffer
typeinfo for IShaderDevice
typeinfo for IShaderDeviceMgr
typeinfo for IShaderDynamicAPI
typeinfo for IShaderManager
typeinfo for IShaderShadow
typeinfo for IShaderShadowDX8
typeinfo for IVBAllocTracker
typeinfo for IVertexBuffer
typeinfo for std::bad_alloc
typeinfo name for CBaseMeshDX8
typeinfo name for CBufferedMeshDX8
typeinfo name for CDefaultAccessor
typeinfo name for CDynamicMeshDX8
typeinfo name for CEmptyConVar
typeinfo name for CFunctor
typeinfo name for CFunctor1<void (*)(IDirect3DBaseTexture9*), IDirect3DBaseTexture9*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
typeinfo name for CHardwareConfig
typeinfo name for CIndexBufferBase
typeinfo name for CIndexBufferDx8
typeinfo name for CMeshBase
typeinfo name for CMeshDX8
typeinfo name for CMeshMgr
typeinfo name for CRefCountServiceBase<true, CRefMT>
typeinfo name for CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> >
typeinfo name for CShaderAPIBase
typeinfo name for CShaderAPIConVarAccessor
typeinfo name for CShaderAPIDx8
typeinfo name for CShaderBuffer<ID3DXBuffer>
typeinfo name for CShaderDeviceBase
typeinfo name for CShaderDeviceDx8
typeinfo name for CShaderDeviceMgrBase
typeinfo name for CShaderDeviceMgrDx8
typeinfo name for CShaderManager
typeinfo name for CShaderShadowDX8
typeinfo name for CTempMeshDX8
typeinfo name for CTransitionTable
typeinfo name for CUtlCStringConversion
typeinfo name for CUtlCharConversion
typeinfo name for CUtlNoEscConversion
typeinfo name for CVBAllocTracker
typeinfo name for CVertexBufferBase
typeinfo name for CVertexBufferDx8
typeinfo name for ConCommand
typeinfo name for ConCommandBase
typeinfo name for ConVar
typeinfo name for IAppSystem
typeinfo name for IConCommandBaseAccessor
typeinfo name for IConVar
typeinfo name for IDebugTextureInfo
typeinfo name for IHardwareConfigInternal
typeinfo name for IIndexBuffer
typeinfo name for IMaterialSystemHardwareConfig
typeinfo name for IMesh
typeinfo name for IMeshMgr
typeinfo name for IRefCounted
typeinfo name for IShaderAPI
typeinfo name for IShaderAPIDX8
typeinfo name for IShaderBuffer
typeinfo name for IShaderDevice
typeinfo name for IShaderDeviceMgr
typeinfo name for IShaderDynamicAPI
typeinfo name for IShaderManager
typeinfo name for IShaderShadow
typeinfo name for IShaderShadowDX8
typeinfo name for IVBAllocTracker
typeinfo name for IVertexBuffer
unknown
unspecified
vec2_invalid
vec2_origin
vec4_invalid
vec4_origin
vendor id: 0x%x
vertex
void SafeAssign<CIndexBuffer>(CIndexBuffer**, CIndexBuffer*)
void SafeRelease<CIndexBuffer>(CIndexBuffer**)
void ccs_create_convar_from_hwconfig<HDRType_t>(HDRType_t const&, char const*)
void ccs_create_convar_from_hwconfig<ImageFormat>(ImageFormat const&, char const*)
void ccs_create_convar_from_hwconfig<bool>(bool const&, char const*)
void ccs_create_convar_from_hwconfig<float>(float const&, char const*)
void ccs_create_convar_from_hwconfig<int>(int const&, char const*)
void ccs_create_convar_from_hwconfig<unsigned long>(unsigned long const&, char const*)
vs-file %s vs-index %d
vs_dynamic
vs_static
vsh 0x%8.8x: static combo:%9d dynamic combos:%6d refcount:%4d "%s"
vtable for CBufferedMeshDX8
vtable for CDefaultAccessor
vtable for CDynamicMeshDX8
vtable for CEmptyConVar
vtable for CFunctor1<void (*)(IDirect3DBaseTexture9*), IDirect3DBaseTexture9*, CRefCounted1<CFunctor, CRefCountServiceBase<true, CRefMT> > >
vtable for CHardwareConfig
vtable for CIndexBufferBase
vtable for CIndexBufferDx8
vtable for CMeshBase
vtable for CMeshDX8
vtable for CMeshMgr
vtable for CShaderAPIBase
vtable for CShaderAPIConVarAccessor
vtable for CShaderAPIDx8
vtable for CShaderBuffer<ID3DXBuffer>
vtable for CShaderDeviceBase
vtable for CShaderDeviceDx8
vtable for CShaderDeviceMgrBase
vtable for CShaderDeviceMgrDx8
vtable for CShaderManager
vtable for CShaderShadowDX8
vtable for CTempMeshDX8
vtable for CTransitionTable
vtable for CUtlCStringConversion
vtable for CUtlCharConversion
vtable for CUtlNoEscConversion
vtable for CVBAllocTracker
vtable for CVertexBufferBase
vtable for CVertexBufferDx8
vtable for ConCommand
vtable for ConVar
vtable for __cxxabiv1::__class_type_info
vtable for __cxxabiv1::__si_class_type_info
vtable for __cxxabiv1::__vmi_class_type_info
wRuKf
wn>Jj
yE>21CUtlCStringConversion
|^_[]
~2ffff.
